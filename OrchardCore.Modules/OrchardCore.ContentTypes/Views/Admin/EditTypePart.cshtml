@model EditTypePartViewModel
@using OrchardCore.ContentManagement.Metadata.Settings
@using OrchardCore.DisplayManagement;

@inject OrchardCore.DisplayManagement.Theming.IThemeManager ThemeManager
@inject OrchardCore.DisplayManagement.Descriptors.IShapeTableManager ShapeTableManager

@{
    var typePart = Model.TypePartDefinition;
    var theme = await ThemeManager.GetThemeAsync();
    var shapeTable = ShapeTableManager.GetShapeTable(theme?.Id);
    var editorShapes = shapeTable.ShapeBindings.Keys.Where(x => x.StartsWith(Model.TypePartDefinition.PartDefinition.Name + "_Option__", StringComparison.OrdinalIgnoreCase) || x.EndsWith(Model.TypePartDefinition.PartDefinition.Name + "_Option", StringComparison.OrdinalIgnoreCase));
}

<h1>@RenderTitleSegments(T["Edit Part - {0}", Model.DisplayName])</h1>

<div class="alert alert-success" role="alert">
    @T["Some part settings common to all types can also be defined at the <a href=\"{0}\">Part Definition</a> level.", Url.Action("EditPart", new { id = typePart.PartDefinition.Name })]
</div>

<form asp-action="EditTypePart">
    @Html.ValidationSummary()

    @if (typePart.PartDefinition.IsReusable())
    {
    <fieldset class="form-group">
        <div class="row col-sm-6">
            <label asp-for="DisplayName">@T["Display Name"]</label>
            <input asp-for="DisplayName" class="form-control" />
            <span class="hint">@T["Name of the part as it will be displayed in screens."]</span>
        </div>
    </fieldset>

    <fieldset class="form-group">
        <div class="row col-sm-6">
            <label asp-for="Description">@T["Description"]</label>
            <input asp-for="Description" class="form-control" />
            <span class="hint">@T["The description of the part as it will be displayed in screens."]</span>
        </div>
    </fieldset>
    }


@if (Model.Shape.Content != null)
{
    <fieldset class="form-group">
        @await DisplayAsync(Model.Shape.Content)
    </fieldset>

    @if (editorShapes.Any())
    {
    <div class="row">
        <fieldset class="form-group col-sm-6">
            <label asp-for="Editor">@T["What type of editor should be used?"]</label>
            <select asp-for="Editor" class="form-control" id="type-part-editor-select">
                @foreach (var editorShape in editorShapes)
                {
                    dynamic shape = await Factory.CreateAsync(editorShape);
                    shape.Editor = Model.Editor;
                    @await DisplayAsync(shape)
                }
            </select>
        </fieldset>
    </div>
    }

    <fieldset id="type-part-editor-container" class="form-group" style="display: none">
        @await DisplayAsync(Model.Shape.Editor)
    </fieldset>
}

    <fieldset class="form-group">
        <button class="btn btn-primary" type="submit" name="submit.Save" value="Save">@T["Save"]</button>
    </fieldset>
</form>

<script at="Foot" type="text/javascript">
    //<![CDATA[
    $(function () {
        $('.type-part-editor').hide();
        $('#type-part-editor-container').show();
        var typePartEditorSelect = $('#type-part-editor-select');
        $('.type-part-editor-' + typePartEditorSelect.val().toLowerCase()).show();         

        typePartEditorSelect.change(function () {
            $('.type-part-editor').hide();
            $('.type-part-editor-' + typePartEditorSelect.val().toLowerCase()).show();
        });
    });    
    //]]>
</script>