{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Orchard Core \u679c\u56ed\u6838\u5fc3 Orchard Core is a redevelopment of Orchard CMS on ASP.NET Core . Orchard Core\u662f[ASP.NET Core]\uff08https://www.asp.net/vnext\uff09\u4e0a[Orchard CMS]\uff08https://github.com/OrchardCMS/Orchard\uff09\u7684\u91cd\u65b0\u5f00\u53d1\u3002 Orchard Core consists of two different targets: Orchard Core\u7531\u4e24\u4e2a\u4e0d\u540c\u7684\u76ee\u6807\u7ec4\u6210\uff1a Orchard Core Framework : An application framework for building modular , multi-tenant applications on ASP.NET Core. Orchard Core Framework \uff1a\u7528\u4e8e\u5728ASP.NET Core\u4e0a\u6784\u5efa \u6a21\u5757\u5316 \uff0c \u591a\u79df\u6237 \u5e94\u7528\u7a0b\u5e8f\u7684\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u3002 Orchard Core CMS : A Web Content Management System (CMS) built on top of the Orchard Core Framework. Orchard Core CMS \uff1a\u57fa\u4e8eOrchard Core Framework\u6784\u5efa\u7684Web\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff08CMS\uff09\u3002 It\u2019s important to note the differences between the framework and the CMS. Some developers who want to develop SaaS applications will only be interested in the modular framework. Others who want to build administrable websites will focus on the CMS and build modules to enhance their sites or the whole ecosystem. \u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u6846\u67b6\u548cCMS\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u4e00\u4e9b\u60f3\u8981\u5f00\u53d1SaaS\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u4eba\u5458\u53ea\u5bf9\u6a21\u5757\u5316\u6846\u67b6\u611f\u5174\u8da3\u3002\u5176\u4ed6\u60f3\u8981\u6784\u5efa\u53ef\u7ba1\u7406\u7f51\u7ad9\u7684\u4eba\u5c06\u4e13\u6ce8\u4e8eCMS\u5e76\u6784\u5efa\u6a21\u5757\u4ee5\u589e\u5f3a\u5176\u7f51\u7ad9\u6216\u6574\u4e2a\u751f\u6001\u7cfb\u7edf\u3002 [\uff01[\u52a0\u5165\u804a\u5929https://gitter.im/OrchardCMS/OrchardCore](https://badges.gitter.im/Join%20Chat.svg\uff09]\uff08https://gitter.im/OrchardCMS/OrchardCore\uff1f utm_source =\u5fbd\u7ae0\uff06utm_medium =\u5fbd\u7ae0\uff06utm_campaign = PR-\u5fbd\u7ae0\uff06\u7684utm_content =\u5fbd\u7ae0\uff09 [\uff01[BSD-3-Clause License]\uff08https://img.shields.io/badge/license-BSD--3--Clause-blue.svg\uff09]\uff08https://github.com/OrchardCMS/OrchardCore /\u6591\u70b9/\u4e3b/ LICENSE\uff09 Building Software as a Service (SaaS) solutions with the Orchard Core Framework \u4f7f\u7528Orchard\u6838\u5fc3\u6846\u67b6\u6784\u5efa\u8f6f\u4ef6\u5373\u670d\u52a1\uff08SaaS\uff09\u89e3\u51b3\u65b9\u6848 It\u2019s very important to understand the Orchard Core Framework is distributed independently from the CMS on nuget.org. We\u2019ve made some sample applications on https://github.com/OrchardCMS/OrchardCore.Samples that will guide you on how to build modular and multi-tenant applications using just Orchard Core Framework without any of the CMS specific features. \u7406\u89e3Orchard\u6838\u5fc3\u6846\u67b6\u662f\u72ec\u7acb\u4e8enuget.org\u4e0a\u7684CMS\u5206\u53d1\u7684\uff0c\u8fd9\u4e00\u70b9\u975e\u5e38\u91cd\u8981\u3002\u6211\u4eec\u5728 https://github.com/OrchardCMS/OrchardCore.Samples \u4e0a\u5236\u4f5c\u4e86\u4e00\u4e9b\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u4eec\u5c06\u6307\u5bfc\u60a8\u5982\u4f55\u4f7f\u7528Orchard Core Framework\u6784\u5efa \u6a21\u5757\u5316 \u548c \u591a\u79df\u6237 \u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u4efb\u4f55CMS\u7279\u5b9a\u529f\u80fd\u3002 One of our goals is to enable community-based ecosystems of hosted applications which can be extended with modules, like e-commerce systems, blog engines and more. The Orchard Core Framework enables a modular environment that allows different teams to work on separate parts of an application and make components reusable across projects. \u6211\u4eec\u7684\u76ee\u6807\u4e4b\u4e00\u662f\u5b9e\u73b0\u6258\u7ba1\u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u4e8e\u793e\u533a\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u751f\u6001\u7cfb\u7edf\u53ef\u4ee5\u901a\u8fc7\u7535\u5b50\u5546\u52a1\u7cfb\u7edf\uff0c\u535a\u5ba2\u5f15\u64ce\u7b49\u6a21\u5757\u8fdb\u884c\u6269\u5c55\u3002 Orchard Core Framework\u652f\u6301\u6a21\u5757\u5316\u73af\u5883\uff0c\u5141\u8bb8\u4e0d\u540c\u7684\u56e2\u961f\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u90e8\u5206\u4e0a\u5de5\u4f5c\uff0c\u5e76\u4f7f\u7ec4\u4ef6\u53ef\u4ee5\u8de8\u9879\u76ee\u91cd\u7528\u3002 Building Website with Orchard Core CMS \u4f7f\u7528Orchard Core CMS\u6784\u5efa\u7f51\u7ad9 Orchard Core CMS is a complete rewrite of Orchard CMS on ASP.NET Core. It\u2019s not just a port as we wanted to improve the performance drastically and align as close as possible to the development models of ASP.NET Core. Orchard Core CMS\u5b8c\u5168\u91cd\u5199\u4e86ASP.NET Core\u4e0a\u7684Orchard CMS\u3002\u5b83\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7aef\u53e3\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5927\u5e45\u63d0\u9ad8\u6027\u80fd\u5e76\u5c3d\u53ef\u80fd\u5730\u4e0eASP.NET Core\u7684\u5f00\u53d1\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u3002 Performance . This might the most obvious change when you start using Orchard Core CMS. It\u2019s extremely fast for a CMS. So fast that we haven\u2019t even cared about working on an output cache module. To give you an idea, without caching Orchard Core CMS is around 20 times faster than the previous version. \u6027\u80fd \u3002\u5f53\u60a8\u5f00\u59cb\u4f7f\u7528Orchard Core CMS\u65f6\uff0c\u8fd9\u53ef\u80fd\u662f\u6700\u660e\u663e\u7684\u53d8\u5316\u3002 CMS\u7684\u901f\u5ea6\u975e\u5e38\u5feb\u3002\u5982\u6b64\u4e4b\u5feb\uff0c\u6211\u4eec\u751a\u81f3\u90fd\u4e0d\u5173\u5fc3\u5728\u8f93\u51fa\u7f13\u5b58\u6a21\u5757\u4e0a\u5de5\u4f5c\u3002\u4e3a\u4e86\u7ed9\u4f60\u4e00\u4e2a\u60f3\u6cd5\uff0c\u6ca1\u6709\u7f13\u5b58Orchard Core CMS\u6bd4\u4ee5\u524d\u7684\u7248\u672c\u5feb20\u500d\u5de6\u53f3\u3002 Portable . You can now develop and deploy Orchard Core CMS on Windows, Linux and macOS. We also have Docker images ready for use. \u4fbf\u643a\u3002\u60a8\u73b0\u5728\u53ef\u4ee5\u5728Windows\uff0cLinux\u548cmacOS\u4e0a\u5f00\u53d1\u548c\u90e8\u7f72Orchard Core CMS\u3002\u6211\u4eec\u8fd8\u51c6\u5907\u597d\u4f7f\u7528Docker\u955c\u50cf\u3002 Document database abstraction. Orchard Core CMS still requires a relational database, and is compatible with SQL Server, MySQL, PostgreSQL and SQLite, but it\u2019s now using a document abstraction (YesSql) that provides a document database API to store and query documents. This is a much better approach for CMS systems and helps performance significantly. \u6587\u6863\u6570\u636e\u5e93 \u62bd\u8c61\u3002 Orchard Core CMS\u4ecd\u7136\u9700\u8981\u4e00\u4e2a\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u5e76\u4e14\u4e0eSQL Server\uff0cMySQL\uff0cPostgreSQL\u548cSQLite\u517c\u5bb9\uff0c\u4f46\u5b83\u73b0\u5728\u4f7f\u7528\u6587\u6863\u62bd\u8c61\uff08YesSql\uff09\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6587\u6863\u6570\u636e\u5e93API\u6765\u5b58\u50a8\u548c\u67e5\u8be2\u6587\u6863\u3002\u5bf9\u4e8eCMS\u7cfb\u7edf\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u663e\u7740\u63d0\u9ad8\u6027\u80fd\u3002 NuGet Packages . Modules and themes are now shared as NuGet packages. Creating a new website with Orchard Core CMS is actually as simple as referencing a single meta package from the NuGet gallery. It also means that updating to a newer version only involves updating the version number of this package. NuGet\u5957\u9910 \u3002\u6a21\u5757\u548c\u4e3b\u9898\u73b0\u5728\u4f5c\u4e3aNuGet\u5305\u5171\u4eab\u3002\u4f7f\u7528Orchard Core CMS\u521b\u5efa\u65b0\u7f51\u7ad9\u5b9e\u9645\u4e0a\u5c31\u50cf\u5f15\u7528NuGet\u5e93\u4e2d\u7684\u5355\u4e2a\u5143\u8f6f\u4ef6\u5305\u4e00\u6837\u7b80\u5355\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u66f4\u65b0\u5230\u66f4\u65b0\u7248\u672c\u53ea\u6d89\u53ca\u66f4\u65b0\u6b64\u8f6f\u4ef6\u5305\u7684\u7248\u672c\u53f7\u3002 Live preview . When editing a content item, you can now see live how it will look like on your site, even before saving your content. And it also works for templates, where you can browse any page to inspect the impact of a change on templates as you type it. \u5b9e\u65f6\u9884\u89c8 \u3002\u5728\u7f16\u8f91\u5185\u5bb9\u9879\u76ee\u65f6\uff0c\u60a8\u73b0\u5728\u53ef\u4ee5\u76f4\u89c2\u5730\u770b\u5230\u5b83\u5728\u60a8\u7684\u7f51\u7ad9\u4e0a\u7684\u6837\u5b50\uff0c\u751a\u81f3\u5728\u4fdd\u5b58\u60a8\u7684\u5185\u5bb9\u4e4b\u524d\u3002\u5b83\u4e5f\u9002\u7528\u4e8e\u6a21\u677f\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u6d4f\u89c8\u4efb\u4f55\u9875\u9762\uff0c\u4ee5\u4fbf\u5728\u952e\u5165\u65f6\u68c0\u67e5\u66f4\u6539\u5bf9\u6a21\u677f\u7684\u5f71\u54cd\u3002 Liquid templates support . Editors can safely change the HTML templates with the Liquid template language. It was chosen as it\u2019s both very well documented (Jekyll, Shopify, \u2026) and secure. \u6db2\u4f53\u6a21\u677f\u652f\u6301 \u3002\u7f16\u8f91\u8005\u53ef\u4ee5\u4f7f\u7528Liquid\u6a21\u677f\u8bed\u8a00\u5b89\u5168\u5730\u66f4\u6539HTML\u6a21\u677f\u3002\u5b83\u88ab\u9009\u4e2d\uff0c\u56e0\u4e3a\u5b83\u6709\u5f88\u597d\u7684\u8bb0\u5f55\uff08Jekyll\uff0cShopify\uff0c...\uff09\u548c\u5b89\u5168\u3002 Custom queries . We wanted to provide a way for developers to access all their data as simply as possible. We created a module that lets you create custom ad-hoc SQL, and Lucene queries that can be re-used to display custom content, or exposed as API endpoints. You can use it to create efficient queries, or expose your data to SPA applications. \u81ea\u5b9a\u4e49\u67e5\u8be2 \u3002\u6211\u4eec\u5e0c\u671b\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e00\u79cd\u5c3d\u53ef\u80fd\u7b80\u5355\u5730\u8bbf\u95ee\u6240\u6709\u6570\u636e\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u6a21\u5757\uff0c\u5141\u8bb8\u60a8\u521b\u5efa\u81ea\u5b9a\u4e49\u4e34\u65f6SQL\uff0c\u4ee5\u53ca\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u4ee5\u663e\u793a\u81ea\u5b9a\u4e49\u5185\u5bb9\u6216\u4f5c\u4e3aAPI\u7aef\u70b9\u516c\u5f00\u7684Lucene\u67e5\u8be2\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u6709\u6548\u7684\u67e5\u8be2\uff0c\u6216\u5c06\u6570\u636e\u516c\u5f00\u7ed9SPA\u5e94\u7528\u7a0b\u5e8f\u3002 Recipes . Recipes are scripts that can contain content and metadata to build a website. You can now include binary files, and even use them to deploy your sites remotely from a staging to a production environment for instance. They can also be part of NuGet Packages, allowing you to ship predefined websites. \u98df\u8c31\u3002\u98df\u8c31\u662f\u53ef\u4ee5\u5305\u542b\u7528\u4e8e\u6784\u5efa\u7f51\u7ad9\u7684\u5185\u5bb9\u548c\u5143\u6570\u636e\u7684\u811a\u672c\u3002\u60a8\u73b0\u5728\u53ef\u4ee5\u5305\u542b\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u5c06\u7ad9\u70b9\u4ece\u767b\u53f0\u8fdc\u7a0b\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u3002\u5b83\u4eec\u4e5f\u53ef\u4ee5\u662fNuGet\u5305\u7684\u4e00\u90e8\u5206\uff0c\u5141\u8bb8\u60a8\u8fd0\u9001\u9884\u5b9a\u4e49\u7684\u7f51\u7ad9\u3002 Scalability . Because Orchard Core is a multi-tenant system, you can host as many websites as you want with a single deployment. A typical cloud machine can then host thousands of sites in parallel, with database, content, theme and user isolation. \u7684\u53ef\u6269\u5c55\u6027\u3002\u7531\u4e8eOrchard Core\u662f\u4e00\u4e2a\u591a\u79df\u6237\u7cfb\u7edf\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u901a\u8fc7\u5355\u4e2a\u90e8\u7f72\u6258\u7ba1\u4efb\u610f\u6570\u91cf\u7684\u7f51\u7ad9\u3002\u7136\u540e\uff0c\u5178\u578b\u7684\u4e91\u8ba1\u7b97\u673a\u53ef\u4ee5\u5e76\u884c\u6258\u7ba1\u6570\u5343\u4e2a\u7ad9\u70b9\uff0c\u5305\u62ec\u6570\u636e\u5e93\uff0c\u5185\u5bb9\uff0c\u4e3b\u9898\u548c\u7528\u6237\u9694\u79bb\u3002 Status \u72b6\u6001 The latest released version of Orchard Core is 1.0.0-beta2 . \u6700\u65b0\u53d1\u5e03\u7684Orchard Core\u7248\u672c\u662f\u201c1.0.0-beta2\u201d\u3002 The release notes can be found on https://github.com/OrchardCMS/OrchardCore/releases/tag/1.0.0-beta2 \u53d1\u884c\u8bf4\u660e\u53ef\u5728 https://github.com/OrchardCMS/OrchardCore/releases/tag/1.0.0-beta2 \u4e0a\u627e\u5230 The software is complete enough for external testing -- that is, by groups outside the organization or community that developed the software. Beta software is usually feature complete, but may have known limitations or bugs. Betas are either closed (private) and limited to a specific set of users, or they can be open to the general public. \u8be5\u8f6f\u4ef6\u8db3\u4ee5\u5b8c\u6210\u5916\u90e8\u6d4b\u8bd5 - \u5373\u7ec4\u7ec7\u5916\u90e8\u7684\u56e2\u4f53\u6216\u5f00\u53d1\u8f6f\u4ef6\u7684\u793e\u533a\u3002 Beta\u8f6f\u4ef6\u901a\u5e38\u529f\u80fd\u9f50\u5168\uff0c\u4f46\u53ef\u80fd\u6709\u5df2\u77e5\u7684\u9650\u5236\u6216\u9519\u8bef\u3002 Betas\u8981\u4e48\u662f\u5c01\u95ed\u7684\uff08\u79c1\u4eba\u7684\uff09\uff0c\u8981\u4e48\u9650\u4e8e\u7279\u5b9a\u7684\u4e00\u7ec4\u7528\u6237\uff0c\u8981\u4e48\u53ef\u4ee5\u5411\u516c\u4f17\u5f00\u653e\u3002 Here is a more detailed roadmap . \u8fd9\u662f\u4e00\u4e2a\u66f4\u8be6\u7ec6\u7684[\u8def\u7ebf\u56fe]\uff08https://github.com/OrchardCMS/OrchardCore/wiki/Roadmap\uff09\u3002 Getting Started \u5165\u95e8 Clone the repository using the command git clone https://github.com/OrchardCMS/OrchardCore.git and checkout the master branch for the latest release, or the dev branch for the cutting-edge version. \u4f7f\u7528\u547d\u4ee4 git clone https\uff1a// github.com / OrchardCMS / OrchardCore.git \u514b\u9686\u5b58\u50a8\u5e93\uff0c\u5e76\u67e5\u770b\u6700\u65b0\u7248\u672c\u7684 master \u5206\u652f\uff0c\u6216\u67e5\u770b\u6700\u65b0\u7248\u672c\u7684 dev \u5206\u652f\u3002 Watch the ASP.NET Community Standup video where Orchard Core was demonstrated: https://www.youtube.com/watch?v=HeDjv3blBjQ&t=2246s&list=PL1rZQsJPBU2StolNg0aqvQswETPcYnNKL&index=24 \u89c2\u770bOrchard Core\u6f14\u793a\u7684ASP.NET\u793e\u533a\u7ad9\u7acb\u89c6\u9891\uff1a https://www.youtube.com/watch?v=HeDjv3blBjQ\\u0026t=2246s\\u0026list=PL1rZQsJPBU2StolNg0aqvQswETPcYnNKL\\u0026index=24 Follow the samples on https://github.com/OrchardCMS/OrchardCore.Samples that will guide you on how to build modular and multi-tenant applications \u6309\u7167 https://github.com/OrchardCMS/OrchardCore.Samples \u4e0a\u7684\u793a\u4f8b\u8fdb\u884c\u64cd\u4f5c\uff0c\u8be5\u793a\u4f8b\u5c06\u6307\u5bfc\u60a8\u5982\u4f55\u6784\u5efa \u6a21\u5757\u5316 \u548c \u591a\u79df\u6237 \u5e94\u7528\u7a0b\u5e8f Command line \u547d\u4ee4\u884c Install the latest versions of the .NET Core SDK from this page https://www.microsoft.com/net/download/core \u4ece\u6b64\u9875\u9762 https://www.microsoft.com/net/download/core \u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684.NET Core SDK Call dotnet build . \u8c03\u7528 dotnet build \u3002 Next navigate to D:\\OrchardCore\\src\\OrchardCore.Cms.Web or wherever your respective folder is on the command line in Administrator mode. \u63a5\u4e0b\u6765\u5bfc\u822a\u5230 D\uff1a\\\\ OrchardCore \\\\ src \\\\ OrchardCore.Cms.Web \u6216\u7ba1\u7406\u5458\u6a21\u5f0f\u4e0b\u547d\u4ee4\u884c\u4e2d\u5404\u81ea\u6587\u4ef6\u5939\u7684\u4f4d\u7f6e\u3002 Call dotnet run . \u53eb dotnet run \u3002 Then open the http://localhost:5000 URL in your browser. \u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 http\uff1a// localhost\uff1a5000 URL\u3002 You can also read the Code Generation Templates documentation to create new applications from predefined templates. \u60a8\u8fd8\u53ef\u4ee5\u9605\u8bfb[\u4ee3\u7801\u751f\u6210\u6a21\u677f\u6587\u6863]\uff08\u6a21\u677f/\u81ea\u8ff0\u6587\u4ef6\uff09\u4ee5\u4ece\u9884\u5b9a\u4e49\u6a21\u677f\u521b\u5efa\u65b0\u5e94\u7528\u7a0b\u5e8f\u3002 Visual Studio 2017 Visual Studio 2017 Download Visual Studio 2017 (any edition) from https://www.visualstudio.com/downloads/ \u4ece https://www.visualstudio.com/downloads/ \u4e0b\u8f7dVisual Studio 2017\uff08\u4efb\u4f55\u7248\u672c\uff09 Open OrchardCore.sln and wait for Visual Studio to restore all Nuget packages \u6253\u5f00 OrchardCore.sln \u5e76\u7b49\u5f85Visual Studio\u6062\u590d\u6240\u6709Nuget\u5305 Ensure OrchardCore.Cms.Web is the startup project and run it \u786e\u4fdd OrchardCore.Cms.Web \u662f\u542f\u52a8\u9879\u76ee\u5e76\u8fd0\u884c\u5b83 Contributing \u7279\u7ea6 We currently follow these engineering guidelines . \u6211\u4eec\u76ee\u524d\u9075\u5faa\u8fd9\u4e9b[\u5de5\u7a0b\u6307\u5357]\uff08https://github.com/OrchardCMS/OrchardCore/wiki/Engineering-Guidelines\uff09\u3002","title":"About Orchard Core"},{"location":"#orchard-core","text":"","title":"Orchard Core"},{"location":"#_1","text":"Orchard Core is a redevelopment of Orchard CMS on ASP.NET Core . Orchard Core\u662f[ASP.NET Core]\uff08https://www.asp.net/vnext\uff09\u4e0a[Orchard CMS]\uff08https://github.com/OrchardCMS/Orchard\uff09\u7684\u91cd\u65b0\u5f00\u53d1\u3002 Orchard Core consists of two different targets: Orchard Core\u7531\u4e24\u4e2a\u4e0d\u540c\u7684\u76ee\u6807\u7ec4\u6210\uff1a Orchard Core Framework : An application framework for building modular , multi-tenant applications on ASP.NET Core. Orchard Core Framework \uff1a\u7528\u4e8e\u5728ASP.NET Core\u4e0a\u6784\u5efa \u6a21\u5757\u5316 \uff0c \u591a\u79df\u6237 \u5e94\u7528\u7a0b\u5e8f\u7684\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u3002 Orchard Core CMS : A Web Content Management System (CMS) built on top of the Orchard Core Framework. Orchard Core CMS \uff1a\u57fa\u4e8eOrchard Core Framework\u6784\u5efa\u7684Web\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff08CMS\uff09\u3002 It\u2019s important to note the differences between the framework and the CMS. Some developers who want to develop SaaS applications will only be interested in the modular framework. Others who want to build administrable websites will focus on the CMS and build modules to enhance their sites or the whole ecosystem. \u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u6846\u67b6\u548cCMS\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u4e00\u4e9b\u60f3\u8981\u5f00\u53d1SaaS\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u4eba\u5458\u53ea\u5bf9\u6a21\u5757\u5316\u6846\u67b6\u611f\u5174\u8da3\u3002\u5176\u4ed6\u60f3\u8981\u6784\u5efa\u53ef\u7ba1\u7406\u7f51\u7ad9\u7684\u4eba\u5c06\u4e13\u6ce8\u4e8eCMS\u5e76\u6784\u5efa\u6a21\u5757\u4ee5\u589e\u5f3a\u5176\u7f51\u7ad9\u6216\u6574\u4e2a\u751f\u6001\u7cfb\u7edf\u3002 [\uff01[\u52a0\u5165\u804a\u5929https://gitter.im/OrchardCMS/OrchardCore](https://badges.gitter.im/Join%20Chat.svg\uff09]\uff08https://gitter.im/OrchardCMS/OrchardCore\uff1f utm_source =\u5fbd\u7ae0\uff06utm_medium =\u5fbd\u7ae0\uff06utm_campaign = PR-\u5fbd\u7ae0\uff06\u7684utm_content =\u5fbd\u7ae0\uff09 [\uff01[BSD-3-Clause License]\uff08https://img.shields.io/badge/license-BSD--3--Clause-blue.svg\uff09]\uff08https://github.com/OrchardCMS/OrchardCore /\u6591\u70b9/\u4e3b/ LICENSE\uff09","title":"\u679c\u56ed\u6838\u5fc3"},{"location":"#building-software-as-a-service-saas-solutions-with-the-orchard-core-framework","text":"","title":"Building Software as a Service (SaaS) solutions with the Orchard Core Framework"},{"location":"#orchardsaas","text":"It\u2019s very important to understand the Orchard Core Framework is distributed independently from the CMS on nuget.org. We\u2019ve made some sample applications on https://github.com/OrchardCMS/OrchardCore.Samples that will guide you on how to build modular and multi-tenant applications using just Orchard Core Framework without any of the CMS specific features. \u7406\u89e3Orchard\u6838\u5fc3\u6846\u67b6\u662f\u72ec\u7acb\u4e8enuget.org\u4e0a\u7684CMS\u5206\u53d1\u7684\uff0c\u8fd9\u4e00\u70b9\u975e\u5e38\u91cd\u8981\u3002\u6211\u4eec\u5728 https://github.com/OrchardCMS/OrchardCore.Samples \u4e0a\u5236\u4f5c\u4e86\u4e00\u4e9b\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u4eec\u5c06\u6307\u5bfc\u60a8\u5982\u4f55\u4f7f\u7528Orchard Core Framework\u6784\u5efa \u6a21\u5757\u5316 \u548c \u591a\u79df\u6237 \u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u4efb\u4f55CMS\u7279\u5b9a\u529f\u80fd\u3002 One of our goals is to enable community-based ecosystems of hosted applications which can be extended with modules, like e-commerce systems, blog engines and more. The Orchard Core Framework enables a modular environment that allows different teams to work on separate parts of an application and make components reusable across projects. \u6211\u4eec\u7684\u76ee\u6807\u4e4b\u4e00\u662f\u5b9e\u73b0\u6258\u7ba1\u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u4e8e\u793e\u533a\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u751f\u6001\u7cfb\u7edf\u53ef\u4ee5\u901a\u8fc7\u7535\u5b50\u5546\u52a1\u7cfb\u7edf\uff0c\u535a\u5ba2\u5f15\u64ce\u7b49\u6a21\u5757\u8fdb\u884c\u6269\u5c55\u3002 Orchard Core Framework\u652f\u6301\u6a21\u5757\u5316\u73af\u5883\uff0c\u5141\u8bb8\u4e0d\u540c\u7684\u56e2\u961f\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u90e8\u5206\u4e0a\u5de5\u4f5c\uff0c\u5e76\u4f7f\u7ec4\u4ef6\u53ef\u4ee5\u8de8\u9879\u76ee\u91cd\u7528\u3002","title":"\u4f7f\u7528Orchard\u6838\u5fc3\u6846\u67b6\u6784\u5efa\u8f6f\u4ef6\u5373\u670d\u52a1\uff08SaaS\uff09\u89e3\u51b3\u65b9\u6848"},{"location":"#building-website-with-orchard-core-cms","text":"","title":"Building Website with Orchard Core CMS"},{"location":"#orchard-core-cms","text":"Orchard Core CMS is a complete rewrite of Orchard CMS on ASP.NET Core. It\u2019s not just a port as we wanted to improve the performance drastically and align as close as possible to the development models of ASP.NET Core. Orchard Core CMS\u5b8c\u5168\u91cd\u5199\u4e86ASP.NET Core\u4e0a\u7684Orchard CMS\u3002\u5b83\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7aef\u53e3\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5927\u5e45\u63d0\u9ad8\u6027\u80fd\u5e76\u5c3d\u53ef\u80fd\u5730\u4e0eASP.NET Core\u7684\u5f00\u53d1\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u3002 Performance . This might the most obvious change when you start using Orchard Core CMS. It\u2019s extremely fast for a CMS. So fast that we haven\u2019t even cared about working on an output cache module. To give you an idea, without caching Orchard Core CMS is around 20 times faster than the previous version. \u6027\u80fd \u3002\u5f53\u60a8\u5f00\u59cb\u4f7f\u7528Orchard Core CMS\u65f6\uff0c\u8fd9\u53ef\u80fd\u662f\u6700\u660e\u663e\u7684\u53d8\u5316\u3002 CMS\u7684\u901f\u5ea6\u975e\u5e38\u5feb\u3002\u5982\u6b64\u4e4b\u5feb\uff0c\u6211\u4eec\u751a\u81f3\u90fd\u4e0d\u5173\u5fc3\u5728\u8f93\u51fa\u7f13\u5b58\u6a21\u5757\u4e0a\u5de5\u4f5c\u3002\u4e3a\u4e86\u7ed9\u4f60\u4e00\u4e2a\u60f3\u6cd5\uff0c\u6ca1\u6709\u7f13\u5b58Orchard Core CMS\u6bd4\u4ee5\u524d\u7684\u7248\u672c\u5feb20\u500d\u5de6\u53f3\u3002 Portable . You can now develop and deploy Orchard Core CMS on Windows, Linux and macOS. We also have Docker images ready for use. \u4fbf\u643a\u3002\u60a8\u73b0\u5728\u53ef\u4ee5\u5728Windows\uff0cLinux\u548cmacOS\u4e0a\u5f00\u53d1\u548c\u90e8\u7f72Orchard Core CMS\u3002\u6211\u4eec\u8fd8\u51c6\u5907\u597d\u4f7f\u7528Docker\u955c\u50cf\u3002 Document database abstraction. Orchard Core CMS still requires a relational database, and is compatible with SQL Server, MySQL, PostgreSQL and SQLite, but it\u2019s now using a document abstraction (YesSql) that provides a document database API to store and query documents. This is a much better approach for CMS systems and helps performance significantly. \u6587\u6863\u6570\u636e\u5e93 \u62bd\u8c61\u3002 Orchard Core CMS\u4ecd\u7136\u9700\u8981\u4e00\u4e2a\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u5e76\u4e14\u4e0eSQL Server\uff0cMySQL\uff0cPostgreSQL\u548cSQLite\u517c\u5bb9\uff0c\u4f46\u5b83\u73b0\u5728\u4f7f\u7528\u6587\u6863\u62bd\u8c61\uff08YesSql\uff09\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6587\u6863\u6570\u636e\u5e93API\u6765\u5b58\u50a8\u548c\u67e5\u8be2\u6587\u6863\u3002\u5bf9\u4e8eCMS\u7cfb\u7edf\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u663e\u7740\u63d0\u9ad8\u6027\u80fd\u3002 NuGet Packages . Modules and themes are now shared as NuGet packages. Creating a new website with Orchard Core CMS is actually as simple as referencing a single meta package from the NuGet gallery. It also means that updating to a newer version only involves updating the version number of this package. NuGet\u5957\u9910 \u3002\u6a21\u5757\u548c\u4e3b\u9898\u73b0\u5728\u4f5c\u4e3aNuGet\u5305\u5171\u4eab\u3002\u4f7f\u7528Orchard Core CMS\u521b\u5efa\u65b0\u7f51\u7ad9\u5b9e\u9645\u4e0a\u5c31\u50cf\u5f15\u7528NuGet\u5e93\u4e2d\u7684\u5355\u4e2a\u5143\u8f6f\u4ef6\u5305\u4e00\u6837\u7b80\u5355\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u66f4\u65b0\u5230\u66f4\u65b0\u7248\u672c\u53ea\u6d89\u53ca\u66f4\u65b0\u6b64\u8f6f\u4ef6\u5305\u7684\u7248\u672c\u53f7\u3002 Live preview . When editing a content item, you can now see live how it will look like on your site, even before saving your content. And it also works for templates, where you can browse any page to inspect the impact of a change on templates as you type it. \u5b9e\u65f6\u9884\u89c8 \u3002\u5728\u7f16\u8f91\u5185\u5bb9\u9879\u76ee\u65f6\uff0c\u60a8\u73b0\u5728\u53ef\u4ee5\u76f4\u89c2\u5730\u770b\u5230\u5b83\u5728\u60a8\u7684\u7f51\u7ad9\u4e0a\u7684\u6837\u5b50\uff0c\u751a\u81f3\u5728\u4fdd\u5b58\u60a8\u7684\u5185\u5bb9\u4e4b\u524d\u3002\u5b83\u4e5f\u9002\u7528\u4e8e\u6a21\u677f\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u6d4f\u89c8\u4efb\u4f55\u9875\u9762\uff0c\u4ee5\u4fbf\u5728\u952e\u5165\u65f6\u68c0\u67e5\u66f4\u6539\u5bf9\u6a21\u677f\u7684\u5f71\u54cd\u3002 Liquid templates support . Editors can safely change the HTML templates with the Liquid template language. It was chosen as it\u2019s both very well documented (Jekyll, Shopify, \u2026) and secure. \u6db2\u4f53\u6a21\u677f\u652f\u6301 \u3002\u7f16\u8f91\u8005\u53ef\u4ee5\u4f7f\u7528Liquid\u6a21\u677f\u8bed\u8a00\u5b89\u5168\u5730\u66f4\u6539HTML\u6a21\u677f\u3002\u5b83\u88ab\u9009\u4e2d\uff0c\u56e0\u4e3a\u5b83\u6709\u5f88\u597d\u7684\u8bb0\u5f55\uff08Jekyll\uff0cShopify\uff0c...\uff09\u548c\u5b89\u5168\u3002 Custom queries . We wanted to provide a way for developers to access all their data as simply as possible. We created a module that lets you create custom ad-hoc SQL, and Lucene queries that can be re-used to display custom content, or exposed as API endpoints. You can use it to create efficient queries, or expose your data to SPA applications. \u81ea\u5b9a\u4e49\u67e5\u8be2 \u3002\u6211\u4eec\u5e0c\u671b\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e00\u79cd\u5c3d\u53ef\u80fd\u7b80\u5355\u5730\u8bbf\u95ee\u6240\u6709\u6570\u636e\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u6a21\u5757\uff0c\u5141\u8bb8\u60a8\u521b\u5efa\u81ea\u5b9a\u4e49\u4e34\u65f6SQL\uff0c\u4ee5\u53ca\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u4ee5\u663e\u793a\u81ea\u5b9a\u4e49\u5185\u5bb9\u6216\u4f5c\u4e3aAPI\u7aef\u70b9\u516c\u5f00\u7684Lucene\u67e5\u8be2\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u6709\u6548\u7684\u67e5\u8be2\uff0c\u6216\u5c06\u6570\u636e\u516c\u5f00\u7ed9SPA\u5e94\u7528\u7a0b\u5e8f\u3002 Recipes . Recipes are scripts that can contain content and metadata to build a website. You can now include binary files, and even use them to deploy your sites remotely from a staging to a production environment for instance. They can also be part of NuGet Packages, allowing you to ship predefined websites. \u98df\u8c31\u3002\u98df\u8c31\u662f\u53ef\u4ee5\u5305\u542b\u7528\u4e8e\u6784\u5efa\u7f51\u7ad9\u7684\u5185\u5bb9\u548c\u5143\u6570\u636e\u7684\u811a\u672c\u3002\u60a8\u73b0\u5728\u53ef\u4ee5\u5305\u542b\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u5c06\u7ad9\u70b9\u4ece\u767b\u53f0\u8fdc\u7a0b\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u3002\u5b83\u4eec\u4e5f\u53ef\u4ee5\u662fNuGet\u5305\u7684\u4e00\u90e8\u5206\uff0c\u5141\u8bb8\u60a8\u8fd0\u9001\u9884\u5b9a\u4e49\u7684\u7f51\u7ad9\u3002 Scalability . Because Orchard Core is a multi-tenant system, you can host as many websites as you want with a single deployment. A typical cloud machine can then host thousands of sites in parallel, with database, content, theme and user isolation. \u7684\u53ef\u6269\u5c55\u6027\u3002\u7531\u4e8eOrchard Core\u662f\u4e00\u4e2a\u591a\u79df\u6237\u7cfb\u7edf\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u901a\u8fc7\u5355\u4e2a\u90e8\u7f72\u6258\u7ba1\u4efb\u610f\u6570\u91cf\u7684\u7f51\u7ad9\u3002\u7136\u540e\uff0c\u5178\u578b\u7684\u4e91\u8ba1\u7b97\u673a\u53ef\u4ee5\u5e76\u884c\u6258\u7ba1\u6570\u5343\u4e2a\u7ad9\u70b9\uff0c\u5305\u62ec\u6570\u636e\u5e93\uff0c\u5185\u5bb9\uff0c\u4e3b\u9898\u548c\u7528\u6237\u9694\u79bb\u3002","title":"\u4f7f\u7528Orchard Core CMS\u6784\u5efa\u7f51\u7ad9"},{"location":"#status","text":"","title":"Status"},{"location":"#_2","text":"The latest released version of Orchard Core is 1.0.0-beta2 . \u6700\u65b0\u53d1\u5e03\u7684Orchard Core\u7248\u672c\u662f\u201c1.0.0-beta2\u201d\u3002 The release notes can be found on https://github.com/OrchardCMS/OrchardCore/releases/tag/1.0.0-beta2 \u53d1\u884c\u8bf4\u660e\u53ef\u5728 https://github.com/OrchardCMS/OrchardCore/releases/tag/1.0.0-beta2 \u4e0a\u627e\u5230 The software is complete enough for external testing -- that is, by groups outside the organization or community that developed the software. Beta software is usually feature complete, but may have known limitations or bugs. Betas are either closed (private) and limited to a specific set of users, or they can be open to the general public. \u8be5\u8f6f\u4ef6\u8db3\u4ee5\u5b8c\u6210\u5916\u90e8\u6d4b\u8bd5 - \u5373\u7ec4\u7ec7\u5916\u90e8\u7684\u56e2\u4f53\u6216\u5f00\u53d1\u8f6f\u4ef6\u7684\u793e\u533a\u3002 Beta\u8f6f\u4ef6\u901a\u5e38\u529f\u80fd\u9f50\u5168\uff0c\u4f46\u53ef\u80fd\u6709\u5df2\u77e5\u7684\u9650\u5236\u6216\u9519\u8bef\u3002 Betas\u8981\u4e48\u662f\u5c01\u95ed\u7684\uff08\u79c1\u4eba\u7684\uff09\uff0c\u8981\u4e48\u9650\u4e8e\u7279\u5b9a\u7684\u4e00\u7ec4\u7528\u6237\uff0c\u8981\u4e48\u53ef\u4ee5\u5411\u516c\u4f17\u5f00\u653e\u3002 Here is a more detailed roadmap . \u8fd9\u662f\u4e00\u4e2a\u66f4\u8be6\u7ec6\u7684[\u8def\u7ebf\u56fe]\uff08https://github.com/OrchardCMS/OrchardCore/wiki/Roadmap\uff09\u3002","title":"\u72b6\u6001"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#_3","text":"Clone the repository using the command git clone https://github.com/OrchardCMS/OrchardCore.git and checkout the master branch for the latest release, or the dev branch for the cutting-edge version. \u4f7f\u7528\u547d\u4ee4 git clone https\uff1a// github.com / OrchardCMS / OrchardCore.git \u514b\u9686\u5b58\u50a8\u5e93\uff0c\u5e76\u67e5\u770b\u6700\u65b0\u7248\u672c\u7684 master \u5206\u652f\uff0c\u6216\u67e5\u770b\u6700\u65b0\u7248\u672c\u7684 dev \u5206\u652f\u3002 Watch the ASP.NET Community Standup video where Orchard Core was demonstrated: https://www.youtube.com/watch?v=HeDjv3blBjQ&t=2246s&list=PL1rZQsJPBU2StolNg0aqvQswETPcYnNKL&index=24 \u89c2\u770bOrchard Core\u6f14\u793a\u7684ASP.NET\u793e\u533a\u7ad9\u7acb\u89c6\u9891\uff1a https://www.youtube.com/watch?v=HeDjv3blBjQ\\u0026t=2246s\\u0026list=PL1rZQsJPBU2StolNg0aqvQswETPcYnNKL\\u0026index=24 Follow the samples on https://github.com/OrchardCMS/OrchardCore.Samples that will guide you on how to build modular and multi-tenant applications \u6309\u7167 https://github.com/OrchardCMS/OrchardCore.Samples \u4e0a\u7684\u793a\u4f8b\u8fdb\u884c\u64cd\u4f5c\uff0c\u8be5\u793a\u4f8b\u5c06\u6307\u5bfc\u60a8\u5982\u4f55\u6784\u5efa \u6a21\u5757\u5316 \u548c \u591a\u79df\u6237 \u5e94\u7528\u7a0b\u5e8f","title":"\u5165\u95e8"},{"location":"#command-line","text":"","title":"Command line"},{"location":"#_4","text":"Install the latest versions of the .NET Core SDK from this page https://www.microsoft.com/net/download/core \u4ece\u6b64\u9875\u9762 https://www.microsoft.com/net/download/core \u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684.NET Core SDK Call dotnet build . \u8c03\u7528 dotnet build \u3002 Next navigate to D:\\OrchardCore\\src\\OrchardCore.Cms.Web or wherever your respective folder is on the command line in Administrator mode. \u63a5\u4e0b\u6765\u5bfc\u822a\u5230 D\uff1a\\\\ OrchardCore \\\\ src \\\\ OrchardCore.Cms.Web \u6216\u7ba1\u7406\u5458\u6a21\u5f0f\u4e0b\u547d\u4ee4\u884c\u4e2d\u5404\u81ea\u6587\u4ef6\u5939\u7684\u4f4d\u7f6e\u3002 Call dotnet run . \u53eb dotnet run \u3002 Then open the http://localhost:5000 URL in your browser. \u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 http\uff1a// localhost\uff1a5000 URL\u3002 You can also read the Code Generation Templates documentation to create new applications from predefined templates. \u60a8\u8fd8\u53ef\u4ee5\u9605\u8bfb[\u4ee3\u7801\u751f\u6210\u6a21\u677f\u6587\u6863]\uff08\u6a21\u677f/\u81ea\u8ff0\u6587\u4ef6\uff09\u4ee5\u4ece\u9884\u5b9a\u4e49\u6a21\u677f\u521b\u5efa\u65b0\u5e94\u7528\u7a0b\u5e8f\u3002","title":"\u547d\u4ee4\u884c"},{"location":"#visual-studio-2017","text":"","title":"Visual Studio 2017"},{"location":"#visual-studio-2017_1","text":"Download Visual Studio 2017 (any edition) from https://www.visualstudio.com/downloads/ \u4ece https://www.visualstudio.com/downloads/ \u4e0b\u8f7dVisual Studio 2017\uff08\u4efb\u4f55\u7248\u672c\uff09 Open OrchardCore.sln and wait for Visual Studio to restore all Nuget packages \u6253\u5f00 OrchardCore.sln \u5e76\u7b49\u5f85Visual Studio\u6062\u590d\u6240\u6709Nuget\u5305 Ensure OrchardCore.Cms.Web is the startup project and run it \u786e\u4fdd OrchardCore.Cms.Web \u662f\u542f\u52a8\u9879\u76ee\u5e76\u8fd0\u884c\u5b83","title":"Visual Studio 2017"},{"location":"#contributing","text":"","title":"Contributing"},{"location":"#_5","text":"We currently follow these engineering guidelines . \u6211\u4eec\u76ee\u524d\u9075\u5faa\u8fd9\u4e9b[\u5de5\u7a0b\u6307\u5357]\uff08https://github.com/OrchardCMS/OrchardCore/wiki/Engineering-Guidelines\uff09\u3002","title":"\u7279\u7ea6"},{"location":"OrchardCore/OrchardCore/Modules/","text":"Introduction \u4ecb\u7ecd The library Orchard Core Modules provides a mechanism to have a self-contained modular system where you can opt into a specific application framework and not have the design of your application be dictated to by such. \u56fe\u4e66\u9986Orchard\u6838\u5fc3\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u53ef\u4ee5\u62e5\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u6a21\u5757\u5316\u7cfb\u7edf\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u52a0\u5165\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\uff0c\u800c\u4e0d\u5fc5\u4f9d\u8d56\u4e8e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u3002 Getting started \u5165\u95e8 In Visual Studio, create a new web application. \u5728Visual Studio\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Web\u5e94\u7528\u7a0b\u5e8f\u3002 Install OrchardCore.Application.Cms.Targets into the project by managing the project NuGet packages. \u901a\u8fc7\u7ba1\u7406\u9879\u76eeNuGet\u5305\u5c06\u201cOrchardCore.Application.Cms.Targets\u201d\u5b89\u88c5\u5230\u9879\u76ee\u4e2d\u3002 Next, within Startup.cs , modify the ConfigureServices method, add this line: \u63a5\u4e0b\u6765\uff0c\u5728 Startup.cs \u4e2d\uff0c\u4fee\u6539 ConfigureServices \u65b9\u6cd5\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u884c\uff1a services.AddOrchardCms(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">services.AddOrchardCms\uff08\uff09;</font> Next, at the end of the Configure method, replace this block: \u63a5\u4e0b\u6765\uff0c\u5728 Configure \u65b9\u6cd5\u7684\u672b\u5c3e\uff0c\u66ff\u6362\u6b64\u5757\uff1a app.Run(async (context) => <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">app.Run\uff08async\uff08context\uff09=></font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> await context.Response.WriteAsync(\"Hello World!\"); }); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}\uff09;</font> with this line: \u7528\u8fd9\u4e00\u884c\uff1a app.UseOrchardCore(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">app.UseOrchardCore\uff08\uff09;</font> Additional frameworks \u5176\u4ed6\u6846\u67b6 You can add your favourite application framework to the pipeline, easily. The below implementations are designed to work side by side, so if you want Asp.Net Mvc and Nancy within your pipeline, just add both. \u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u559c\u7231\u7684\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u6dfb\u52a0\u5230\u7ba1\u9053\u4e2d\u3002\u4ee5\u4e0b\u5b9e\u73b0\u65e8\u5728\u5e76\u884c\u5de5\u4f5c\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u60f3\u5728\u7ba1\u9053\u4e2d\u4f7f\u7528Asp.Net Mvc\u548cNancy\uff0c\u53ea\u9700\u6dfb\u52a0\u4e24\u8005\u5373\u53ef\u3002 The modular framework wrappers below are designed to work directly with the modular application framework, so avoid just adding the raw framework and expect it to just work. \u4e0b\u9762\u7684\u6a21\u5757\u5316\u6846\u67b6\u5305\u88c5\u5668\u88ab\u8bbe\u8ba1\u4e3a\u76f4\u63a5\u4e0e\u6a21\u5757\u5316\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u4e00\u8d77\u5de5\u4f5c\uff0c\u56e0\u6b64\u907f\u514d\u6dfb\u52a0\u539f\u59cb\u6846\u67b6\u5e76\u671f\u671b\u5b83\u53ea\u662f\u5de5\u4f5c\u3002 Asp.Net Mvc Asp.Net Mvc Install OrchardCore.Application.Mvc.Targets into the project by managing the project NuGet packages. \u901a\u8fc7\u7ba1\u7406\u9879\u76eeNuGet\u5305\u5c06\u201cOrchardCore.Application.Mvc.Targets\u201d\u5b89\u88c5\u5230\u9879\u76ee\u4e2d\u3002 Next, within Startup.cs , modify the method ConfigureServices to look like this: \u63a5\u4e0b\u6765\uff0c\u5728 Startup.cs \u4e2d\uff0c\u5c06\u65b9\u6cd5 ConfigureServices \u4fee\u6539\u4e3a\u5982\u4e0b\u6240\u793a\uff1a // Add ASP.NET MVC and support for modules services .AddOrchardCore() .AddMvc() ; Note \uff01\u6ce8\u610f Note the addition of `.AddMvc()` Asp.Net Mvc is now part of your pipeline. Asp.Net Mvc\u73b0\u5728\u662f\u60a8\u7ba1\u9053\u7684\u4e00\u90e8\u5206\u3002 You can find a sample application here: OrchardCore.Mvc.Web \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u4e00\u4e2a\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\uff1a[OrchardCore.Mvc.Web]\uff08../../../ OrchardCore.Mvc.Web / Startup.cs\uff09 NancyFx NancyFx Install OrchardCore.Application.Nancy.Targets into the project by managing the project NuGet packages. \u901a\u8fc7\u7ba1\u7406\u9879\u76eeNuGet\u5305\u5c06\u201cOrchardCore.Application.Nancy.Targets\u201d\u5b89\u88c5\u5230\u9879\u76ee\u4e2d\u3002 Next, within Startup.cs , modify the method ConfigureServices to look like this: \u63a5\u4e0b\u6765\uff0c\u5728 Startup.cs \u4e2d\uff0c\u5c06\u65b9\u6cd5 ConfigureServices \u4fee\u6539\u4e3a\u5982\u4e0b\u6240\u793a\uff1a // Add Nancy and support for modules services .AddOrchardCore() .AddNancy() ; ); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09;</font> Note \uff01\u6ce8\u610f Note the addition of `.AddNancy()` NancyFx is now part of your pipeline. What this means is that Nancy modules will be automatically discovered. NancyFx\u73b0\u5728\u662f\u60a8\u7ba1\u9053\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u610f\u5473\u7740\u5357\u5e0c\u6a21\u5757\u5c06\u88ab\u81ea\u52a8\u53d1\u73b0\u3002 You can find an sample application here: OrchardCore.Nancy.Web \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u4e00\u4e2a\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\uff1a[OrchardCore.Nancy.Web]\uff08../../../ OrchardCore.Nancy.Web / Startup.cs\uff09","title":"Orchard Core Modules"},{"location":"OrchardCore/OrchardCore/Modules/#introduction","text":"","title":"Introduction"},{"location":"OrchardCore/OrchardCore/Modules/#_1","text":"The library Orchard Core Modules provides a mechanism to have a self-contained modular system where you can opt into a specific application framework and not have the design of your application be dictated to by such. \u56fe\u4e66\u9986Orchard\u6838\u5fc3\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u53ef\u4ee5\u62e5\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u6a21\u5757\u5316\u7cfb\u7edf\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u52a0\u5165\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\uff0c\u800c\u4e0d\u5fc5\u4f9d\u8d56\u4e8e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u3002","title":"\u4ecb\u7ecd"},{"location":"OrchardCore/OrchardCore/Modules/#getting-started","text":"","title":"Getting started"},{"location":"OrchardCore/OrchardCore/Modules/#_2","text":"In Visual Studio, create a new web application. \u5728Visual Studio\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Web\u5e94\u7528\u7a0b\u5e8f\u3002 Install OrchardCore.Application.Cms.Targets into the project by managing the project NuGet packages. \u901a\u8fc7\u7ba1\u7406\u9879\u76eeNuGet\u5305\u5c06\u201cOrchardCore.Application.Cms.Targets\u201d\u5b89\u88c5\u5230\u9879\u76ee\u4e2d\u3002 Next, within Startup.cs , modify the ConfigureServices method, add this line: \u63a5\u4e0b\u6765\uff0c\u5728 Startup.cs \u4e2d\uff0c\u4fee\u6539 ConfigureServices \u65b9\u6cd5\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u884c\uff1a services.AddOrchardCms(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">services.AddOrchardCms\uff08\uff09;</font> Next, at the end of the Configure method, replace this block: \u63a5\u4e0b\u6765\uff0c\u5728 Configure \u65b9\u6cd5\u7684\u672b\u5c3e\uff0c\u66ff\u6362\u6b64\u5757\uff1a app.Run(async (context) => <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">app.Run\uff08async\uff08context\uff09=></font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> await context.Response.WriteAsync(\"Hello World!\"); }); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}\uff09;</font> with this line: \u7528\u8fd9\u4e00\u884c\uff1a app.UseOrchardCore(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">app.UseOrchardCore\uff08\uff09;</font>","title":"\u5165\u95e8"},{"location":"OrchardCore/OrchardCore/Modules/#additional-frameworks","text":"","title":"Additional frameworks"},{"location":"OrchardCore/OrchardCore/Modules/#_3","text":"You can add your favourite application framework to the pipeline, easily. The below implementations are designed to work side by side, so if you want Asp.Net Mvc and Nancy within your pipeline, just add both. \u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u559c\u7231\u7684\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u6dfb\u52a0\u5230\u7ba1\u9053\u4e2d\u3002\u4ee5\u4e0b\u5b9e\u73b0\u65e8\u5728\u5e76\u884c\u5de5\u4f5c\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u60f3\u5728\u7ba1\u9053\u4e2d\u4f7f\u7528Asp.Net Mvc\u548cNancy\uff0c\u53ea\u9700\u6dfb\u52a0\u4e24\u8005\u5373\u53ef\u3002 The modular framework wrappers below are designed to work directly with the modular application framework, so avoid just adding the raw framework and expect it to just work. \u4e0b\u9762\u7684\u6a21\u5757\u5316\u6846\u67b6\u5305\u88c5\u5668\u88ab\u8bbe\u8ba1\u4e3a\u76f4\u63a5\u4e0e\u6a21\u5757\u5316\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u4e00\u8d77\u5de5\u4f5c\uff0c\u56e0\u6b64\u907f\u514d\u6dfb\u52a0\u539f\u59cb\u6846\u67b6\u5e76\u671f\u671b\u5b83\u53ea\u662f\u5de5\u4f5c\u3002","title":"\u5176\u4ed6\u6846\u67b6"},{"location":"OrchardCore/OrchardCore/Modules/#aspnet-mvc","text":"","title":"Asp.Net Mvc"},{"location":"OrchardCore/OrchardCore/Modules/#aspnet-mvc_1","text":"Install OrchardCore.Application.Mvc.Targets into the project by managing the project NuGet packages. \u901a\u8fc7\u7ba1\u7406\u9879\u76eeNuGet\u5305\u5c06\u201cOrchardCore.Application.Mvc.Targets\u201d\u5b89\u88c5\u5230\u9879\u76ee\u4e2d\u3002 Next, within Startup.cs , modify the method ConfigureServices to look like this: \u63a5\u4e0b\u6765\uff0c\u5728 Startup.cs \u4e2d\uff0c\u5c06\u65b9\u6cd5 ConfigureServices \u4fee\u6539\u4e3a\u5982\u4e0b\u6240\u793a\uff1a // Add ASP.NET MVC and support for modules services .AddOrchardCore() .AddMvc() ; Note \uff01\u6ce8\u610f Note the addition of `.AddMvc()` Asp.Net Mvc is now part of your pipeline. Asp.Net Mvc\u73b0\u5728\u662f\u60a8\u7ba1\u9053\u7684\u4e00\u90e8\u5206\u3002 You can find a sample application here: OrchardCore.Mvc.Web \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u4e00\u4e2a\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\uff1a[OrchardCore.Mvc.Web]\uff08../../../ OrchardCore.Mvc.Web / Startup.cs\uff09","title":"Asp.Net Mvc"},{"location":"OrchardCore/OrchardCore/Modules/#nancyfx","text":"","title":"NancyFx"},{"location":"OrchardCore/OrchardCore/Modules/#nancyfx_1","text":"Install OrchardCore.Application.Nancy.Targets into the project by managing the project NuGet packages. \u901a\u8fc7\u7ba1\u7406\u9879\u76eeNuGet\u5305\u5c06\u201cOrchardCore.Application.Nancy.Targets\u201d\u5b89\u88c5\u5230\u9879\u76ee\u4e2d\u3002 Next, within Startup.cs , modify the method ConfigureServices to look like this: \u63a5\u4e0b\u6765\uff0c\u5728 Startup.cs \u4e2d\uff0c\u5c06\u65b9\u6cd5 ConfigureServices \u4fee\u6539\u4e3a\u5982\u4e0b\u6240\u793a\uff1a // Add Nancy and support for modules services .AddOrchardCore() .AddNancy() ; ); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09;</font> Note \uff01\u6ce8\u610f Note the addition of `.AddNancy()` NancyFx is now part of your pipeline. What this means is that Nancy modules will be automatically discovered. NancyFx\u73b0\u5728\u662f\u60a8\u7ba1\u9053\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u610f\u5473\u7740\u5357\u5e0c\u6a21\u5757\u5c06\u88ab\u81ea\u52a8\u53d1\u73b0\u3002 You can find an sample application here: OrchardCore.Nancy.Web \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u4e00\u4e2a\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\uff1a[OrchardCore.Nancy.Web]\uff08../../../ OrchardCore.Nancy.Web / Startup.cs\uff09","title":"NancyFx"},{"location":"OrchardCore/OrchardCore.DisplayManagement/","text":"OrchardCore.DisplayManagement OrchardCore.DisplayManagement Placement files \u5c55\u793a\u4f4d\u7f6e\u6587\u4ef6 Any extension can contain an optional placement.json file providing custom placement logic. \u4efb\u4f55\u6269\u5c55\u90fd\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u53ef\u9009\u7684 placement.json \u6587\u4ef6\uff0c\u63d0\u4f9b\u81ea\u5b9a\u4e49\u653e\u7f6e\u903b\u8f91\u3002 Format \u683c\u5f0f A placement.json file contains an object whose properties are shape names. Each of these properties is an array of placement rules. placement.json \u6587\u4ef6\u5305\u542b\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u5c5e\u6027\u662f\u5f62\u72b6\u540d\u79f0\u3002\u6bcf\u4e2a\u5c5e\u6027\u90fd\u662f\u4e00\u7cfb\u5217\u653e\u7f6e\u89c4\u5219\u3002 In the following example, we describe the placement for the TextField and Parts_Contents_Publish shapes. \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u63cf\u8ff0\u4e86 TextField \u548c Parts_Contents_Publish \u5f62\u72b6\u7684\u4f4d\u7f6e\u3002 { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"TextField\": [ ... ], <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201c\u6587\u672c\u57df\u201d\uff1a [ ... ]\uff0c</font> \"Parts_Contents_Publish\" : [ ... ] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cParts_Contents_Publish\u201d\uff1a[...]</font> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> A placement rule contains two sets of data: \u653e\u7f6e\u89c4\u5219\u5305\u542b\u4e24\u7ec4\u6570\u636e\uff1a Filters \u8fc7\u6ee4\u5668 Defines what specific shapes are targeted. \u5b9a\u4e49\u76ee\u6807\u7279\u5b9a\u5f62\u72b6\u3002 Placement information \u5c55\u793a\u4f4d\u7f6e\u4fe1\u606f The placement information to apply when the filter is matched. \u5339\u914d\u8fc7\u6ee4\u5668\u65f6\u8981\u5e94\u7528\u7684\u653e\u7f6e\u4fe1\u606f\u3002 Currently you can filter shapes by: \u76ee\u524d\u60a8\u53ef\u4ee5\u6309\u4ee5\u4e0b\u65b9\u5f0f\u8fc7\u6ee4\u5f62\u72b6 Their original type, which is the property name of the placement rule, like TextField . \u5b83\u4eec\u7684\u539f\u59cb\u7c7b\u578b\uff0c\u5373\u653e\u7f6e\u89c4\u5219\u7684\u5c5e\u6027\u540d\u79f0\uff0c\u5982 TextField \u3002 display-type (Optional): The display type, like Summary and Detail for the most common ones. display-type \uff08\u53ef\u9009\uff09\uff1a\u663e\u793a\u7c7b\u578b\uff0c\u5982\u6700\u5e38\u89c1\u7684 Summary \u548c Detail \u3002 differentiator (Optional): The differentiator which is used to distinguish shape types that are reused for multiple elements, like field names. differentiator \uff08\u53ef\u9009\uff09\uff1a\u533a\u5206\u5668\uff0c\u7528\u4e8e\u533a\u5206\u91cd\u590d\u7528\u4e8e\u591a\u4e2a\u5143\u7d20\u7684\u5f62\u72b6\u7c7b\u578b\uff0c\u5982\u5b57\u6bb5\u540d\u79f0\u3002 Placement information consists of: \u5c55\u793a\u4f4d\u7f6e\u4fe1\u606f\u5305\u62ec\uff1a place (Optional): The actual location of the shape in the rendered zone. place \uff08\u53ef\u9009\uff09\uff1a\u6e32\u67d3\u533a\u57df\u4e2d\u5f62\u72b6\u7684\u5b9e\u9645\u4f4d\u7f6e\u3002 alternates (Optional): An array of alternate shape types to add to the current shape's metadata. alternates \uff08\u53ef\u9009\uff09\uff1a\u4e00\u7ec4\u5907\u7528\u5f62\u72b6\u7c7b\u578b\uff0c\u53ef\u6dfb\u52a0\u5230\u5f53\u524d\u5f62\u72b6\u7684\u5143\u6570\u636e\u4e2d\u3002 wrappers (Optional): An array of shape types to use as wrappers for the current shape. wrappers \uff08\u53ef\u9009\uff09\uff1a\u4e00\u7ec4\u5f62\u72b6\u7c7b\u578b\uff0c\u7528\u4f5c\u5f53\u524d\u5f62\u72b6\u7684\u5305\u88c5\u3002 shape (Optional): A substitution shape type. shape \uff08\u53ef\u9009\uff09\uff1a\u66ff\u6362\u5f62\u72b6\u7c7b\u578b\u3002 { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"TextField\": [ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201c\u6587\u672c\u57df\u201d\uff1a [</font> { \"display-type\": \"Detail\", <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cdisplay-type\u201d\uff1a\u201c\u7ec6\u8282\u201d\uff0c</font> \"differentiator\": \"Article-MyTextField\", <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201c\u5fae\u5206\u5668\u201d\uff1a\u201cArticle-MyTextField\u201d\uff0c</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> \"place\": \"Content\", <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201c\u5730\u65b9\u201d\uff1a\u201c\u5185\u5bb9\u201d\uff0c</font> \"alternates\": [ \"TextField_Title\" ], <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201calternates\u201d\uff1a[\u201cTextField_Title\u201d]\uff0c</font> \"wrappers\": [ \"TextField_Title\" ], <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cwrappers\u201d\uff1a[\u201cTextField_Title\u201d]\uff0c</font> \"shape\": \"AnotherShape\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201c\u5f62\u72b6\u201d\uff1a\u201cAnotherShape\u201d</font> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> ], <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">]</font> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Placing Fields \u653e\u7f6e\u5b57\u6bb5 Fields have a custom differentiator as their shape is used in many places. It is built using the Part it's contained Fields\u6709\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u533a\u5206\u56e0\u7d20\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5f62\u72b6\u5728\u5f88\u591a\u5730\u65b9\u4f7f\u7528\u3002\u5b83\u662f\u4f7f\u7528\u5b83\u5305\u542b\u7684\u90e8\u5206\u6784\u5efa\u7684 in, and the name of the field. For instance, if a field named MyField would be added to an Article content type, in\uff0c\u4ee5\u53ca\u8be5\u5b57\u6bb5\u7684\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u5982\u679c\u540d\u4e3a MyField \u7684\u5b57\u6bb5\u5c06\u6dfb\u52a0\u5230 Article \u5185\u5bb9\u7c7b\u578b\uff0c its differentiator would be Article.MyField . If a field named City was added to an Address part then its differentiator would \u5b83\u7684\u533a\u522b\u662f Article.MyField \u3002\u5982\u679c\u4e00\u4e2a\u540d\u4e3a City \u7684\u5b57\u6bb5\u88ab\u6dfb\u52a0\u5230 Address \u90e8\u5206\uff0c\u90a3\u4e48\u5b83\u7684\u533a\u5206\u7b26\u5c31\u4f1a be Address.City . \u662f Address.City \u3002 Shapes \u5f62\u72b6 What is a shape? \u4ec0\u4e48\u662f\u5f62\u72b6\uff1f Everything you need to know about Shapes is in this video . \u60a8\u9700\u8981\u4e86\u89e3\u7684\u6709\u5173Shapes\u7684\u6240\u6709\u4fe1\u606f\u90fd\u5728[\u6b64\u89c6\u9891]\uff08https://youtu.be/gKLjtCIs4GU\uff09\u4e2d\u3002 Tag Helpers \u6807\u8bb0\u52a9\u624b Manipulating shape metadata \u64cd\u7eb5\u5f62\u72b6\u5143\u6570\u636e It's possible to manipulate a shape's metadata by using the metadata tag helper as a child of the shape's tag helper. The metadata tag helper allows you to: \u901a\u8fc7\u4f7f\u7528 metadata \u6807\u7b7e\u52a9\u624b\u4f5c\u4e3a\u5f62\u72b6\u6807\u7b7e\u52a9\u624b\u7684\u5b50\u9879\uff0c\u53ef\u4ee5\u64cd\u7eb5\u5f62\u72b6\u7684\u5143\u6570\u636e\u3002\u5143\u6570\u636e\u6807\u7b7e\u52a9\u624b\u5141\u8bb8\u60a8\uff1a Change the display type \u66f4\u6539\u663e\u793a\u7c7b\u578b Add, remove, or clear alternates \u6dfb\u52a0\uff0c\u5220\u9664\u6216\u6e05\u9664\u66ff\u6362\u9879 Add, remove, or clear wrappers \u6dfb\u52a0\uff0c\u5220\u9664\u6216\u6e05\u9664\u5305\u88c5 Metadata tag helper example: \u5143\u6570\u636e\u6807\u8bb0\u5e2e\u52a9\u5668\u793a\u4f8b\uff1a <menu alias=\"alias:main-menu\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><menu alias =\u201calias\uff1amain-menu\u201d></font> <metadata display-type=\"summary\"> <clear-alternates /> <add-alternate name=\"Menu_Alternate1\" /> <add-alternate name=\"Menu_Alternate2\" /> <remove-alternate name=\"Menu_Alternate1\" /> <clear-wrappers /> <add-wrapper name=\"Menu_Wrapper1\" /> <add-wrapper name=\"Menu_Wrapper2\" /> <remove-wrapper name=\"Menu_Wrapper2\" /> </metadata> </menu> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></\u83dc\u5355></font> Date Time shapes \u65e5\u671f\u65f6\u95f4\u5f62\u72b6 DateTime \u7ea6\u4f1a\u65f6\u95f4 Renders a Date and Time value using the time zone of the request. \u4f7f\u7528\u8bf7\u6c42\u7684\u65f6\u533a\u5448\u73b0\u65e5\u671f\u548c\u65f6\u95f4\u503c\u3002 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Utc | DateTime? | The date and time to render. If not specified, the current time will be used. | | Utc | DateTime\uff1f |\u6e32\u67d3\u7684\u65e5\u671f\u548c\u65f6\u95f4\u3002\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5c06\u4f7f\u7528\u5f53\u524d\u65f6\u95f4\u3002 | | Format | string | The .NET format string. If not specified the long format dddd, MMMM d, yyyy h:mm:ss tt will be used. The accepted format can be found at https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx | | \u683c\u5f0f | string | .NET\u683c\u5f0f\u5b57\u7b26\u4e32\u3002\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5c06\u4f7f\u7528\u957f\u683c\u5f0f dddd\uff0cMMMM d\uff0cyyyy h\uff1amm\uff1ass tt \u3002\u53ef\u4ee5\u5728 https://msdn.microsoft.com/en-us/library/8kb3ddd4(v = vs.110\uff09.aspx \u627e\u5230\u53ef\u63a5\u53d7\u7684\u683c\u5f0f\u3002 Tag helper example: \u6807\u8bb0\u52a9\u624b\u793a\u4f8b\uff1a <datetime utc=\"@contentItem.CreatedUtc\" /> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><datetime utc =\u201c@ contentItem.CreatedUtc\u201d/></font> TimeSpan \u65f6\u95f4\u8de8\u5ea6 Renders a relative textual representation of a Date and Time interval. \u5448\u73b0\u65e5\u671f\u548c\u65f6\u95f4\u95f4\u9694\u7684\u76f8\u5bf9\u6587\u672c\u8868\u793a\u3002 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Utc | DateTime? | The initial date and time. If not specified, the current time will be used. | | Utc | DateTime\uff1f |\u521d\u59cb\u65e5\u671f\u548c\u65f6\u95f4\u3002\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5c06\u4f7f\u7528\u5f53\u524d\u65f6\u95f4\u3002 | | Origin | DateTime? | The current date and time. If not specified, the current time will be used. | | Origin | DateTime\uff1f |\u5f53\u524d\u7684\u65e5\u671f\u548c\u65f6\u95f4\u3002\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5c06\u4f7f\u7528\u5f53\u524d\u65f6\u95f4\u3002 | Tag helper example: \u6807\u8bb0\u52a9\u624b\u793a\u4f8b\uff1a <timespan utc=\"@contentItem.CreatedUtc\" /> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><timespan utc =\u201c@ contentItem.CreatedUtc\u201d/></font> Result: \u7ed3\u679c\uff1a 3 days ago <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">3\u5929\u524d</font> Shape differentiators \u5f62\u72b6\u5dee\u5f02\u5316 You can find information about shape differenciators in the Templates documentation \u60a8\u53ef\u4ee5\u5728[\u6a21\u677f\u6587\u6863]\u4e2d\u627e\u5230\u6709\u5173\u5f62\u72b6\u5dee\u5f02\u5668\u7684\u4fe1\u606f\uff08../../ OrchardCore.Modules / OrchardCore.Templates / README /\uff03contents-field-differentiator\uff09","title":"Placement"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#orchardcoredisplaymanagement","text":"","title":"OrchardCore.DisplayManagement"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#orchardcoredisplaymanagement_1","text":"","title":"OrchardCore.DisplayManagement"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#placement-files","text":"","title":"Placement files"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#_1","text":"Any extension can contain an optional placement.json file providing custom placement logic. \u4efb\u4f55\u6269\u5c55\u90fd\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u53ef\u9009\u7684 placement.json \u6587\u4ef6\uff0c\u63d0\u4f9b\u81ea\u5b9a\u4e49\u653e\u7f6e\u903b\u8f91\u3002","title":"\u5c55\u793a\u4f4d\u7f6e\u6587\u4ef6"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#format","text":"","title":"Format"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#_2","text":"A placement.json file contains an object whose properties are shape names. Each of these properties is an array of placement rules. placement.json \u6587\u4ef6\u5305\u542b\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u5c5e\u6027\u662f\u5f62\u72b6\u540d\u79f0\u3002\u6bcf\u4e2a\u5c5e\u6027\u90fd\u662f\u4e00\u7cfb\u5217\u653e\u7f6e\u89c4\u5219\u3002 In the following example, we describe the placement for the TextField and Parts_Contents_Publish shapes. \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u63cf\u8ff0\u4e86 TextField \u548c Parts_Contents_Publish \u5f62\u72b6\u7684\u4f4d\u7f6e\u3002 { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"TextField\": [ ... ], <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201c\u6587\u672c\u57df\u201d\uff1a [ ... ]\uff0c</font> \"Parts_Contents_Publish\" : [ ... ] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cParts_Contents_Publish\u201d\uff1a[...]</font> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> A placement rule contains two sets of data: \u653e\u7f6e\u89c4\u5219\u5305\u542b\u4e24\u7ec4\u6570\u636e\uff1a Filters \u8fc7\u6ee4\u5668 Defines what specific shapes are targeted. \u5b9a\u4e49\u76ee\u6807\u7279\u5b9a\u5f62\u72b6\u3002 Placement information \u5c55\u793a\u4f4d\u7f6e\u4fe1\u606f The placement information to apply when the filter is matched. \u5339\u914d\u8fc7\u6ee4\u5668\u65f6\u8981\u5e94\u7528\u7684\u653e\u7f6e\u4fe1\u606f\u3002 Currently you can filter shapes by: \u76ee\u524d\u60a8\u53ef\u4ee5\u6309\u4ee5\u4e0b\u65b9\u5f0f\u8fc7\u6ee4\u5f62\u72b6 Their original type, which is the property name of the placement rule, like TextField . \u5b83\u4eec\u7684\u539f\u59cb\u7c7b\u578b\uff0c\u5373\u653e\u7f6e\u89c4\u5219\u7684\u5c5e\u6027\u540d\u79f0\uff0c\u5982 TextField \u3002 display-type (Optional): The display type, like Summary and Detail for the most common ones. display-type \uff08\u53ef\u9009\uff09\uff1a\u663e\u793a\u7c7b\u578b\uff0c\u5982\u6700\u5e38\u89c1\u7684 Summary \u548c Detail \u3002 differentiator (Optional): The differentiator which is used to distinguish shape types that are reused for multiple elements, like field names. differentiator \uff08\u53ef\u9009\uff09\uff1a\u533a\u5206\u5668\uff0c\u7528\u4e8e\u533a\u5206\u91cd\u590d\u7528\u4e8e\u591a\u4e2a\u5143\u7d20\u7684\u5f62\u72b6\u7c7b\u578b\uff0c\u5982\u5b57\u6bb5\u540d\u79f0\u3002 Placement information consists of: \u5c55\u793a\u4f4d\u7f6e\u4fe1\u606f\u5305\u62ec\uff1a place (Optional): The actual location of the shape in the rendered zone. place \uff08\u53ef\u9009\uff09\uff1a\u6e32\u67d3\u533a\u57df\u4e2d\u5f62\u72b6\u7684\u5b9e\u9645\u4f4d\u7f6e\u3002 alternates (Optional): An array of alternate shape types to add to the current shape's metadata. alternates \uff08\u53ef\u9009\uff09\uff1a\u4e00\u7ec4\u5907\u7528\u5f62\u72b6\u7c7b\u578b\uff0c\u53ef\u6dfb\u52a0\u5230\u5f53\u524d\u5f62\u72b6\u7684\u5143\u6570\u636e\u4e2d\u3002 wrappers (Optional): An array of shape types to use as wrappers for the current shape. wrappers \uff08\u53ef\u9009\uff09\uff1a\u4e00\u7ec4\u5f62\u72b6\u7c7b\u578b\uff0c\u7528\u4f5c\u5f53\u524d\u5f62\u72b6\u7684\u5305\u88c5\u3002 shape (Optional): A substitution shape type. shape \uff08\u53ef\u9009\uff09\uff1a\u66ff\u6362\u5f62\u72b6\u7c7b\u578b\u3002 { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"TextField\": [ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201c\u6587\u672c\u57df\u201d\uff1a [</font> { \"display-type\": \"Detail\", <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cdisplay-type\u201d\uff1a\u201c\u7ec6\u8282\u201d\uff0c</font> \"differentiator\": \"Article-MyTextField\", <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201c\u5fae\u5206\u5668\u201d\uff1a\u201cArticle-MyTextField\u201d\uff0c</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> \"place\": \"Content\", <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201c\u5730\u65b9\u201d\uff1a\u201c\u5185\u5bb9\u201d\uff0c</font> \"alternates\": [ \"TextField_Title\" ], <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201calternates\u201d\uff1a[\u201cTextField_Title\u201d]\uff0c</font> \"wrappers\": [ \"TextField_Title\" ], <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cwrappers\u201d\uff1a[\u201cTextField_Title\u201d]\uff0c</font> \"shape\": \"AnotherShape\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201c\u5f62\u72b6\u201d\uff1a\u201cAnotherShape\u201d</font> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> ], <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">]</font> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u683c\u5f0f"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#placing-fields","text":"","title":"Placing Fields"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#_3","text":"Fields have a custom differentiator as their shape is used in many places. It is built using the Part it's contained Fields\u6709\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u533a\u5206\u56e0\u7d20\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5f62\u72b6\u5728\u5f88\u591a\u5730\u65b9\u4f7f\u7528\u3002\u5b83\u662f\u4f7f\u7528\u5b83\u5305\u542b\u7684\u90e8\u5206\u6784\u5efa\u7684 in, and the name of the field. For instance, if a field named MyField would be added to an Article content type, in\uff0c\u4ee5\u53ca\u8be5\u5b57\u6bb5\u7684\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u5982\u679c\u540d\u4e3a MyField \u7684\u5b57\u6bb5\u5c06\u6dfb\u52a0\u5230 Article \u5185\u5bb9\u7c7b\u578b\uff0c its differentiator would be Article.MyField . If a field named City was added to an Address part then its differentiator would \u5b83\u7684\u533a\u522b\u662f Article.MyField \u3002\u5982\u679c\u4e00\u4e2a\u540d\u4e3a City \u7684\u5b57\u6bb5\u88ab\u6dfb\u52a0\u5230 Address \u90e8\u5206\uff0c\u90a3\u4e48\u5b83\u7684\u533a\u5206\u7b26\u5c31\u4f1a be Address.City . \u662f Address.City \u3002","title":"\u653e\u7f6e\u5b57\u6bb5"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#shapes","text":"","title":"Shapes"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#_4","text":"","title":"\u5f62\u72b6"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#what-is-a-shape","text":"","title":"What is a shape?"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#_5","text":"Everything you need to know about Shapes is in this video . \u60a8\u9700\u8981\u4e86\u89e3\u7684\u6709\u5173Shapes\u7684\u6240\u6709\u4fe1\u606f\u90fd\u5728[\u6b64\u89c6\u9891]\uff08https://youtu.be/gKLjtCIs4GU\uff09\u4e2d\u3002","title":"\u4ec0\u4e48\u662f\u5f62\u72b6\uff1f"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#tag-helpers","text":"","title":"Tag Helpers"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#_6","text":"","title":"\u6807\u8bb0\u52a9\u624b"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#manipulating-shape-metadata","text":"","title":"Manipulating shape metadata"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#_7","text":"It's possible to manipulate a shape's metadata by using the metadata tag helper as a child of the shape's tag helper. The metadata tag helper allows you to: \u901a\u8fc7\u4f7f\u7528 metadata \u6807\u7b7e\u52a9\u624b\u4f5c\u4e3a\u5f62\u72b6\u6807\u7b7e\u52a9\u624b\u7684\u5b50\u9879\uff0c\u53ef\u4ee5\u64cd\u7eb5\u5f62\u72b6\u7684\u5143\u6570\u636e\u3002\u5143\u6570\u636e\u6807\u7b7e\u52a9\u624b\u5141\u8bb8\u60a8\uff1a Change the display type \u66f4\u6539\u663e\u793a\u7c7b\u578b Add, remove, or clear alternates \u6dfb\u52a0\uff0c\u5220\u9664\u6216\u6e05\u9664\u66ff\u6362\u9879 Add, remove, or clear wrappers \u6dfb\u52a0\uff0c\u5220\u9664\u6216\u6e05\u9664\u5305\u88c5 Metadata tag helper example: \u5143\u6570\u636e\u6807\u8bb0\u5e2e\u52a9\u5668\u793a\u4f8b\uff1a <menu alias=\"alias:main-menu\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><menu alias =\u201calias\uff1amain-menu\u201d></font> <metadata display-type=\"summary\"> <clear-alternates /> <add-alternate name=\"Menu_Alternate1\" /> <add-alternate name=\"Menu_Alternate2\" /> <remove-alternate name=\"Menu_Alternate1\" /> <clear-wrappers /> <add-wrapper name=\"Menu_Wrapper1\" /> <add-wrapper name=\"Menu_Wrapper2\" /> <remove-wrapper name=\"Menu_Wrapper2\" /> </metadata> </menu> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></\u83dc\u5355></font>","title":"\u64cd\u7eb5\u5f62\u72b6\u5143\u6570\u636e"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#date-time-shapes","text":"","title":"Date Time shapes"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#_8","text":"","title":"\u65e5\u671f\u65f6\u95f4\u5f62\u72b6"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#datetime","text":"","title":"DateTime"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#_9","text":"Renders a Date and Time value using the time zone of the request. \u4f7f\u7528\u8bf7\u6c42\u7684\u65f6\u533a\u5448\u73b0\u65e5\u671f\u548c\u65f6\u95f4\u503c\u3002 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Utc | DateTime? | The date and time to render. If not specified, the current time will be used. | | Utc | DateTime\uff1f |\u6e32\u67d3\u7684\u65e5\u671f\u548c\u65f6\u95f4\u3002\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5c06\u4f7f\u7528\u5f53\u524d\u65f6\u95f4\u3002 | | Format | string | The .NET format string. If not specified the long format dddd, MMMM d, yyyy h:mm:ss tt will be used. The accepted format can be found at https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx | | \u683c\u5f0f | string | .NET\u683c\u5f0f\u5b57\u7b26\u4e32\u3002\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5c06\u4f7f\u7528\u957f\u683c\u5f0f dddd\uff0cMMMM d\uff0cyyyy h\uff1amm\uff1ass tt \u3002\u53ef\u4ee5\u5728 https://msdn.microsoft.com/en-us/library/8kb3ddd4(v = vs.110\uff09.aspx \u627e\u5230\u53ef\u63a5\u53d7\u7684\u683c\u5f0f\u3002 Tag helper example: \u6807\u8bb0\u52a9\u624b\u793a\u4f8b\uff1a <datetime utc=\"@contentItem.CreatedUtc\" /> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><datetime utc =\u201c@ contentItem.CreatedUtc\u201d/></font>","title":"\u7ea6\u4f1a\u65f6\u95f4"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#timespan","text":"","title":"TimeSpan"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#_10","text":"Renders a relative textual representation of a Date and Time interval. \u5448\u73b0\u65e5\u671f\u548c\u65f6\u95f4\u95f4\u9694\u7684\u76f8\u5bf9\u6587\u672c\u8868\u793a\u3002 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Utc | DateTime? | The initial date and time. If not specified, the current time will be used. | | Utc | DateTime\uff1f |\u521d\u59cb\u65e5\u671f\u548c\u65f6\u95f4\u3002\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5c06\u4f7f\u7528\u5f53\u524d\u65f6\u95f4\u3002 | | Origin | DateTime? | The current date and time. If not specified, the current time will be used. | | Origin | DateTime\uff1f |\u5f53\u524d\u7684\u65e5\u671f\u548c\u65f6\u95f4\u3002\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5c06\u4f7f\u7528\u5f53\u524d\u65f6\u95f4\u3002 | Tag helper example: \u6807\u8bb0\u52a9\u624b\u793a\u4f8b\uff1a <timespan utc=\"@contentItem.CreatedUtc\" /> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><timespan utc =\u201c@ contentItem.CreatedUtc\u201d/></font> Result: \u7ed3\u679c\uff1a 3 days ago <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">3\u5929\u524d</font>","title":"\u65f6\u95f4\u8de8\u5ea6"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#shape-differentiators","text":"","title":"Shape differentiators"},{"location":"OrchardCore/OrchardCore.DisplayManagement/#_11","text":"You can find information about shape differenciators in the Templates documentation \u60a8\u53ef\u4ee5\u5728[\u6a21\u677f\u6587\u6863]\u4e2d\u627e\u5230\u6709\u5173\u5f62\u72b6\u5dee\u5f02\u5668\u7684\u4fe1\u606f\uff08../../ OrchardCore.Modules / OrchardCore.Templates / README /\uff03contents-field-differentiator\uff09","title":"\u5f62\u72b6\u5dee\u5f02\u5316"},{"location":"OrchardCore/OrchardCore.Logging.Serilog/readme/","text":"OrchardCore.Logging.Serilog OrchardCore.Logging.Serilog OrchardCore.Logging.Serilog integrates Serilog structured logging with OrchardCore How to use \u5982\u4f55\u4f7f\u7528 add a reference to OrchardCore.Logging.Serilog \u6dfb\u52a0\u5bf9'OrchardCore.Logging.Serilog`\u7684\u5f15\u7528 add serilog configuration in appsettings.json \u5728appsettings.json\u4e2d\u6dfb\u52a0serilog\u914d\u7f6e \"Serilog\": { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cSerilog\u201d\uff1a{</font> \"MinimumLevel\": { \"Default\": \"Warning\", \"Override\": { \"Default\": \"Warning\", \"Microsoft\": \"Error\", \"System\": \"Error\" } }, \"WriteTo\": [ { \"Name\": \"Console\", \"Args\": { \"theme\": \"Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console\", \"outputTemplate\": \"{Timestamp:HH:mm:ss}|{TenantName}|{RequestId}|{SourceContext}|{Level:u3}|{Message:lj}{NewLine}{Exception}\", \"restrictedToMinimumLevel\": \"Information\" } }, { \"Name\": \"RollingFile\", \"Args\": { \"pathFormat\": \"app_data/logs/orchard-log-{Date}.txt\", \"outputTemplate\": \"{Timestamp:yyyy-MM-dd HH:mm:ss.ffff}|{TenantName}|{RequestId}|{SourceContext}|{Level:u3}|{Message:lj}{NewLine}{Exception}\", \"restrictedToMinimumLevel\": \"Warning\" } } ] } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Modify program.cs to use Serilog \u4fee\u6539 program.cs \u4ee5\u4f7f\u7528Serilog public static IWebHost BuildWebHost(string[] args) => WebHost.CreateDefaultBuilder(args) .UseSerilogWeb() .UseStartup<Startup>() .Build(); Modify startup.cs to include TenantName in LogContext \u4fee\u6539 startup.cs \u4ee5\u5728LogContext\u4e2d\u5305\u542bTenantName using OrchardCore.Logging; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public void Configure(IApplicationBuilder app, IHostingEnvironment env) { if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); } app.UseStaticFiles(); app.UseOrchardCore(c => c.UseSerilogTenantNameLoggingMiddleware()); }","title":"Logging Serilog"},{"location":"OrchardCore/OrchardCore.Logging.Serilog/readme/#orchardcoreloggingserilog","text":"","title":"OrchardCore.Logging.Serilog"},{"location":"OrchardCore/OrchardCore.Logging.Serilog/readme/#orchardcoreloggingserilog_1","text":"OrchardCore.Logging.Serilog integrates Serilog structured logging with OrchardCore","title":"OrchardCore.Logging.Serilog"},{"location":"OrchardCore/OrchardCore.Logging.Serilog/readme/#how-to-use","text":"","title":"How to use"},{"location":"OrchardCore/OrchardCore.Logging.Serilog/readme/#_1","text":"add a reference to OrchardCore.Logging.Serilog \u6dfb\u52a0\u5bf9'OrchardCore.Logging.Serilog`\u7684\u5f15\u7528","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"OrchardCore/OrchardCore.Logging.Serilog/readme/#add-serilog-configuration-in-appsettingsjson","text":"","title":"add serilog configuration in appsettings.json"},{"location":"OrchardCore/OrchardCore.Logging.Serilog/readme/#appsettingsjsonserilog","text":"\"Serilog\": { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cSerilog\u201d\uff1a{</font> \"MinimumLevel\": { \"Default\": \"Warning\", \"Override\": { \"Default\": \"Warning\", \"Microsoft\": \"Error\", \"System\": \"Error\" } }, \"WriteTo\": [ { \"Name\": \"Console\", \"Args\": { \"theme\": \"Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console\", \"outputTemplate\": \"{Timestamp:HH:mm:ss}|{TenantName}|{RequestId}|{SourceContext}|{Level:u3}|{Message:lj}{NewLine}{Exception}\", \"restrictedToMinimumLevel\": \"Information\" } }, { \"Name\": \"RollingFile\", \"Args\": { \"pathFormat\": \"app_data/logs/orchard-log-{Date}.txt\", \"outputTemplate\": \"{Timestamp:yyyy-MM-dd HH:mm:ss.ffff}|{TenantName}|{RequestId}|{SourceContext}|{Level:u3}|{Message:lj}{NewLine}{Exception}\", \"restrictedToMinimumLevel\": \"Warning\" } } ] } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u5728appsettings.json\u4e2d\u6dfb\u52a0serilog\u914d\u7f6e"},{"location":"OrchardCore/OrchardCore.Logging.Serilog/readme/#modify-programcs-to-use-serilog","text":"","title":"Modify program.cs to use Serilog"},{"location":"OrchardCore/OrchardCore.Logging.Serilog/readme/#programcsserilog","text":"public static IWebHost BuildWebHost(string[] args) => WebHost.CreateDefaultBuilder(args) .UseSerilogWeb() .UseStartup<Startup>() .Build();","title":"\u4fee\u6539program.cs\u4ee5\u4f7f\u7528Serilog"},{"location":"OrchardCore/OrchardCore.Logging.Serilog/readme/#modify-startupcs-to-include-tenantname-in-logcontext","text":"","title":"Modify startup.cs to include TenantName in LogContext"},{"location":"OrchardCore/OrchardCore.Logging.Serilog/readme/#startupcslogcontexttenantname","text":"using OrchardCore.Logging; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public void Configure(IApplicationBuilder app, IHostingEnvironment env) { if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); } app.UseStaticFiles(); app.UseOrchardCore(c => c.UseSerilogTenantNameLoggingMiddleware()); }","title":"\u4fee\u6539startup.cs\u4ee5\u5728LogContext\u4e2d\u5305\u542bTenantName"},{"location":"OrchardCore.Modules/OrchardCore.Alias/","text":"Alias (OrchardCore.Alias) \u522b\u540d\uff08OrchardCore.Alias\uff09 This module allows you to specify friendly identifiers for your content items. \u6b64\u6a21\u5757\u5141\u8bb8\u60a8\u4e3a\u5185\u5bb9\u9879\u6307\u5b9a\u53cb\u597d\u6807\u8bc6\u7b26\u3002 Aliases can also be imported and exported, which means that they are persisted when running recipes or deploying content (whereas content item IDs are not). \u522b\u540d\u4e5f\u53ef\u4ee5\u5bfc\u5165\u548c\u5bfc\u51fa\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5728\u8fd0\u884c\u914d\u65b9\u6216\u90e8\u7f72\u5185\u5bb9\u65f6\u662f\u6301\u4e45\u7684\uff08\u800c\u5185\u5bb9\u9879ID\u4e0d\u662f\uff09\u3002 Alias Part \u522b\u540d\u90e8\u5206 Attach this part to a content type to specify aliases for your content items. \u5c06\u6b64\u90e8\u5206\u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u4ee5\u6307\u5b9a\u5185\u5bb9\u9879\u7684\u522b\u540d\u3002 Liquid \u6db2\u4f53 With Alias enabled, you can retrieve content by alias in your liquid views and templates: \u542f\u7528\u522b\u540d\u540e\uff0c\u60a8\u53ef\u4ee5\u5728\u6db2\u4f53\u89c6\u56fe\u548c\u6a21\u677f\u4e2d\u6309\u522b\u540d\u68c0\u7d22\u5185\u5bb9\uff1a {% assign my_content = Content[\"alias:footer-widget\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content [\u201calias\uff1afooter-widget\u201d]\uff05}</font> or \u8981\u4e48 {% assign my_content = Content.Alias[\"footer-widget\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content.Alias [\u201cfooter-widget\u201d]\uff05}</font>","title":"Alias"},{"location":"OrchardCore.Modules/OrchardCore.Alias/#alias-orchardcorealias","text":"","title":"Alias (OrchardCore.Alias)"},{"location":"OrchardCore.Modules/OrchardCore.Alias/#orchardcorealias","text":"This module allows you to specify friendly identifiers for your content items. \u6b64\u6a21\u5757\u5141\u8bb8\u60a8\u4e3a\u5185\u5bb9\u9879\u6307\u5b9a\u53cb\u597d\u6807\u8bc6\u7b26\u3002 Aliases can also be imported and exported, which means that they are persisted when running recipes or deploying content (whereas content item IDs are not). \u522b\u540d\u4e5f\u53ef\u4ee5\u5bfc\u5165\u548c\u5bfc\u51fa\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5728\u8fd0\u884c\u914d\u65b9\u6216\u90e8\u7f72\u5185\u5bb9\u65f6\u662f\u6301\u4e45\u7684\uff08\u800c\u5185\u5bb9\u9879ID\u4e0d\u662f\uff09\u3002","title":"\u522b\u540d\uff08OrchardCore.Alias\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Alias/#alias-part","text":"","title":"Alias Part"},{"location":"OrchardCore.Modules/OrchardCore.Alias/#_1","text":"Attach this part to a content type to specify aliases for your content items. \u5c06\u6b64\u90e8\u5206\u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u4ee5\u6307\u5b9a\u5185\u5bb9\u9879\u7684\u522b\u540d\u3002","title":"\u522b\u540d\u90e8\u5206"},{"location":"OrchardCore.Modules/OrchardCore.Alias/#liquid","text":"","title":"Liquid"},{"location":"OrchardCore.Modules/OrchardCore.Alias/#_2","text":"With Alias enabled, you can retrieve content by alias in your liquid views and templates: \u542f\u7528\u522b\u540d\u540e\uff0c\u60a8\u53ef\u4ee5\u5728\u6db2\u4f53\u89c6\u56fe\u548c\u6a21\u677f\u4e2d\u6309\u522b\u540d\u68c0\u7d22\u5185\u5bb9\uff1a {% assign my_content = Content[\"alias:footer-widget\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content [\u201calias\uff1afooter-widget\u201d]\uff05}</font> or \u8981\u4e48 {% assign my_content = Content.Alias[\"footer-widget\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content.Alias [\u201cfooter-widget\u201d]\uff05}</font>","title":"\u6db2\u4f53"},{"location":"OrchardCore.Modules/OrchardCore.Autoroute/","text":"Autoroute (OrchardCore.Autoroute) Autoroute\uff08OrchardCore.Autoroute\uff09 This module allows you to specify custom URLs (permalink) for your content items. \u6b64\u6a21\u5757\u5141\u8bb8\u60a8\u4e3a\u5185\u5bb9\u9879\u6307\u5b9a\u81ea\u5b9a\u4e49URL\uff08\u6c38\u4e45\u94fe\u63a5\uff09\u3002 Autoroute Part \u81ea\u52a8\u90e8\u4ef6 Attach this part to a content type to specify custom URLs to your content items. \u5c06\u6b64\u90e8\u5206\u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u4ee5\u6307\u5b9a\u5185\u5bb9\u9879\u7684\u81ea\u5b9a\u4e49URL\u3002 Then, go to the definition of a Content Type and edit the Autoroute Part: \u7136\u540e\uff0c\u8f6c\u5230\u5185\u5bb9\u7c7b\u578b\u7684\u5b9a\u4e49\u5e76\u7f16\u8f91\u81ea\u52a8\u90e8\u4ef6\uff1a Enter a Pattern using a Liquid expression that will represent the generated slug. \u4f7f\u7528Liquid\u8868\u8fbe\u5f0f\u8f93\u5165Pattern\uff0c\u8be5\u8868\u8fbe\u5f0f\u5c06\u8868\u793a\u751f\u6210\u7684slug\u3002 Example for a content with a TitlePart that will use it to generate the slug : \u5177\u6709TitlePart\u7684\u5185\u5bb9\u7684\u793a\u4f8b\u5c06\u4f7f\u7528\u5b83\u6765\u751f\u6210slug\uff1a {{ ContentItem | display_text | slugify }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{ContentItem | display_text | slugify}}</font> Example for a content with a ListPart and a TitlePart (ig: BlogPost nested in a Blog) that will use the container and the title to generate the slug: \u5177\u6709ListPart\u548cTitlePart\uff08ig\uff1aBlogPost\u5d4c\u5957\u5728\u535a\u5ba2\u4e2d\uff09\u7684\u5185\u5bb9\u793a\u4f8b\u5c06\u4f7f\u7528\u5bb9\u5668\u548c\u6807\u9898\u751f\u6210slug\uff1a {{ ContentItem | container | display_text | slugify }}/{{ ContentItem | display_text | slugify }}` <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{ContentItem |\u5bb9\u5668| display_text | slugify}} / {{ContentItem | display_text | slugify}}`</font> If you want to be able to enter a custom path when you edit a content item, check 'Allow custom path'. \u5982\u679c\u60a8\u5e0c\u671b\u5728\u7f16\u8f91\u5185\u5bb9\u9879\u65f6\u80fd\u591f\u8f93\u5165\u81ea\u5b9a\u4e49\u8def\u5f84\uff0c\u8bf7\u9009\u4e2d\u201c\u5141\u8bb8\u81ea\u5b9a\u4e49\u8def\u5f84\u201d\u3002 If you want to be able to set a content item as the homepage, check 'Show homepage options' \u5982\u679c\u60a8\u5e0c\u671b\u80fd\u591f\u5c06\u5185\u5bb9\u9879\u76ee\u8bbe\u7f6e\u4e3a\u4e3b\u9875\uff0c\u8bf7\u9009\u4e2d\u201c\u663e\u793a\u4e3b\u9875\u9009\u9879\u201d Autoroute Alias Autoroute Alias Content items with an Autoroute can be retrieved by URL anywhere you can retrieve content by alias (see example below). The syntax for this is slug:<URL> , e.g. slug:my-blog/my-blog-post . \u53ea\u8981\u60a8\u53ef\u4ee5\u901a\u8fc7\u522b\u540d\u68c0\u7d22\u5185\u5bb9\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7URL\u68c0\u7d22\u5177\u6709Autoroute\u7684\u5185\u5bb9\u9879\uff08\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b\uff09\u3002\u8fd9\u4e2a\u7684\u8bed\u6cd5\u662f slug\uff1a<URL> \uff0c\u4f8b\u5982 \u6bdb\u576f\uff1a\u6211-\u535a\u5ba2/\u6211 - \u535a\u5ba2 - POST \u3002 Liquid \u6db2\u4f53 With Autoroute enabled, you can retrieve content by URL in your liquid views and templates: \u542f\u7528Autoroute\u540e\uff0c\u60a8\u53ef\u4ee5\u5728\u6db2\u4f53\u89c6\u56fe\u548c\u6a21\u677f\u4e2d\u6309URL\u68c0\u7d22\u5185\u5bb9\uff1a {% assign my_content = Content[\"slug:my-blog/my-blog-post\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content [\u201cslug\uff1amy-blog / my-blog-post\u201d]\uff05}</font> or \u8981\u4e48 {% assign my_content = Content.Slug[\"my-blog/my-blog-post\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content.Slug [\u201cmy-blog / my-blog-post\u201d]\uff05}</font>","title":"Autoroute"},{"location":"OrchardCore.Modules/OrchardCore.Autoroute/#autoroute-orchardcoreautoroute","text":"","title":"Autoroute (OrchardCore.Autoroute)"},{"location":"OrchardCore.Modules/OrchardCore.Autoroute/#autorouteorchardcoreautoroute","text":"This module allows you to specify custom URLs (permalink) for your content items. \u6b64\u6a21\u5757\u5141\u8bb8\u60a8\u4e3a\u5185\u5bb9\u9879\u6307\u5b9a\u81ea\u5b9a\u4e49URL\uff08\u6c38\u4e45\u94fe\u63a5\uff09\u3002","title":"Autoroute\uff08OrchardCore.Autoroute\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Autoroute/#autoroute-part","text":"","title":"Autoroute Part"},{"location":"OrchardCore.Modules/OrchardCore.Autoroute/#_1","text":"Attach this part to a content type to specify custom URLs to your content items. \u5c06\u6b64\u90e8\u5206\u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u4ee5\u6307\u5b9a\u5185\u5bb9\u9879\u7684\u81ea\u5b9a\u4e49URL\u3002 Then, go to the definition of a Content Type and edit the Autoroute Part: \u7136\u540e\uff0c\u8f6c\u5230\u5185\u5bb9\u7c7b\u578b\u7684\u5b9a\u4e49\u5e76\u7f16\u8f91\u81ea\u52a8\u90e8\u4ef6\uff1a Enter a Pattern using a Liquid expression that will represent the generated slug. \u4f7f\u7528Liquid\u8868\u8fbe\u5f0f\u8f93\u5165Pattern\uff0c\u8be5\u8868\u8fbe\u5f0f\u5c06\u8868\u793a\u751f\u6210\u7684slug\u3002 Example for a content with a TitlePart that will use it to generate the slug : \u5177\u6709TitlePart\u7684\u5185\u5bb9\u7684\u793a\u4f8b\u5c06\u4f7f\u7528\u5b83\u6765\u751f\u6210slug\uff1a {{ ContentItem | display_text | slugify }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{ContentItem | display_text | slugify}}</font> Example for a content with a ListPart and a TitlePart (ig: BlogPost nested in a Blog) that will use the container and the title to generate the slug: \u5177\u6709ListPart\u548cTitlePart\uff08ig\uff1aBlogPost\u5d4c\u5957\u5728\u535a\u5ba2\u4e2d\uff09\u7684\u5185\u5bb9\u793a\u4f8b\u5c06\u4f7f\u7528\u5bb9\u5668\u548c\u6807\u9898\u751f\u6210slug\uff1a {{ ContentItem | container | display_text | slugify }}/{{ ContentItem | display_text | slugify }}` <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{ContentItem |\u5bb9\u5668| display_text | slugify}} / {{ContentItem | display_text | slugify}}`</font> If you want to be able to enter a custom path when you edit a content item, check 'Allow custom path'. \u5982\u679c\u60a8\u5e0c\u671b\u5728\u7f16\u8f91\u5185\u5bb9\u9879\u65f6\u80fd\u591f\u8f93\u5165\u81ea\u5b9a\u4e49\u8def\u5f84\uff0c\u8bf7\u9009\u4e2d\u201c\u5141\u8bb8\u81ea\u5b9a\u4e49\u8def\u5f84\u201d\u3002 If you want to be able to set a content item as the homepage, check 'Show homepage options' \u5982\u679c\u60a8\u5e0c\u671b\u80fd\u591f\u5c06\u5185\u5bb9\u9879\u76ee\u8bbe\u7f6e\u4e3a\u4e3b\u9875\uff0c\u8bf7\u9009\u4e2d\u201c\u663e\u793a\u4e3b\u9875\u9009\u9879\u201d","title":"\u81ea\u52a8\u90e8\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Autoroute/#autoroute-alias","text":"","title":"Autoroute Alias"},{"location":"OrchardCore.Modules/OrchardCore.Autoroute/#autoroute-alias_1","text":"Content items with an Autoroute can be retrieved by URL anywhere you can retrieve content by alias (see example below). The syntax for this is slug:<URL> , e.g. slug:my-blog/my-blog-post . \u53ea\u8981\u60a8\u53ef\u4ee5\u901a\u8fc7\u522b\u540d\u68c0\u7d22\u5185\u5bb9\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7URL\u68c0\u7d22\u5177\u6709Autoroute\u7684\u5185\u5bb9\u9879\uff08\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b\uff09\u3002\u8fd9\u4e2a\u7684\u8bed\u6cd5\u662f slug\uff1a<URL> \uff0c\u4f8b\u5982 \u6bdb\u576f\uff1a\u6211-\u535a\u5ba2/\u6211 - \u535a\u5ba2 - POST \u3002","title":"Autoroute Alias"},{"location":"OrchardCore.Modules/OrchardCore.Autoroute/#liquid","text":"","title":"Liquid"},{"location":"OrchardCore.Modules/OrchardCore.Autoroute/#_2","text":"With Autoroute enabled, you can retrieve content by URL in your liquid views and templates: \u542f\u7528Autoroute\u540e\uff0c\u60a8\u53ef\u4ee5\u5728\u6db2\u4f53\u89c6\u56fe\u548c\u6a21\u677f\u4e2d\u6309URL\u68c0\u7d22\u5185\u5bb9\uff1a {% assign my_content = Content[\"slug:my-blog/my-blog-post\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content [\u201cslug\uff1amy-blog / my-blog-post\u201d]\uff05}</font> or \u8981\u4e48 {% assign my_content = Content.Slug[\"my-blog/my-blog-post\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content.Slug [\u201cmy-blog / my-blog-post\u201d]\uff05}</font>","title":"\u6db2\u4f53"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/","text":"Content Fields (OrchardCore.ContentFields) \u5185\u5bb9\u5b57\u6bb5\uff08OrchardCore.ContentFields\uff09 Purpose \u76ee\u7684 This modules provides common content fields. \u6b64\u6a21\u5757\u63d0\u4f9b\u516c\u5171\u5185\u5bb9\u5b57\u6bb5\u3002 Available Fields \u53ef\u7528\u5b57\u6bb5 | Name | Properties | Shape Type | Shape Class | |\u540d\u79f0|\u5c5e\u6027|\u5f62\u72b6\u7c7b\u578b|\u5f62\u72b6\u7c7b| | --- | --- | --- | --- | | --- | --- | --- | --- | | BooleanField | Value (bool) | BooleanField | DisplayBooleanFieldViewModel | | BooleanField | \u4ef7\u503c\uff08\u5e03\u5c14\uff09 | BooleanField | DisplayBooleanFieldViewModel | | DateField | Value (DateTime?) | DateField | DisplayDateFieldViewModel | | DateField | Value\uff08DateTime\uff1f\uff09 | DateField | DisplayDateFieldViewModel | | DateTimeField | Value (DateTime?) | DateTimeField | DisplayDateTimeFieldViewModel | | DateTimeField | Value\uff08DateTime\uff1f\uff09 | DateTimeField | DisplayDateTimeFieldViewModel | | HtmlField | Html (string) | HtmlField | DisplayHtmlFieldViewModel | | HtmlField | Html\uff08string\uff09 | HtmlField | DisplayHtmlFieldViewModel | | LinkField | Url (string), Text (string) | LinkField | DisplayLinkFieldViewModel | | LinkField | url\uff08string\uff09\uff0cText\uff08string\uff09 | LinkField | DisplayLinkFieldViewModel | | NumericField | Value (decimal?) | NumericField | DisplayNumericFieldViewModel | | NumericField | \u503c\uff08\u5341\u8fdb\u5236\uff1f\uff09 | NumericField | DisplayNumericFieldViewModel | | TextField | Text (string) | TextField | DisplayTextFieldViewModel | | TextField | Text\uff08string\uff09 | TextField | DisplayTextFieldViewModel | | TimeField | Value (TimeSpan?) | TimeField | DisplayTimeFieldViewModel | | TimeField | \u503c\uff08TimeSpan\uff1f\uff09 | TimeField | DisplayTimeFieldViewModel | Usage \u7528\u6cd5 From a Content template, you can reference a field's value like this \u4ece\u201cContent\u201d\u6a21\u677f\u4e2d\uff0c\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u5f15\u7528\u5b57\u6bb5\u7684\u503c (if the content type is Article and has a Text Field named MyField ): \uff08\u5982\u679c\u5185\u5bb9\u7c7b\u578b\u662f\u201cArticle\u201d\u5e76\u4e14\u6709\u4e00\u4e2a\u540d\u4e3a\u201cMyField\u201d\u7684\u6587\u672c\u5b57\u6bb5\uff09\uff1a var fieldValue = Model.ContentItem.Content.Article.MyField.Text; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var fieldValue = Model.ContentItem.Content.Article.MyField.Text;</font> {{ Model.ContentItem.Content.Article.MyField.Value }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem.Content.Article.MyField.Value}}</font> From a field shape (see Shape Type in the table listing all the fields) you can also access properties specific to each view model. \u4ece\u5b57\u6bb5\u5f62\u72b6\uff08\u8bf7\u53c2\u9605\u5217\u51fa\u6240\u6709\u5b57\u6bb5\u7684\u8868\u4e2d\u7684\u5f62\u72b6\u7c7b\u578b\uff09\uff0c\u60a8\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u7279\u5b9a\u4e8e\u6bcf\u4e2a\u89c6\u56fe\u6a21\u578b\u7684\u5c5e\u6027\u3002 Common field properties \u5e38\u7528\u5b57\u6bb5\u5c5e\u6027 The convention for a field view model is to also expose these properties: \u5b57\u6bb5\u89c6\u56fe\u6a21\u578b\u7684\u7ea6\u5b9a\u662f\u4e5f\u516c\u5f00\u8fd9\u4e9b\u5c5e\u6027\uff1a | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --- | --- | | --- | --- | | Field | The ContentField. | | Field | ContentField\u3002 | | Part | The ContentPart that contains the field. | | Part |\u5305\u542b\u8be5\u5b57\u6bb5\u7684ContentPart\u3002 | | ContentPartFieldDefinition | The Content Part Field Definition that contains the part. Which also give access to the Content Type | | ContentPartFieldDefinition |\u5305\u542b\u90e8\u4ef6\u7684\u5185\u5bb9\u90e8\u4ef6\u5b57\u6bb5\u5b9a\u4e49\u3002\u8fd9\u4e5f\u63d0\u4f9b\u4e86\u5bf9\u5185\u5bb9\u7c7b\u578b\u7684\u8bbf\u95ee\u6743\u9650 Some view models have special properties that are computed from the actual field data and which are more useful for templating. \u67d0\u4e9b\u89c6\u56fe\u6a21\u578b\u5177\u6709\u6839\u636e\u5b9e\u9645\u5b57\u6bb5\u6570\u636e\u8ba1\u7b97\u7684\u7279\u6b8a\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5bf9\u6a21\u677f\u66f4\u6709\u7528\u3002 DisplayHtmlFieldViewModel DisplayHtmlFieldViewModel | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --- | --- | | --- | --- | | Html | The processed Html once all liquid tags are processed. | | Html |\u5904\u7406\u5b8c\u6240\u6709\u6db2\u4f53\u6807\u7b7e\u540e\u5904\u7406\u8fc7\u7684Html\u3002 | HtmlField Example HtmlField\u793a\u4f8b {{ Model.Html }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Html}}</font> or, to display the raw content before the tags are converted: \u6216\u8005\uff0c\u5728\u8f6c\u6362\u6807\u7b7e\u4e4b\u524d\u663e\u793a\u539f\u59cb\u5185\u5bb9\uff1a {{ Model.Field.Html }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Field.Html}}</font> DisplayDateTimeFieldViewModel DisplayDateTimeFieldViewModel | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --- | --- | | --- | --- | | LocalDateTime | The date time in the time zone of the site. | | LocalDateTime |\u7ad9\u70b9\u65f6\u533a\u4e2d\u7684\u65e5\u671f\u65f6\u95f4\u3002 | DateTimeField Example DateTimeField\u793a\u4f8b {{ Model.LocalDateTime }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.LocalDateTime}}</font> or, to display the UTC value before is it converted: \u6216\u8005\uff0c\u5728\u8f6c\u6362\u4e4b\u524d\u663e\u793aUTC\u503c\uff1a {{ Model.Field.Value }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Field.Value}}</font> Creating Custom Fields \u521b\u5efa\u81ea\u5b9a\u4e49\u5b57\u6bb5 What to extend \u4ec0\u4e48\u5ef6\u4f38 Before creating a new field the solution might be to provide a custom editor and formatter \u5728\u521b\u5efa\u65b0\u5b57\u6bb5\u4e4b\u524d\uff0c\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u662f\u63d0\u4f9b\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\u548c\u683c\u5f0f\u5316\u7a0b\u5e8f instead. \u4ee3\u66ff\u3002 A field should represent some specific physical data and logical data. The same field can be customized \u5b57\u6bb5\u5e94\u8868\u793a\u67d0\u4e9b\u7279\u5b9a\u7684\u7269\u7406\u6570\u636e\u548c\u903b\u8f91\u6570\u636e\u3002\u53ef\u4ee5\u81ea\u5b9a\u4e49\u76f8\u540c\u7684\u5b57\u6bb5 to be edited and rendered differently using both Editors and Formatters. Editors are shapes that can \u4f7f\u7528\u7f16\u8f91\u5668\u548c\u683c\u5f0f\u5316\u7a0b\u5e8f\u8fdb\u884c\u4e0d\u540c\u7684\u7f16\u8f91\u548c\u6e32\u67d3\u3002\u7f16\u8f91\u662f\u53ef\u4ee5\u7684\u5f62\u72b6 be used to edit a field differently, for instance the WYSIWYG HTML editor is a custom editor for the HTML \u7528\u4e8e\u4ee5\u4e0d\u540c\u65b9\u5f0f\u7f16\u8f91\u5b57\u6bb5\uff0c\u4f8b\u5982WYSIWYG HTML\u7f16\u8f91\u5668\u662fHTML\u7684\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668 field. Formatters are alternate shapes that can be used to render a field on the front end, for instance \u9886\u57df\u3002\u4f8b\u5982\uff0c\u683c\u5f0f\u5316\u7a0b\u5e8f\u662f\u53ef\u7528\u4e8e\u5728\u524d\u7aef\u6e32\u67d3\u5b57\u6bb5\u7684\u66ff\u4ee3\u5f62\u72b6 a Link field could be rendered as a Youtube video player. \u94fe\u63a5\u5b57\u6bb5\u53ef\u4ee5\u5448\u73b0\u4e3aYoutube\u89c6\u9891\u64ad\u653e\u5668\u3002 Model Class \u6a21\u578b\u7c7b Create a class inheriting from ContentField that will represent the state of your field. \u521b\u5efa\u4e00\u4e2a\u7ee7\u627f\u81ea\u201cContentField\u201d\u7684\u7c7b\uff0c\u5b83\u5c06\u8868\u793a\u5b57\u6bb5\u7684\u72b6\u6001\u3002 Its content will be serialized as part of the content item. \u5176\u5185\u5bb9\u5c06\u4f5c\u4e3a\u5185\u5bb9\u9879\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u5e8f\u5217\u5316\u3002 Json.NET classes can be used to customize the serialization. Json.NET\u7c7b\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u3002 Example: \u4f8b\uff1a public class TextField : ContentField <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u7c7bTextField\uff1aContentField</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> public string Text { get; set; } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> This class needs to be registered in the DI like this: \u8fd9\u4e2a\u7c7b\u9700\u8981\u5728DI\u4e2d\u6ce8\u518c\uff0c\u5982\u4e0b\u6240\u793a\uff1a services.AddSingleton<ContentField, TextField>(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">services.AddSingleton <ContentField\uff0cTextField>\uff08\uff09;</font> Display Driver \u663e\u793a\u9a71\u52a8\u7a0b\u5e8f The display driver is the component that drives how the field is displayed on the front end, edited on \u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u662f\u9a71\u52a8\u5b57\u6bb5\u5728\u524d\u7aef\u663e\u793a\u7684\u65b9\u5f0f\u7684\u7ec4\u4ef6\uff0c\u5728\u5176\u4e0a\u8fdb\u884c\u7f16\u8f91 the admin, updated and validated. \u7ba1\u7406\u5458\uff0c\u66f4\u65b0\u548c\u9a8c\u8bc1\u3002 Create a class inheriting from ContentFieldDisplayDriver<TextField> and implement the three methods \u521b\u5efa\u4e00\u4e2a\u7ee7\u627f\u81ea ContentFieldDisplayDriver <TextField> \u7684\u7c7b\uff0c\u5e76\u5b9e\u73b0\u8fd9\u4e09\u4e2a\u65b9\u6cd5 Display , Edit and DisplayAsync by looking at examples from this module. This class needs to be registered in the DI like this: \u8fd9\u4e2a\u7c7b\u9700\u8981\u5728DI\u4e2d\u6ce8\u518c\uff0c\u5982\u4e0b\u6240\u793a\uff1a services.AddScoped<IContentFieldDisplayDriver, TextFieldDisplayDriver>(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">services.AddScoped <IContentFieldDisplayDriver\uff0cTextFieldDisplayDriver>\uff08\uff09;</font> Creating Custom Editors \u521b\u5efa\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668 For each field, the convention is to create an alternate that can target different editors. To provide \u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u6bb5\uff0c\u7ea6\u5b9a\u662f\u521b\u5efa\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7f16\u8f91\u5668\u7684\u66ff\u4ee3\u3002\u63d0\u4f9b a new choice in the list of available editors for a field, create a new shape template that matches this \u5728\u5b57\u6bb5\u7684\u53ef\u7528\u7f16\u8f91\u5668\u5217\u8868\u4e2d\u7684\u65b0\u9009\u9879\uff0c\u521b\u5efa\u4e0e\u6b64\u5339\u914d\u7684\u65b0\u5f62\u72b6\u6a21\u677f template: {FIELDTYPE}_Option__{EDITORNAME} \u6a21\u677f\uff1a {FIELDTYPE} _Option __ {EDITORNAME} This shape type will match a template file named {FIELDTYPE}-{EDITORNAME}.Option.cshtml \u6b64\u5f62\u72b6\u7c7b\u578b\u5c06\u5339\u914d\u540d\u4e3a {FIELDTYPE} - {EDITORNAME} .Option.cshtml \u7684\u6a21\u677f\u6587\u4ef6 This template will need to render an <option> tag. Here is an example for a Wysiwyg options on the Html Field: \u8be5\u6a21\u677f\u9700\u8981\u5448\u73b0\u4e00\u4e2a <option> \u6807\u7b7e\u3002\u4ee5\u4e0b\u662fHtml\u5b57\u6bb5\u4e0aWysiwyg\u9009\u9879\u7684\u793a\u4f8b\uff1a @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> string currentEditor = Model.Editor; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <option value=\"Wysiwyg\" selected=\"@(currentEditor == \"Wysiwyg\")\">@T[\"Wysiwyg editor\"]</option> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><option value =\u201cWysiwyg\u201dselected =\u201c@\uff08currentEditor ==\u201dWysiwyg\u201c\uff09\u201d> @ T [\u201cWysiwyg\u7f16\u8f91\u201d] </ option></font> Then you can create the editor shape by adding a file named {FIELDTYPE}_Editor__{EDITORNAME} which is \u7136\u540e\u4f60\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a {FIELDTYPE} _Editor __ {EDITORNAME} \u7684\u6587\u4ef6\u6765\u521b\u5efa\u7f16\u8f91\u5668\u5f62\u72b6\u3002 represented by a template file named {FIELDTYPE}-{EDITORNAME}.Editor.cshtml . \u7531\u540d\u4e3a {FIELDTYPE} - {EDITORNAME} .Editor.cshtml \u7684\u6a21\u677f\u6587\u4ef6\u8868\u793a\u3002 For instance the filename for the Wysiwyg editor on the Html Field is named HtmlField-Wysiwyg.Editor.cshtml . \u4f8b\u5982\uff0cHtml\u5b57\u6bb5\u4e0aWysiwyg\u7f16\u8f91\u5668\u7684\u6587\u4ef6\u540d\u4e3a\u201cHtmlField-Wysiwyg.Editor.cshtml\u201d\u3002 CREDITS \u5b66\u5206 bootstrap-slider \u5f15\u5bfc\u6ed1\u5757 https://github.com/seiyria/bootstrap-slider https://github.com/seiyria/bootstrap-slider Copyright (c) 2017 Kyle Kemp, Rohit Kalkur, and contributors \u7248\u6743\u6240\u6709\uff08c\uff092017 Kyle Kemp\uff0cRohit Kalkur\u548c\u8d21\u732e\u8005 License: MIT \u6267\u7167\uff1a\u9ebb\u7701\u7406\u5de5\u5b66\u9662 Bootstrap Switch \u81ea\u4e3e\u5f00\u5173 https://github.com/Bttstrp/bootstrap-switch https://github.com/Bttstrp/bootstrap-switch Copyright (c) 2013-2015 The authors of Bootstrap Switch \u7248\u6743\u6240\u6709\uff08c\uff092013-2015 Bootstrap Switch\u7684\u4f5c\u8005 License: MIT \u6267\u7167\uff1a\u9ebb\u7701\u7406\u5de5\u5b66\u9662","title":"Content Fields"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#content-fields-orchardcorecontentfields","text":"","title":"Content Fields (OrchardCore.ContentFields)"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#orchardcorecontentfields","text":"","title":"\u5185\u5bb9\u5b57\u6bb5\uff08OrchardCore.ContentFields\uff09"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#purpose","text":"","title":"Purpose"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_1","text":"This modules provides common content fields. \u6b64\u6a21\u5757\u63d0\u4f9b\u516c\u5171\u5185\u5bb9\u5b57\u6bb5\u3002","title":"\u76ee\u7684"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#available-fields","text":"","title":"Available Fields"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_2","text":"| Name | Properties | Shape Type | Shape Class | |\u540d\u79f0|\u5c5e\u6027|\u5f62\u72b6\u7c7b\u578b|\u5f62\u72b6\u7c7b| | --- | --- | --- | --- | | --- | --- | --- | --- | | BooleanField | Value (bool) | BooleanField | DisplayBooleanFieldViewModel | | BooleanField | \u4ef7\u503c\uff08\u5e03\u5c14\uff09 | BooleanField | DisplayBooleanFieldViewModel | | DateField | Value (DateTime?) | DateField | DisplayDateFieldViewModel | | DateField | Value\uff08DateTime\uff1f\uff09 | DateField | DisplayDateFieldViewModel | | DateTimeField | Value (DateTime?) | DateTimeField | DisplayDateTimeFieldViewModel | | DateTimeField | Value\uff08DateTime\uff1f\uff09 | DateTimeField | DisplayDateTimeFieldViewModel | | HtmlField | Html (string) | HtmlField | DisplayHtmlFieldViewModel | | HtmlField | Html\uff08string\uff09 | HtmlField | DisplayHtmlFieldViewModel | | LinkField | Url (string), Text (string) | LinkField | DisplayLinkFieldViewModel | | LinkField | url\uff08string\uff09\uff0cText\uff08string\uff09 | LinkField | DisplayLinkFieldViewModel | | NumericField | Value (decimal?) | NumericField | DisplayNumericFieldViewModel | | NumericField | \u503c\uff08\u5341\u8fdb\u5236\uff1f\uff09 | NumericField | DisplayNumericFieldViewModel | | TextField | Text (string) | TextField | DisplayTextFieldViewModel | | TextField | Text\uff08string\uff09 | TextField | DisplayTextFieldViewModel | | TimeField | Value (TimeSpan?) | TimeField | DisplayTimeFieldViewModel | | TimeField | \u503c\uff08TimeSpan\uff1f\uff09 | TimeField | DisplayTimeFieldViewModel |","title":"\u53ef\u7528\u5b57\u6bb5"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#usage","text":"","title":"Usage"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_3","text":"From a Content template, you can reference a field's value like this \u4ece\u201cContent\u201d\u6a21\u677f\u4e2d\uff0c\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u5f15\u7528\u5b57\u6bb5\u7684\u503c (if the content type is Article and has a Text Field named MyField ): \uff08\u5982\u679c\u5185\u5bb9\u7c7b\u578b\u662f\u201cArticle\u201d\u5e76\u4e14\u6709\u4e00\u4e2a\u540d\u4e3a\u201cMyField\u201d\u7684\u6587\u672c\u5b57\u6bb5\uff09\uff1a var fieldValue = Model.ContentItem.Content.Article.MyField.Text; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var fieldValue = Model.ContentItem.Content.Article.MyField.Text;</font> {{ Model.ContentItem.Content.Article.MyField.Value }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem.Content.Article.MyField.Value}}</font> From a field shape (see Shape Type in the table listing all the fields) you can also access properties specific to each view model. \u4ece\u5b57\u6bb5\u5f62\u72b6\uff08\u8bf7\u53c2\u9605\u5217\u51fa\u6240\u6709\u5b57\u6bb5\u7684\u8868\u4e2d\u7684\u5f62\u72b6\u7c7b\u578b\uff09\uff0c\u60a8\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u7279\u5b9a\u4e8e\u6bcf\u4e2a\u89c6\u56fe\u6a21\u578b\u7684\u5c5e\u6027\u3002","title":"\u7528\u6cd5"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#common-field-properties","text":"","title":"Common field properties"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_4","text":"The convention for a field view model is to also expose these properties: \u5b57\u6bb5\u89c6\u56fe\u6a21\u578b\u7684\u7ea6\u5b9a\u662f\u4e5f\u516c\u5f00\u8fd9\u4e9b\u5c5e\u6027\uff1a | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --- | --- | | --- | --- | | Field | The ContentField. | | Field | ContentField\u3002 | | Part | The ContentPart that contains the field. | | Part |\u5305\u542b\u8be5\u5b57\u6bb5\u7684ContentPart\u3002 | | ContentPartFieldDefinition | The Content Part Field Definition that contains the part. Which also give access to the Content Type | | ContentPartFieldDefinition |\u5305\u542b\u90e8\u4ef6\u7684\u5185\u5bb9\u90e8\u4ef6\u5b57\u6bb5\u5b9a\u4e49\u3002\u8fd9\u4e5f\u63d0\u4f9b\u4e86\u5bf9\u5185\u5bb9\u7c7b\u578b\u7684\u8bbf\u95ee\u6743\u9650 Some view models have special properties that are computed from the actual field data and which are more useful for templating. \u67d0\u4e9b\u89c6\u56fe\u6a21\u578b\u5177\u6709\u6839\u636e\u5b9e\u9645\u5b57\u6bb5\u6570\u636e\u8ba1\u7b97\u7684\u7279\u6b8a\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5bf9\u6a21\u677f\u66f4\u6709\u7528\u3002","title":"\u5e38\u7528\u5b57\u6bb5\u5c5e\u6027"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#displayhtmlfieldviewmodel","text":"","title":"DisplayHtmlFieldViewModel"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#displayhtmlfieldviewmodel_1","text":"| Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --- | --- | | --- | --- | | Html | The processed Html once all liquid tags are processed. | | Html |\u5904\u7406\u5b8c\u6240\u6709\u6db2\u4f53\u6807\u7b7e\u540e\u5904\u7406\u8fc7\u7684Html\u3002 |","title":"DisplayHtmlFieldViewModel"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#htmlfield-example","text":"","title":"HtmlField Example"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#htmlfield","text":"{{ Model.Html }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Html}}</font> or, to display the raw content before the tags are converted: \u6216\u8005\uff0c\u5728\u8f6c\u6362\u6807\u7b7e\u4e4b\u524d\u663e\u793a\u539f\u59cb\u5185\u5bb9\uff1a {{ Model.Field.Html }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Field.Html}}</font>","title":"HtmlField\u793a\u4f8b"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#displaydatetimefieldviewmodel","text":"","title":"DisplayDateTimeFieldViewModel"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#displaydatetimefieldviewmodel_1","text":"| Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --- | --- | | --- | --- | | LocalDateTime | The date time in the time zone of the site. | | LocalDateTime |\u7ad9\u70b9\u65f6\u533a\u4e2d\u7684\u65e5\u671f\u65f6\u95f4\u3002 |","title":"DisplayDateTimeFieldViewModel"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#datetimefield-example","text":"","title":"DateTimeField Example"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#datetimefield","text":"{{ Model.LocalDateTime }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.LocalDateTime}}</font> or, to display the UTC value before is it converted: \u6216\u8005\uff0c\u5728\u8f6c\u6362\u4e4b\u524d\u663e\u793aUTC\u503c\uff1a {{ Model.Field.Value }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Field.Value}}</font>","title":"DateTimeField\u793a\u4f8b"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#creating-custom-fields","text":"","title":"Creating Custom Fields"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_5","text":"","title":"\u521b\u5efa\u81ea\u5b9a\u4e49\u5b57\u6bb5"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#what-to-extend","text":"","title":"What to extend"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_6","text":"Before creating a new field the solution might be to provide a custom editor and formatter \u5728\u521b\u5efa\u65b0\u5b57\u6bb5\u4e4b\u524d\uff0c\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u662f\u63d0\u4f9b\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\u548c\u683c\u5f0f\u5316\u7a0b\u5e8f instead. \u4ee3\u66ff\u3002 A field should represent some specific physical data and logical data. The same field can be customized \u5b57\u6bb5\u5e94\u8868\u793a\u67d0\u4e9b\u7279\u5b9a\u7684\u7269\u7406\u6570\u636e\u548c\u903b\u8f91\u6570\u636e\u3002\u53ef\u4ee5\u81ea\u5b9a\u4e49\u76f8\u540c\u7684\u5b57\u6bb5 to be edited and rendered differently using both Editors and Formatters. Editors are shapes that can \u4f7f\u7528\u7f16\u8f91\u5668\u548c\u683c\u5f0f\u5316\u7a0b\u5e8f\u8fdb\u884c\u4e0d\u540c\u7684\u7f16\u8f91\u548c\u6e32\u67d3\u3002\u7f16\u8f91\u662f\u53ef\u4ee5\u7684\u5f62\u72b6 be used to edit a field differently, for instance the WYSIWYG HTML editor is a custom editor for the HTML \u7528\u4e8e\u4ee5\u4e0d\u540c\u65b9\u5f0f\u7f16\u8f91\u5b57\u6bb5\uff0c\u4f8b\u5982WYSIWYG HTML\u7f16\u8f91\u5668\u662fHTML\u7684\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668 field. Formatters are alternate shapes that can be used to render a field on the front end, for instance \u9886\u57df\u3002\u4f8b\u5982\uff0c\u683c\u5f0f\u5316\u7a0b\u5e8f\u662f\u53ef\u7528\u4e8e\u5728\u524d\u7aef\u6e32\u67d3\u5b57\u6bb5\u7684\u66ff\u4ee3\u5f62\u72b6 a Link field could be rendered as a Youtube video player. \u94fe\u63a5\u5b57\u6bb5\u53ef\u4ee5\u5448\u73b0\u4e3aYoutube\u89c6\u9891\u64ad\u653e\u5668\u3002","title":"\u4ec0\u4e48\u5ef6\u4f38"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#model-class","text":"","title":"Model Class"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_7","text":"Create a class inheriting from ContentField that will represent the state of your field. \u521b\u5efa\u4e00\u4e2a\u7ee7\u627f\u81ea\u201cContentField\u201d\u7684\u7c7b\uff0c\u5b83\u5c06\u8868\u793a\u5b57\u6bb5\u7684\u72b6\u6001\u3002 Its content will be serialized as part of the content item. \u5176\u5185\u5bb9\u5c06\u4f5c\u4e3a\u5185\u5bb9\u9879\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u5e8f\u5217\u5316\u3002 Json.NET classes can be used to customize the serialization. Json.NET\u7c7b\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u3002 Example: \u4f8b\uff1a public class TextField : ContentField <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u7c7bTextField\uff1aContentField</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> public string Text { get; set; } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> This class needs to be registered in the DI like this: \u8fd9\u4e2a\u7c7b\u9700\u8981\u5728DI\u4e2d\u6ce8\u518c\uff0c\u5982\u4e0b\u6240\u793a\uff1a services.AddSingleton<ContentField, TextField>(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">services.AddSingleton <ContentField\uff0cTextField>\uff08\uff09;</font>","title":"\u6a21\u578b\u7c7b"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#display-driver","text":"","title":"Display Driver"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_8","text":"The display driver is the component that drives how the field is displayed on the front end, edited on \u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u662f\u9a71\u52a8\u5b57\u6bb5\u5728\u524d\u7aef\u663e\u793a\u7684\u65b9\u5f0f\u7684\u7ec4\u4ef6\uff0c\u5728\u5176\u4e0a\u8fdb\u884c\u7f16\u8f91 the admin, updated and validated. \u7ba1\u7406\u5458\uff0c\u66f4\u65b0\u548c\u9a8c\u8bc1\u3002 Create a class inheriting from ContentFieldDisplayDriver<TextField> and implement the three methods \u521b\u5efa\u4e00\u4e2a\u7ee7\u627f\u81ea ContentFieldDisplayDriver <TextField> \u7684\u7c7b\uff0c\u5e76\u5b9e\u73b0\u8fd9\u4e09\u4e2a\u65b9\u6cd5 Display , Edit and DisplayAsync by looking at examples from this module. This class needs to be registered in the DI like this: \u8fd9\u4e2a\u7c7b\u9700\u8981\u5728DI\u4e2d\u6ce8\u518c\uff0c\u5982\u4e0b\u6240\u793a\uff1a services.AddScoped<IContentFieldDisplayDriver, TextFieldDisplayDriver>(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">services.AddScoped <IContentFieldDisplayDriver\uff0cTextFieldDisplayDriver>\uff08\uff09;</font>","title":"\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#creating-custom-editors","text":"","title":"Creating Custom Editors"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_9","text":"For each field, the convention is to create an alternate that can target different editors. To provide \u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u6bb5\uff0c\u7ea6\u5b9a\u662f\u521b\u5efa\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7f16\u8f91\u5668\u7684\u66ff\u4ee3\u3002\u63d0\u4f9b a new choice in the list of available editors for a field, create a new shape template that matches this \u5728\u5b57\u6bb5\u7684\u53ef\u7528\u7f16\u8f91\u5668\u5217\u8868\u4e2d\u7684\u65b0\u9009\u9879\uff0c\u521b\u5efa\u4e0e\u6b64\u5339\u914d\u7684\u65b0\u5f62\u72b6\u6a21\u677f template: {FIELDTYPE}_Option__{EDITORNAME} \u6a21\u677f\uff1a {FIELDTYPE} _Option __ {EDITORNAME} This shape type will match a template file named {FIELDTYPE}-{EDITORNAME}.Option.cshtml \u6b64\u5f62\u72b6\u7c7b\u578b\u5c06\u5339\u914d\u540d\u4e3a {FIELDTYPE} - {EDITORNAME} .Option.cshtml \u7684\u6a21\u677f\u6587\u4ef6 This template will need to render an <option> tag. Here is an example for a Wysiwyg options on the Html Field: \u8be5\u6a21\u677f\u9700\u8981\u5448\u73b0\u4e00\u4e2a <option> \u6807\u7b7e\u3002\u4ee5\u4e0b\u662fHtml\u5b57\u6bb5\u4e0aWysiwyg\u9009\u9879\u7684\u793a\u4f8b\uff1a @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> string currentEditor = Model.Editor; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <option value=\"Wysiwyg\" selected=\"@(currentEditor == \"Wysiwyg\")\">@T[\"Wysiwyg editor\"]</option> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><option value =\u201cWysiwyg\u201dselected =\u201c@\uff08currentEditor ==\u201dWysiwyg\u201c\uff09\u201d> @ T [\u201cWysiwyg\u7f16\u8f91\u201d] </ option></font> Then you can create the editor shape by adding a file named {FIELDTYPE}_Editor__{EDITORNAME} which is \u7136\u540e\u4f60\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a {FIELDTYPE} _Editor __ {EDITORNAME} \u7684\u6587\u4ef6\u6765\u521b\u5efa\u7f16\u8f91\u5668\u5f62\u72b6\u3002 represented by a template file named {FIELDTYPE}-{EDITORNAME}.Editor.cshtml . \u7531\u540d\u4e3a {FIELDTYPE} - {EDITORNAME} .Editor.cshtml \u7684\u6a21\u677f\u6587\u4ef6\u8868\u793a\u3002 For instance the filename for the Wysiwyg editor on the Html Field is named HtmlField-Wysiwyg.Editor.cshtml . \u4f8b\u5982\uff0cHtml\u5b57\u6bb5\u4e0aWysiwyg\u7f16\u8f91\u5668\u7684\u6587\u4ef6\u540d\u4e3a\u201cHtmlField-Wysiwyg.Editor.cshtml\u201d\u3002","title":"\u521b\u5efa\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#credits","text":"","title":"CREDITS"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_10","text":"","title":"\u5b66\u5206"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#bootstrap-slider","text":"","title":"bootstrap-slider"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_11","text":"https://github.com/seiyria/bootstrap-slider https://github.com/seiyria/bootstrap-slider Copyright (c) 2017 Kyle Kemp, Rohit Kalkur, and contributors \u7248\u6743\u6240\u6709\uff08c\uff092017 Kyle Kemp\uff0cRohit Kalkur\u548c\u8d21\u732e\u8005 License: MIT \u6267\u7167\uff1a\u9ebb\u7701\u7406\u5de5\u5b66\u9662","title":"\u5f15\u5bfc\u6ed1\u5757"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#bootstrap-switch","text":"","title":"Bootstrap Switch"},{"location":"OrchardCore.Modules/OrchardCore.ContentFields/#_12","text":"https://github.com/Bttstrp/bootstrap-switch https://github.com/Bttstrp/bootstrap-switch Copyright (c) 2013-2015 The authors of Bootstrap Switch \u7248\u6743\u6240\u6709\uff08c\uff092013-2015 Bootstrap Switch\u7684\u4f5c\u8005 License: MIT \u6267\u7167\uff1a\u9ebb\u7701\u7406\u5de5\u5b66\u9662","title":"\u81ea\u4e3e\u5f00\u5173"},{"location":"OrchardCore.Modules/OrchardCore.ContentPreview/","text":"Content Preview (OrchardCore.ContentPreview) \u5185\u5bb9\u9884\u89c8\uff08OrchardCore.ContentPreview\uff09 Content preview allows you to display the result that will be rendered on the front in a separate window while you are editing a content in the admin. \u901a\u8fc7\u5185\u5bb9\u9884\u89c8\uff0c\u60a8\u53ef\u4ee5\u5728\u7f16\u8f91\u7ba1\u7406\u5458\u4e2d\u7684\u5185\u5bb9\u65f6\u663e\u793a\u5c06\u5728\u5355\u72ec\u7a97\u53e3\u4e2d\u5728\u6b63\u9762\u5448\u73b0\u7684\u7ed3\u679c\u3002 A Preview button is available in the action buttons when you create or edit a content item. \u521b\u5efa\u6216\u7f16\u8f91\u5185\u5bb9\u9879\u65f6\uff0c\u64cd\u4f5c\u6309\u94ae\u4e2d\u4f1a\u51fa\u73b0\u201c\u9884\u89c8\u201d\u6309\u94ae\u3002 CREDITS \u5b66\u5206 JavaScript Cookie JavaScript Cookie https://github.com/js-cookie/js-cookie https://github.com/js-cookie/js-cookie Copyright 2006, 2015 Klaus Hartl & Fagner Brack \u7248\u6743\u6240\u67092006,2015 Klaus Hartl\u548cFagner Brack Released under the MIT license \u6839\u636eMIT\u8bb8\u53ef\u8bc1\u53d1\u5e03","title":"Content Preview"},{"location":"OrchardCore.Modules/OrchardCore.ContentPreview/#content-preview-orchardcorecontentpreview","text":"","title":"Content Preview (OrchardCore.ContentPreview)"},{"location":"OrchardCore.Modules/OrchardCore.ContentPreview/#orchardcorecontentpreview","text":"Content preview allows you to display the result that will be rendered on the front in a separate window while you are editing a content in the admin. \u901a\u8fc7\u5185\u5bb9\u9884\u89c8\uff0c\u60a8\u53ef\u4ee5\u5728\u7f16\u8f91\u7ba1\u7406\u5458\u4e2d\u7684\u5185\u5bb9\u65f6\u663e\u793a\u5c06\u5728\u5355\u72ec\u7a97\u53e3\u4e2d\u5728\u6b63\u9762\u5448\u73b0\u7684\u7ed3\u679c\u3002 A Preview button is available in the action buttons when you create or edit a content item. \u521b\u5efa\u6216\u7f16\u8f91\u5185\u5bb9\u9879\u65f6\uff0c\u64cd\u4f5c\u6309\u94ae\u4e2d\u4f1a\u51fa\u73b0\u201c\u9884\u89c8\u201d\u6309\u94ae\u3002","title":"\u5185\u5bb9\u9884\u89c8\uff08OrchardCore.ContentPreview\uff09"},{"location":"OrchardCore.Modules/OrchardCore.ContentPreview/#credits","text":"","title":"CREDITS"},{"location":"OrchardCore.Modules/OrchardCore.ContentPreview/#_1","text":"","title":"\u5b66\u5206"},{"location":"OrchardCore.Modules/OrchardCore.ContentPreview/#javascript-cookie","text":"","title":"JavaScript Cookie"},{"location":"OrchardCore.Modules/OrchardCore.ContentPreview/#javascript-cookie_1","text":"https://github.com/js-cookie/js-cookie https://github.com/js-cookie/js-cookie Copyright 2006, 2015 Klaus Hartl & Fagner Brack \u7248\u6743\u6240\u67092006,2015 Klaus Hartl\u548cFagner Brack Released under the MIT license \u6839\u636eMIT\u8bb8\u53ef\u8bc1\u53d1\u5e03","title":"JavaScript Cookie"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/","text":"Content Types (OrchardCore.ContentTypes) \u5185\u5bb9\u7c7b\u578b\uff08OrchardCore.ContentTypes\uff09 View Components \u67e5\u770b\u7ec4\u4ef6 SelectContentTypes SelectContentTypes Renders an editor to select a list of content types. \u5448\u73b0\u7f16\u8f91\u5668\u4ee5\u9009\u62e9\u5185\u5bb9\u7c7b\u578b\u5217\u8868\u3002 It can optionally filter content types of a specific stereotype. \u5b83\u53ef\u4ee5\u9009\u62e9\u8fc7\u6ee4\u7279\u5b9a\u6784\u9020\u578b\u7684\u5185\u5bb9\u7c7b\u578b\u3002 The editor returns the selection as a string[] on the model. \u7f16\u8f91\u5668\u5c06\u9009\u62e9\u4f5c\u4e3a\u6a21\u578b\u4e0a\u7684 string [] \u8fd4\u56de\u3002 Parameters \u53c2\u6570 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- | ----------- | | --------- | ---- | ----------- | selectedContentTypes | string[] | The list of content types that should be marked as selected when rendering the editor. | | selectedContentTypes | string [] |\u5728\u5448\u73b0\u7f16\u8f91\u5668\u65f6\u5e94\u6807\u8bb0\u4e3a\u5df2\u9009\u62e9\u7684\u5185\u5bb9\u7c7b\u578b\u5217\u8868\u3002 | | htmlName | string | The name of the model property to bind the result to. | htmlName | string |\u8981\u5c06\u7ed3\u679c\u7ed1\u5b9a\u5230\u7684model\u5c5e\u6027\u7684\u540d\u79f0\u3002 | stereotype (optional) | string | A stereotype name to filter the list of content types to be able to select. | | stereotype \uff08\u53ef\u9009\uff09| string |\u7528\u4e8e\u8fc7\u6ee4\u53ef\u4ee5\u9009\u62e9\u7684\u5185\u5bb9\u7c7b\u578b\u5217\u8868\u7684\u6784\u9020\u578b\u540d\u79f0\u3002 | Sample \u6837\u54c1 @await Component.InvokeAsync(\"SelectContentTypes\", new { selectedContentTypes = Model.ContainedContentTypes, htmlName = Html.NameFor(m => m.ContainedContentTypes) }) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@await Component.InvokeAsync\uff08\u201cSelectContentTypes\u201d\uff0cnew {selectedContentTypes = Model.ContainedContentTypes\uff0chtmlName = Html.NameFor\uff08m => m.ContainedContentTypes\uff09}\uff09</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> Migrations \u8fc1\u79fb Migration classes can be used to alter the content type definitions, like by adding new types , or configuring their parts and fields . \u8fc1\u79fb\u7c7b\u53ef\u7528\u4e8e\u66f4\u6539\u5185\u5bb9\u7c7b\u578b\u5b9a\u4e49\uff0c\u4f8b\u5982\u6dfb\u52a0\u65b0\u7684__types__\uff0c\u6216\u914d\u7f6e\u5176__parts__\u548c__fields__\u3002 IContentDefinitionManager IContentDefinitionManager This service provides a way to modify the content type definitions. From a migrations class, we can inject an instance of this interface. \u6b64\u670d\u52a1\u63d0\u4f9b\u4e86\u4e00\u79cd\u4fee\u6539\u5185\u5bb9\u7c7b\u578b\u5b9a\u4e49\u7684\u65b9\u6cd5\u3002\u4ece\u8fc1\u79fb\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u6ce8\u5165\u6b64\u63a5\u53e3\u7684\u5b9e\u4f8b\u3002 public class Migrations : DataMigration <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u7c7b\u8fc1\u79fb\uff1aDataMigration</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> IContentDefinitionManager _contentDefinitionManager; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public Migrations(IContentDefinitionManager contentDefinitionManager) { _contentDefinitionManager = contentDefinitionManager; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public int Create() { // This code will be run when the feature is enabled <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> return 1; } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Creating a new Content Type \u521b\u5efa\u65b0\u7684\u5185\u5bb9\u7c7b\u578b The following example creates a new Content Type named Product . \u4ee5\u4e0b\u793a\u4f8b\u521b\u5efa\u540d\u4e3a\u201cProduct\u201d\u7684\u65b0\u5185\u5bb9\u7c7b\u578b\u3002 _contentDefinitionManager.AlterTypeDefinition(\"Product\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">_contentDefinitionManager.AlterTypeDefinition\uff08 \u201c\u4ea7\u54c1\u201d\uff09;</font> Changing the metadata of a Content Type \u66f4\u6539\u5185\u5bb9\u7c7b\u578b\u7684\u5143\u6570\u636e To change specific properties of the content type, an argument can be used to configure it: \u8981\u66f4\u6539\u5185\u5bb9\u7c7b\u578b\u7684\u7279\u5b9a\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\u6765\u914d\u7f6e\u5b83\uff1a _contentDefinitionManager.AlterTypeDefinition(\"Product\", type => type <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">_contentDefinitionManager.AlterTypeDefinition\uff08\u201cProduct\u201d\uff0ctype => type</font> // content items of this type can have drafts .Draftable() // content items versions of this type have saved .Versionable() // this content type appears in the New menu section .Creatable() // permissions can be applied specifically to instances of this type .Securable() ); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09;</font> Adding Content Parts to a type \u5c06\u5185\u5bb9\u90e8\u4ef6\u6dfb\u52a0\u5230\u7c7b\u578b\u4e2d The following example adds the TitlePart content part to the Product type. \u4ee5\u4e0b\u793a\u4f8b\u5c06 TitlePart \u5185\u5bb9\u90e8\u5206\u6dfb\u52a0\u5230 Product \u7c7b\u578b\u3002 _contentDefinitionManager.AlterTypeDefinition(\"Product\", type => type <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">_contentDefinitionManager.AlterTypeDefinition\uff08\u201cProduct\u201d\uff0ctype => type</font> .WithPart(\"TitlePart\") ); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09;</font> Each part can also be configured in the context of a type. For instance the AutoroutePart requires a Liquid template as its pattern to generate custom routes. It's defined in a custom setting for this part. \u6bcf\u4e2a\u90e8\u5206\u4e5f\u53ef\u4ee5\u5728\u7c7b\u578b\u7684\u4e0a\u4e0b\u6587\u4e2d\u914d\u7f6e\u3002\u4f8b\u5982\uff0c AutoroutePart \u9700\u8981__Liquid__\u6a21\u677f\u4f5c\u4e3a\u5176\u6a21\u5f0f\u6765\u751f\u6210\u81ea\u5b9a\u4e49\u8def\u7531\u3002\u5b83\u662f\u5728\u6b64\u90e8\u4ef6\u7684\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u4e2d\u5b9a\u4e49\u7684\u3002 _contentDefinitionManager.AlterTypeDefinition(\"Product\", type => type <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">_contentDefinitionManager.AlterTypeDefinition\uff08\u201cProduct\u201d\uff0ctype => type</font> .WithPart(\"Product\", part => part // sets the position among other parts .WithPosition(\"2\") // sets all the settings on the AutoroutePart .WithSettings(new AutoroutePartSettings { Pattern = \"{{ ContentItem | display_text | slugify }}\" }) ) ); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09;</font> For a list of all the settings each type can use, please refer to their respective documentation pages. \u6709\u5173\u6bcf\u79cd\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528\u7684\u6240\u6709\u8bbe\u7f6e\u7684\u5217\u8868\uff0c\u8bf7\u53c2\u9605\u5404\u81ea\u7684\u6587\u6863\u9875\u9762\u3002 Adding Content Fields to a part \u5c06\u5185\u5bb9\u5b57\u6bb5\u6dfb\u52a0\u5230\u96f6\u4ef6 Fields can not be attached directly to a Content Type. To add fields to a content type, create a part using with the same name as the type and add fields to this part. \u5b57\u6bb5\u65e0\u6cd5\u76f4\u63a5\u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u3002\u8981\u5c06\u5b57\u6bb5\u6dfb\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\uff0c\u8bf7\u4f7f\u7528\u4e0e\u8be5\u7c7b\u578b\u76f8\u540c\u7684\u540d\u79f0\u521b\u5efa\u96f6\u4ef6\uff0c\u5e76\u5411\u8be5\u96f6\u4ef6\u6dfb\u52a0\u5b57\u6bb5\u3002 _contentDefinitionManager.AlterTypeDefinition(\"Product\", type => type <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">_contentDefinitionManager.AlterTypeDefinition\uff08\u201cProduct\u201d\uff0ctype => type</font> .WithPart(\"Product\", part => part .WithField(\"Image\", field => field .OfType(\"MediaField\") .WithDisplayName(\"Main image\")) .WithField(\"Price\", field => field .OfType(\"NumericField\") .WithDisplayName(\"Price\")) ) ); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09;</font> When added to a part, fields can also have custom settings which for instance will define how the editor will behave, or validation rules. Also refer to their respective documentation pages for a list of possible settings. \u5f53\u6dfb\u52a0\u5230\u96f6\u4ef6\u65f6\uff0c\u5b57\u6bb5\u8fd8\u53ef\u4ee5\u5177\u6709\u81ea\u5b9a\u4e49\u8bbe\u7f6e\uff0c\u4f8b\u5982\u5c06\u5b9a\u4e49\u7f16\u8f91\u5668\u7684\u884c\u4e3a\u65b9\u5f0f\u6216\u9a8c\u8bc1\u89c4\u5219\u3002\u53e6\u8bf7\u53c2\u9605\u5404\u81ea\u7684\u6587\u6863\u9875\u9762\u4ee5\u83b7\u53d6\u53ef\u80fd\u7684\u8bbe\u7f6e\u5217\u8868\u3002","title":"Content Types"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#content-types-orchardcorecontenttypes","text":"","title":"Content Types (OrchardCore.ContentTypes)"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#orchardcorecontenttypes","text":"","title":"\u5185\u5bb9\u7c7b\u578b\uff08OrchardCore.ContentTypes\uff09"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#view-components","text":"","title":"View Components"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#_1","text":"","title":"\u67e5\u770b\u7ec4\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#selectcontenttypes","text":"","title":"SelectContentTypes"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#selectcontenttypes_1","text":"Renders an editor to select a list of content types. \u5448\u73b0\u7f16\u8f91\u5668\u4ee5\u9009\u62e9\u5185\u5bb9\u7c7b\u578b\u5217\u8868\u3002 It can optionally filter content types of a specific stereotype. \u5b83\u53ef\u4ee5\u9009\u62e9\u8fc7\u6ee4\u7279\u5b9a\u6784\u9020\u578b\u7684\u5185\u5bb9\u7c7b\u578b\u3002 The editor returns the selection as a string[] on the model. \u7f16\u8f91\u5668\u5c06\u9009\u62e9\u4f5c\u4e3a\u6a21\u578b\u4e0a\u7684 string [] \u8fd4\u56de\u3002","title":"SelectContentTypes"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#parameters","text":"","title":"Parameters"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#_2","text":"| Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- | ----------- | | --------- | ---- | ----------- | selectedContentTypes | string[] | The list of content types that should be marked as selected when rendering the editor. | | selectedContentTypes | string [] |\u5728\u5448\u73b0\u7f16\u8f91\u5668\u65f6\u5e94\u6807\u8bb0\u4e3a\u5df2\u9009\u62e9\u7684\u5185\u5bb9\u7c7b\u578b\u5217\u8868\u3002 | | htmlName | string | The name of the model property to bind the result to. | htmlName | string |\u8981\u5c06\u7ed3\u679c\u7ed1\u5b9a\u5230\u7684model\u5c5e\u6027\u7684\u540d\u79f0\u3002 | stereotype (optional) | string | A stereotype name to filter the list of content types to be able to select. | | stereotype \uff08\u53ef\u9009\uff09| string |\u7528\u4e8e\u8fc7\u6ee4\u53ef\u4ee5\u9009\u62e9\u7684\u5185\u5bb9\u7c7b\u578b\u5217\u8868\u7684\u6784\u9020\u578b\u540d\u79f0\u3002 |","title":"\u53c2\u6570"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#sample","text":"","title":"Sample"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#_3","text":"@await Component.InvokeAsync(\"SelectContentTypes\", new { selectedContentTypes = Model.ContainedContentTypes, htmlName = Html.NameFor(m => m.ContainedContentTypes) }) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@await Component.InvokeAsync\uff08\u201cSelectContentTypes\u201d\uff0cnew {selectedContentTypes = Model.ContainedContentTypes\uff0chtmlName = Html.NameFor\uff08m => m.ContainedContentTypes\uff09}\uff09</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font>","title":"\u6837\u54c1"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#migrations","text":"","title":"Migrations"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#_4","text":"Migration classes can be used to alter the content type definitions, like by adding new types , or configuring their parts and fields . \u8fc1\u79fb\u7c7b\u53ef\u7528\u4e8e\u66f4\u6539\u5185\u5bb9\u7c7b\u578b\u5b9a\u4e49\uff0c\u4f8b\u5982\u6dfb\u52a0\u65b0\u7684__types__\uff0c\u6216\u914d\u7f6e\u5176__parts__\u548c__fields__\u3002","title":"\u8fc1\u79fb"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#icontentdefinitionmanager","text":"","title":"IContentDefinitionManager"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#icontentdefinitionmanager_1","text":"This service provides a way to modify the content type definitions. From a migrations class, we can inject an instance of this interface. \u6b64\u670d\u52a1\u63d0\u4f9b\u4e86\u4e00\u79cd\u4fee\u6539\u5185\u5bb9\u7c7b\u578b\u5b9a\u4e49\u7684\u65b9\u6cd5\u3002\u4ece\u8fc1\u79fb\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u6ce8\u5165\u6b64\u63a5\u53e3\u7684\u5b9e\u4f8b\u3002 public class Migrations : DataMigration <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u7c7b\u8fc1\u79fb\uff1aDataMigration</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> IContentDefinitionManager _contentDefinitionManager; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public Migrations(IContentDefinitionManager contentDefinitionManager) { _contentDefinitionManager = contentDefinitionManager; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public int Create() { // This code will be run when the feature is enabled <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> return 1; } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"IContentDefinitionManager"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#creating-a-new-content-type","text":"","title":"Creating a new Content Type"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#_5","text":"The following example creates a new Content Type named Product . \u4ee5\u4e0b\u793a\u4f8b\u521b\u5efa\u540d\u4e3a\u201cProduct\u201d\u7684\u65b0\u5185\u5bb9\u7c7b\u578b\u3002 _contentDefinitionManager.AlterTypeDefinition(\"Product\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">_contentDefinitionManager.AlterTypeDefinition\uff08 \u201c\u4ea7\u54c1\u201d\uff09;</font>","title":"\u521b\u5efa\u65b0\u7684\u5185\u5bb9\u7c7b\u578b"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#changing-the-metadata-of-a-content-type","text":"","title":"Changing the metadata of a Content Type"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#_6","text":"To change specific properties of the content type, an argument can be used to configure it: \u8981\u66f4\u6539\u5185\u5bb9\u7c7b\u578b\u7684\u7279\u5b9a\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\u6765\u914d\u7f6e\u5b83\uff1a _contentDefinitionManager.AlterTypeDefinition(\"Product\", type => type <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">_contentDefinitionManager.AlterTypeDefinition\uff08\u201cProduct\u201d\uff0ctype => type</font> // content items of this type can have drafts .Draftable() // content items versions of this type have saved .Versionable() // this content type appears in the New menu section .Creatable() // permissions can be applied specifically to instances of this type .Securable() ); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09;</font>","title":"\u66f4\u6539\u5185\u5bb9\u7c7b\u578b\u7684\u5143\u6570\u636e"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#adding-content-parts-to-a-type","text":"","title":"Adding Content Parts to a type"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#_7","text":"The following example adds the TitlePart content part to the Product type. \u4ee5\u4e0b\u793a\u4f8b\u5c06 TitlePart \u5185\u5bb9\u90e8\u5206\u6dfb\u52a0\u5230 Product \u7c7b\u578b\u3002 _contentDefinitionManager.AlterTypeDefinition(\"Product\", type => type <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">_contentDefinitionManager.AlterTypeDefinition\uff08\u201cProduct\u201d\uff0ctype => type</font> .WithPart(\"TitlePart\") ); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09;</font> Each part can also be configured in the context of a type. For instance the AutoroutePart requires a Liquid template as its pattern to generate custom routes. It's defined in a custom setting for this part. \u6bcf\u4e2a\u90e8\u5206\u4e5f\u53ef\u4ee5\u5728\u7c7b\u578b\u7684\u4e0a\u4e0b\u6587\u4e2d\u914d\u7f6e\u3002\u4f8b\u5982\uff0c AutoroutePart \u9700\u8981__Liquid__\u6a21\u677f\u4f5c\u4e3a\u5176\u6a21\u5f0f\u6765\u751f\u6210\u81ea\u5b9a\u4e49\u8def\u7531\u3002\u5b83\u662f\u5728\u6b64\u90e8\u4ef6\u7684\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u4e2d\u5b9a\u4e49\u7684\u3002 _contentDefinitionManager.AlterTypeDefinition(\"Product\", type => type <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">_contentDefinitionManager.AlterTypeDefinition\uff08\u201cProduct\u201d\uff0ctype => type</font> .WithPart(\"Product\", part => part // sets the position among other parts .WithPosition(\"2\") // sets all the settings on the AutoroutePart .WithSettings(new AutoroutePartSettings { Pattern = \"{{ ContentItem | display_text | slugify }}\" }) ) ); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09;</font> For a list of all the settings each type can use, please refer to their respective documentation pages. \u6709\u5173\u6bcf\u79cd\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528\u7684\u6240\u6709\u8bbe\u7f6e\u7684\u5217\u8868\uff0c\u8bf7\u53c2\u9605\u5404\u81ea\u7684\u6587\u6863\u9875\u9762\u3002","title":"\u5c06\u5185\u5bb9\u90e8\u4ef6\u6dfb\u52a0\u5230\u7c7b\u578b\u4e2d"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#adding-content-fields-to-a-part","text":"","title":"Adding Content Fields to a part"},{"location":"OrchardCore.Modules/OrchardCore.ContentTypes/#_8","text":"Fields can not be attached directly to a Content Type. To add fields to a content type, create a part using with the same name as the type and add fields to this part. \u5b57\u6bb5\u65e0\u6cd5\u76f4\u63a5\u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u3002\u8981\u5c06\u5b57\u6bb5\u6dfb\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\uff0c\u8bf7\u4f7f\u7528\u4e0e\u8be5\u7c7b\u578b\u76f8\u540c\u7684\u540d\u79f0\u521b\u5efa\u96f6\u4ef6\uff0c\u5e76\u5411\u8be5\u96f6\u4ef6\u6dfb\u52a0\u5b57\u6bb5\u3002 _contentDefinitionManager.AlterTypeDefinition(\"Product\", type => type <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">_contentDefinitionManager.AlterTypeDefinition\uff08\u201cProduct\u201d\uff0ctype => type</font> .WithPart(\"Product\", part => part .WithField(\"Image\", field => field .OfType(\"MediaField\") .WithDisplayName(\"Main image\")) .WithField(\"Price\", field => field .OfType(\"NumericField\") .WithDisplayName(\"Price\")) ) ); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09;</font> When added to a part, fields can also have custom settings which for instance will define how the editor will behave, or validation rules. Also refer to their respective documentation pages for a list of possible settings. \u5f53\u6dfb\u52a0\u5230\u96f6\u4ef6\u65f6\uff0c\u5b57\u6bb5\u8fd8\u53ef\u4ee5\u5177\u6709\u81ea\u5b9a\u4e49\u8bbe\u7f6e\uff0c\u4f8b\u5982\u5c06\u5b9a\u4e49\u7f16\u8f91\u5668\u7684\u884c\u4e3a\u65b9\u5f0f\u6216\u9a8c\u8bc1\u89c4\u5219\u3002\u53e6\u8bf7\u53c2\u9605\u5404\u81ea\u7684\u6587\u6863\u9875\u9762\u4ee5\u83b7\u53d6\u53ef\u80fd\u7684\u8bbe\u7f6e\u5217\u8868\u3002","title":"\u5c06\u5185\u5bb9\u5b57\u6bb5\u6dfb\u52a0\u5230\u96f6\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Contents/","text":"Contents (OrchardCore.Contents) \u5185\u5bb9\uff08OrchardCore.Contents\uff09 This module provides Content Management services. \u6b64\u6a21\u5757\u63d0\u4f9b\u5185\u5bb9\u7ba1\u7406\u670d\u52a1\u3002 Liquid \u6db2\u4f53 You can access content items from liquid views and templates by using the Content property. \u60a8\u53ef\u4ee5\u4f7f\u7528\u201cContent\u201d\u5c5e\u6027\u4ece\u6db2\u4f53\u89c6\u56fe\u548c\u6a21\u677f\u8bbf\u95ee\u5185\u5bb9\u9879\u3002 By default, you can retrieve content by alias or content item ID. Other modules (such as Alias and Autoroute) allow you to retrieve content by other identifiers. \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u6309\u522b\u540d\u6216\u5185\u5bb9\u9879ID\u68c0\u7d22\u5185\u5bb9\u3002\u5176\u4ed6\u6a21\u5757\uff08\u5982Alias\u548cAutoroute\uff09\u5141\u8bb8\u60a8\u901a\u8fc7\u5176\u4ed6\u6807\u8bc6\u7b26\u68c0\u7d22\u5185\u5bb9\u3002 Loading from an alias \u4ece\u522b\u540d\u52a0\u8f7d {% assign my_content = Content[\"alias:main-menu\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content [\u201calias\uff1amain-menu\u201d]\uff05}</font> Aliases can be in various forms, like when using Autoroute, with the slug prefix. \u522b\u540d\u53ef\u4ee5\u91c7\u7528\u5404\u79cd\u5f62\u5f0f\uff0c\u4f8b\u5982\u4f7f\u7528Autoroute\u65f6\u4f7f\u7528 slug \u524d\u7f00\u3002 {% assign my_content = Content[\"slug:my-blog/my-blog-post\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content [\u201cslug\uff1amy-blog / my-blog-post\u201d]\uff05}</font> Aliases are provided by implementing IContentAliasProvider . \u901a\u8fc7\u5b9e\u73b0 IContentAliasProvider \u63d0\u4f9b\u522b\u540d\u3002 Loading the latest version of a content item \u52a0\u8f7d\u5185\u5bb9\u9879\u7684\u6700\u65b0\u7248\u672c You can use the Latest property to retrieve the latest version of a content item (whether that's the published version or the latest draft version) by alias: \u60a8\u53ef\u4ee5\u4f7f\u7528\u201cLatest\u201d\u5c5e\u6027\u901a\u8fc7\u522b\u540d\u68c0\u7d22\u5185\u5bb9\u9879\u7684\u6700\u65b0\u7248\u672c\uff08\u65e0\u8bba\u662f\u53d1\u5e03\u7248\u672c\u8fd8\u662f\u6700\u65b0\u8349\u7a3f\u7248\u672c\uff09\uff1a {% assign my_content = Content.Latest[\"alias:main-menu\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content.Latest [\u201calias\uff1amain-menu\u201d]\uff05}</font> Loading from a content item id \u4ece\u5185\u5bb9\u9879ID\u52a0\u8f7d {% assign my_content = Content.ContentItemId[\"417qsjrgv97e74wvp149h4da53\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content.ContentItemId [\u201c417qsjrgv97e74wvp149h4da53\u201d]\uff05}</font> When a list of content item ids is available, the content_item_id filter should be preferred: \u5f53\u5185\u5bb9\u9879ID\u5217\u8868\u53ef\u7528\u65f6\uff0c\u5e94\u9996\u9009 content_item_id \u8fc7\u6ee4\u5668\uff1a {% assign posts = postIds | content_item_id %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign posts = postIds | content_item_id\uff05}</font> Loading from a content item version id \u4ece\u5185\u5bb9\u9879\u7248\u672cID\u52a0\u8f7d {% assign my_content = Content.ContentItemVersionId[\"49gq8g6zndfc736x0az3zsp4w3\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content.ContentItemVersionId [\u201c49gq8g6zndfc736x0az3zsp4w3\u201d]\uff05}</font> Razor Helper \u5243\u5200\u52a9\u624b The following methods are available from the Razor helper. Razor\u52a9\u624b\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u3002 | Method | Parameters | Description | |\u65b9\u6cd5|\u53c2\u6570|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | GetContentItemIdByAliasAsync | string alias | Returns the content item id from its alias. | | GetContentItemIdByAliasAsync | string alias |\u4ece\u522b\u540d\u8fd4\u56de\u5185\u5bb9\u9879ID\u3002 | | GetContentItemByAliasAsync | string alias, bool latest = false | Loads a content item from its alias, seeking the latest version or not. | | GetContentItemByAliasAsync | string alias\uff0cbool latest = false |\u4ece\u5176\u522b\u540d\u52a0\u8f7d\u5185\u5bb9\u9879\uff0c\u5bfb\u6c42\u6700\u65b0\u7248\u672c\u3002 | | GetContentItemByIdAsync | string contentItemId, bool latest = false | Loads a content item from its id, seeking the latest version or not. | | GetContentItemByIdAsync | string contentItemId\uff0cbool latest = false |\u4ece\u5176ID\u52a0\u8f7d\u5185\u5bb9\u9879\uff0c\u5bfb\u6c42\u6700\u65b0\u7248\u672c\u3002 | | GetContentItemsByIdAsync | IEnumerable<string> contentItemIds, bool latest = false | Loads a list of content items by ids, seeking the latest version or not. | | GetContentItemsByIdAsync | IEnumerable <string> contentItemIds\uff0cbool latest = false |\u6309ID\u5217\u51fa\u5185\u5bb9\u9879\u5217\u8868\uff0c\u5bfb\u6c42\u6700\u65b0\u7248\u672c\u3002 | | GetContentItemByVersionIdAsync | string contentItemVersionId | Loads a content item from its version id. | | GetContentItemByVersionIdAsync | string contentItemVersionId |\u4ece\u5176\u7248\u672cID\u52a0\u8f7d\u5185\u5bb9\u9879\u3002 | The Razor Helper is accessible on the Orchard property if the view is using Orchard Core's Razor base class, or by injecting OrchardCore.IOrchardHelper in all other cases. \u5982\u679c\u89c6\u56fe\u4f7f\u7528Orchard Core\u7684Razor\u57fa\u7c7b\uff0c\u6216\u8005\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\u6ce8\u5165 OrchardCore.IOrchardHelper \uff0c\u5219\u53ef\u4ee5\u5728 Orchard \u5c5e\u6027\u8bbf\u95eeRazor Helper\u3002","title":"Contents"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#contents-orchardcorecontents","text":"","title":"Contents (OrchardCore.Contents)"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#orchardcorecontents","text":"This module provides Content Management services. \u6b64\u6a21\u5757\u63d0\u4f9b\u5185\u5bb9\u7ba1\u7406\u670d\u52a1\u3002","title":"\u5185\u5bb9\uff08OrchardCore.Contents\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#liquid","text":"","title":"Liquid"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#_1","text":"You can access content items from liquid views and templates by using the Content property. \u60a8\u53ef\u4ee5\u4f7f\u7528\u201cContent\u201d\u5c5e\u6027\u4ece\u6db2\u4f53\u89c6\u56fe\u548c\u6a21\u677f\u8bbf\u95ee\u5185\u5bb9\u9879\u3002 By default, you can retrieve content by alias or content item ID. Other modules (such as Alias and Autoroute) allow you to retrieve content by other identifiers. \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u6309\u522b\u540d\u6216\u5185\u5bb9\u9879ID\u68c0\u7d22\u5185\u5bb9\u3002\u5176\u4ed6\u6a21\u5757\uff08\u5982Alias\u548cAutoroute\uff09\u5141\u8bb8\u60a8\u901a\u8fc7\u5176\u4ed6\u6807\u8bc6\u7b26\u68c0\u7d22\u5185\u5bb9\u3002","title":"\u6db2\u4f53"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#loading-from-an-alias","text":"","title":"Loading from an alias"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#_2","text":"{% assign my_content = Content[\"alias:main-menu\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content [\u201calias\uff1amain-menu\u201d]\uff05}</font> Aliases can be in various forms, like when using Autoroute, with the slug prefix. \u522b\u540d\u53ef\u4ee5\u91c7\u7528\u5404\u79cd\u5f62\u5f0f\uff0c\u4f8b\u5982\u4f7f\u7528Autoroute\u65f6\u4f7f\u7528 slug \u524d\u7f00\u3002 {% assign my_content = Content[\"slug:my-blog/my-blog-post\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content [\u201cslug\uff1amy-blog / my-blog-post\u201d]\uff05}</font> Aliases are provided by implementing IContentAliasProvider . \u901a\u8fc7\u5b9e\u73b0 IContentAliasProvider \u63d0\u4f9b\u522b\u540d\u3002","title":"\u4ece\u522b\u540d\u52a0\u8f7d"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#loading-the-latest-version-of-a-content-item","text":"","title":"Loading the latest version of a content item"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#_3","text":"You can use the Latest property to retrieve the latest version of a content item (whether that's the published version or the latest draft version) by alias: \u60a8\u53ef\u4ee5\u4f7f\u7528\u201cLatest\u201d\u5c5e\u6027\u901a\u8fc7\u522b\u540d\u68c0\u7d22\u5185\u5bb9\u9879\u7684\u6700\u65b0\u7248\u672c\uff08\u65e0\u8bba\u662f\u53d1\u5e03\u7248\u672c\u8fd8\u662f\u6700\u65b0\u8349\u7a3f\u7248\u672c\uff09\uff1a {% assign my_content = Content.Latest[\"alias:main-menu\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content.Latest [\u201calias\uff1amain-menu\u201d]\uff05}</font>","title":"\u52a0\u8f7d\u5185\u5bb9\u9879\u7684\u6700\u65b0\u7248\u672c"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#loading-from-a-content-item-id","text":"","title":"Loading from a content item id"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#id","text":"{% assign my_content = Content.ContentItemId[\"417qsjrgv97e74wvp149h4da53\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content.ContentItemId [\u201c417qsjrgv97e74wvp149h4da53\u201d]\uff05}</font> When a list of content item ids is available, the content_item_id filter should be preferred: \u5f53\u5185\u5bb9\u9879ID\u5217\u8868\u53ef\u7528\u65f6\uff0c\u5e94\u9996\u9009 content_item_id \u8fc7\u6ee4\u5668\uff1a {% assign posts = postIds | content_item_id %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign posts = postIds | content_item_id\uff05}</font>","title":"\u4ece\u5185\u5bb9\u9879ID\u52a0\u8f7d"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#loading-from-a-content-item-version-id","text":"","title":"Loading from a content item version id"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#id_1","text":"{% assign my_content = Content.ContentItemVersionId[\"49gq8g6zndfc736x0az3zsp4w3\"] %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign my_content = Content.ContentItemVersionId [\u201c49gq8g6zndfc736x0az3zsp4w3\u201d]\uff05}</font>","title":"\u4ece\u5185\u5bb9\u9879\u7248\u672cID\u52a0\u8f7d"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#razor-helper","text":"","title":"Razor Helper"},{"location":"OrchardCore.Modules/OrchardCore.Contents/#_4","text":"The following methods are available from the Razor helper. Razor\u52a9\u624b\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u3002 | Method | Parameters | Description | |\u65b9\u6cd5|\u53c2\u6570|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | GetContentItemIdByAliasAsync | string alias | Returns the content item id from its alias. | | GetContentItemIdByAliasAsync | string alias |\u4ece\u522b\u540d\u8fd4\u56de\u5185\u5bb9\u9879ID\u3002 | | GetContentItemByAliasAsync | string alias, bool latest = false | Loads a content item from its alias, seeking the latest version or not. | | GetContentItemByAliasAsync | string alias\uff0cbool latest = false |\u4ece\u5176\u522b\u540d\u52a0\u8f7d\u5185\u5bb9\u9879\uff0c\u5bfb\u6c42\u6700\u65b0\u7248\u672c\u3002 | | GetContentItemByIdAsync | string contentItemId, bool latest = false | Loads a content item from its id, seeking the latest version or not. | | GetContentItemByIdAsync | string contentItemId\uff0cbool latest = false |\u4ece\u5176ID\u52a0\u8f7d\u5185\u5bb9\u9879\uff0c\u5bfb\u6c42\u6700\u65b0\u7248\u672c\u3002 | | GetContentItemsByIdAsync | IEnumerable<string> contentItemIds, bool latest = false | Loads a list of content items by ids, seeking the latest version or not. | | GetContentItemsByIdAsync | IEnumerable <string> contentItemIds\uff0cbool latest = false |\u6309ID\u5217\u51fa\u5185\u5bb9\u9879\u5217\u8868\uff0c\u5bfb\u6c42\u6700\u65b0\u7248\u672c\u3002 | | GetContentItemByVersionIdAsync | string contentItemVersionId | Loads a content item from its version id. | | GetContentItemByVersionIdAsync | string contentItemVersionId |\u4ece\u5176\u7248\u672cID\u52a0\u8f7d\u5185\u5bb9\u9879\u3002 | The Razor Helper is accessible on the Orchard property if the view is using Orchard Core's Razor base class, or by injecting OrchardCore.IOrchardHelper in all other cases. \u5982\u679c\u89c6\u56fe\u4f7f\u7528Orchard Core\u7684Razor\u57fa\u7c7b\uff0c\u6216\u8005\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\u6ce8\u5165 OrchardCore.IOrchardHelper \uff0c\u5219\u53ef\u4ee5\u5728 Orchard \u5c5e\u6027\u8bbf\u95eeRazor Helper\u3002","title":"\u5243\u5200\u52a9\u624b"},{"location":"OrchardCore.Modules/OrchardCore.CustomSettings/","text":"Custom Settings (OrchardCore.CustomSettings) \u81ea\u5b9a\u4e49\u8bbe\u7f6e\uff08OrchardCore.CustomSettings\uff09 Usage \u7528\u6cd5 Custom Settings allows a site administrator to create a customized set of properties that are global to the web sites. These settings are \u81ea\u5b9a\u4e49\u8bbe\u7f6e\u5141\u8bb8\u7ad9\u70b9\u7ba1\u7406\u5458\u521b\u5efa\u4e00\u7ec4\u81ea\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5bf9\u4e8e\u7f51\u7ad9\u662f\u5168\u5c40\u7684\u3002\u8fd9\u4e9b\u8bbe\u7f6e\u662f edited in the standard Settings section and can be protected with specific permissions. \u5728\u6807\u51c6\u8bbe\u7f6e\u90e8\u5206\u7f16\u8f91\uff0c\u53ef\u4ee5\u4f7f\u7528\u7279\u5b9a\u6743\u9650\u8fdb\u884c\u4fdd\u62a4\u3002 Creating Custom Settings \u521b\u5efa\u81ea\u5b9a\u4e49\u8bbe\u7f6e Custom Settings are organized in sections. Each section is represented by a Content Type with the CustomSettings stereotype. \u81ea\u5b9a\u4e49\u8bbe\u7f6e\u6309\u90e8\u5206\u7ec4\u7ec7\u3002\u6bcf\u4e2a\u90e8\u5206\u7531\u5177\u6709\u201cCustomSettings\u201d\u6784\u9020\u578b\u7684\u5185\u5bb9\u7c7b\u578b\u8868\u793a\u3002 When creating such a section, remember to disable Creatable , Listable , Draftable and Securable metadata as they don't apply. \u5728\u521b\u5efa\u8fd9\u6837\u7684\u90e8\u5206\u65f6\uff0c\u8bf7\u8bb0\u4f4f\u7981\u7528 Creatable \uff0c Listable \uff0c Draftable \u548c Securable \u5143\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u9002\u7528\u3002 Warning \uff01\u8b66\u544a Don't mark any existing Content Type with this `CustomSettings` stereotype, as this will break existing content items of this type. Custom Settings are then comprised of parts and fields like any other content type. \u7136\u540e\uff0c\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u7531\u4e0e\u4efb\u4f55\u5176\u4ed6\u5185\u5bb9\u7c7b\u578b\u76f8\u4f3c\u7684\u90e8\u5206\u548c\u5b57\u6bb5\u7ec4\u6210\u3002 Once created, open the Setting menu item and each of these sections should appear alongside the module-provided ones. \u521b\u5efa\u540e\uff0c\u6253\u5f00\u201c\u8bbe\u7f6e\u201d\u83dc\u5355\u9879\uff0c\u6bcf\u4e2a\u90e8\u5206\u90fd\u5e94\u4e0e\u6a21\u5757\u63d0\u4f9b\u7684\u90e8\u5206\u4e00\u8d77\u663e\u793a\u3002 Permissions \u6743\u9650 Each Custom Settings sections gets a dedicated permission to allow specific users to edit them. \u6bcf\u4e2a\u201c\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u201d\u90e8\u5206\u90fd\u83b7\u5f97\u4e13\u7528\u6743\u9650\uff0c\u5141\u8bb8\u7279\u5b9a\u7528\u6237\u7f16\u8f91\u5b83\u4eec\u3002 To edit this permission open the Roles editor and go to the OrchardCore.CustomSettings Feature group. \u8981\u7f16\u8f91\u6b64\u6743\u9650\uff0c\u8bf7\u6253\u5f00\u89d2\u8272\u7f16\u8f91\u5668\u5e76\u8f6c\u5230OrchardCore.CustomSettings\u529f\u80fd\u7ec4\u3002 Templates \u6a21\u677f The Custom Settings like other settings are available in the {{ Site.Properties }} object. \u81ea\u5b9a\u4e49\u8bbe\u7f6e\u4e0e\u5176\u4ed6\u8bbe\u7f6e\u4e00\u6837\u53ef\u5728 {{Site.Properties}} \u5bf9\u8c61\u4e2d\u627e\u5230\u3002 Each section is made available using its name. \u6bcf\u4e2a\u90e8\u5206\u90fd\u4f7f\u7528\u5176\u540d\u79f0\u3002 For instance the HtmlBodyPart of a custom settings section named BlogSettings would be accessible using {{ Site.Properties.BlogSettings.HtmlBodyPart }} . \u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528 {{Site.Properties.BlogSettings.HtmlBodyPart}} \u8bbf\u95ee\u540d\u4e3a BlogSettings \u7684\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u90e8\u5206\u7684 HtmlBodyPart \u3002","title":"Custom Settings"},{"location":"OrchardCore.Modules/OrchardCore.CustomSettings/#custom-settings-orchardcorecustomsettings","text":"","title":"Custom Settings (OrchardCore.CustomSettings)"},{"location":"OrchardCore.Modules/OrchardCore.CustomSettings/#orchardcorecustomsettings","text":"","title":"\u81ea\u5b9a\u4e49\u8bbe\u7f6e\uff08OrchardCore.CustomSettings\uff09"},{"location":"OrchardCore.Modules/OrchardCore.CustomSettings/#usage","text":"","title":"Usage"},{"location":"OrchardCore.Modules/OrchardCore.CustomSettings/#_1","text":"Custom Settings allows a site administrator to create a customized set of properties that are global to the web sites. These settings are \u81ea\u5b9a\u4e49\u8bbe\u7f6e\u5141\u8bb8\u7ad9\u70b9\u7ba1\u7406\u5458\u521b\u5efa\u4e00\u7ec4\u81ea\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5bf9\u4e8e\u7f51\u7ad9\u662f\u5168\u5c40\u7684\u3002\u8fd9\u4e9b\u8bbe\u7f6e\u662f edited in the standard Settings section and can be protected with specific permissions. \u5728\u6807\u51c6\u8bbe\u7f6e\u90e8\u5206\u7f16\u8f91\uff0c\u53ef\u4ee5\u4f7f\u7528\u7279\u5b9a\u6743\u9650\u8fdb\u884c\u4fdd\u62a4\u3002","title":"\u7528\u6cd5"},{"location":"OrchardCore.Modules/OrchardCore.CustomSettings/#creating-custom-settings","text":"","title":"Creating Custom Settings"},{"location":"OrchardCore.Modules/OrchardCore.CustomSettings/#_2","text":"Custom Settings are organized in sections. Each section is represented by a Content Type with the CustomSettings stereotype. \u81ea\u5b9a\u4e49\u8bbe\u7f6e\u6309\u90e8\u5206\u7ec4\u7ec7\u3002\u6bcf\u4e2a\u90e8\u5206\u7531\u5177\u6709\u201cCustomSettings\u201d\u6784\u9020\u578b\u7684\u5185\u5bb9\u7c7b\u578b\u8868\u793a\u3002 When creating such a section, remember to disable Creatable , Listable , Draftable and Securable metadata as they don't apply. \u5728\u521b\u5efa\u8fd9\u6837\u7684\u90e8\u5206\u65f6\uff0c\u8bf7\u8bb0\u4f4f\u7981\u7528 Creatable \uff0c Listable \uff0c Draftable \u548c Securable \u5143\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u9002\u7528\u3002 Warning \uff01\u8b66\u544a Don't mark any existing Content Type with this `CustomSettings` stereotype, as this will break existing content items of this type. Custom Settings are then comprised of parts and fields like any other content type. \u7136\u540e\uff0c\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u7531\u4e0e\u4efb\u4f55\u5176\u4ed6\u5185\u5bb9\u7c7b\u578b\u76f8\u4f3c\u7684\u90e8\u5206\u548c\u5b57\u6bb5\u7ec4\u6210\u3002 Once created, open the Setting menu item and each of these sections should appear alongside the module-provided ones. \u521b\u5efa\u540e\uff0c\u6253\u5f00\u201c\u8bbe\u7f6e\u201d\u83dc\u5355\u9879\uff0c\u6bcf\u4e2a\u90e8\u5206\u90fd\u5e94\u4e0e\u6a21\u5757\u63d0\u4f9b\u7684\u90e8\u5206\u4e00\u8d77\u663e\u793a\u3002","title":"\u521b\u5efa\u81ea\u5b9a\u4e49\u8bbe\u7f6e"},{"location":"OrchardCore.Modules/OrchardCore.CustomSettings/#permissions","text":"","title":"Permissions"},{"location":"OrchardCore.Modules/OrchardCore.CustomSettings/#_3","text":"Each Custom Settings sections gets a dedicated permission to allow specific users to edit them. \u6bcf\u4e2a\u201c\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u201d\u90e8\u5206\u90fd\u83b7\u5f97\u4e13\u7528\u6743\u9650\uff0c\u5141\u8bb8\u7279\u5b9a\u7528\u6237\u7f16\u8f91\u5b83\u4eec\u3002 To edit this permission open the Roles editor and go to the OrchardCore.CustomSettings Feature group. \u8981\u7f16\u8f91\u6b64\u6743\u9650\uff0c\u8bf7\u6253\u5f00\u89d2\u8272\u7f16\u8f91\u5668\u5e76\u8f6c\u5230OrchardCore.CustomSettings\u529f\u80fd\u7ec4\u3002","title":"\u6743\u9650"},{"location":"OrchardCore.Modules/OrchardCore.CustomSettings/#templates","text":"","title":"Templates"},{"location":"OrchardCore.Modules/OrchardCore.CustomSettings/#_4","text":"The Custom Settings like other settings are available in the {{ Site.Properties }} object. \u81ea\u5b9a\u4e49\u8bbe\u7f6e\u4e0e\u5176\u4ed6\u8bbe\u7f6e\u4e00\u6837\u53ef\u5728 {{Site.Properties}} \u5bf9\u8c61\u4e2d\u627e\u5230\u3002 Each section is made available using its name. \u6bcf\u4e2a\u90e8\u5206\u90fd\u4f7f\u7528\u5176\u540d\u79f0\u3002 For instance the HtmlBodyPart of a custom settings section named BlogSettings would be accessible using {{ Site.Properties.BlogSettings.HtmlBodyPart }} . \u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528 {{Site.Properties.BlogSettings.HtmlBodyPart}} \u8bbf\u95ee\u540d\u4e3a BlogSettings \u7684\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u90e8\u5206\u7684 HtmlBodyPart \u3002","title":"\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.DataProtection.Azure/","text":"Data Protection (Azure Storage) (OrchardCore.DataProtection.Azure) \u6570\u636e\u4fdd\u62a4\uff08Azure\u5b58\u50a8\uff09\uff08OrchardCore.DataProtection.Azure\uff09 Purpose \u76ee\u7684 Data Protection (Azure Storage) enables data protection key rings that are segregated by tenant and stored in an Azure Blob Storage container. \u6570\u636e\u4fdd\u62a4\uff08Azure\u5b58\u50a8\uff09\u652f\u6301\u7531\u79df\u6237\u9694\u79bb\u5e76\u5b58\u50a8\u5728Azure Blob\u5b58\u50a8\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u4fdd\u62a4\u5bc6\u94a5\u73af\u3002 This is useful for load balanced environments where each active node will need to share the same key ring. \u8fd9\u5bf9\u4e8e\u8d1f\u8f7d\u5e73\u8861\u73af\u5883\u975e\u5e38\u6709\u7528\uff0c\u5728\u8fd9\u79cd\u73af\u5883\u4e2d\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u8282\u70b9\u90fd\u9700\u8981\u5171\u4eab\u76f8\u540c\u7684\u5bc6\u94a5\u73af\u3002 Configuration \u7ec4\u6001 You'll need to specify a storage account connection string and a valid container name. The container will automatically be created if it does not already exist. \u60a8\u9700\u8981\u6307\u5b9a\u5b58\u50a8\u5e10\u6237\u8fde\u63a5\u5b57\u7b26\u4e32\u548c\u6709\u6548\u5bb9\u5668\u540d\u79f0\u3002\u5982\u679c\u5bb9\u5668\u5c1a\u4e0d\u5b58\u5728\uff0c\u5c06\u81ea\u52a8\u521b\u5efa\u5bb9\u5668\u3002 These settings need to be available to the IConfiguration implementation. In the simplest case, this will mean updating your appsettings.json file: \u8fd9\u4e9b\u8bbe\u7f6e\u9700\u8981\u53ef\u7528\u4e8e IConfiguration \u5b9e\u73b0\u3002\u5728\u6700\u7b80\u5355\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c06\u610f\u5473\u7740\u66f4\u65b0\u4f60\u7684 appsettings.json \u6587\u4ef6\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"Modules\": { \"OrchardCore.DataProtection.Azure\": { \"ConnectionString\": \"DefaultEndpointsProtocol=https;AccountName=<myaccountname>;AccountKey=<myaccountkey>;EndpointSuffix=core.windows.net\", \"ContainerName\": \"dataprotection\" } } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"DataProtection (Azure Storage)"},{"location":"OrchardCore.Modules/OrchardCore.DataProtection.Azure/#data-protection-azure-storage-orchardcoredataprotectionazure","text":"","title":"Data Protection (Azure Storage) (OrchardCore.DataProtection.Azure)"},{"location":"OrchardCore.Modules/OrchardCore.DataProtection.Azure/#azureorchardcoredataprotectionazure","text":"","title":"\u6570\u636e\u4fdd\u62a4\uff08Azure\u5b58\u50a8\uff09\uff08OrchardCore.DataProtection.Azure\uff09"},{"location":"OrchardCore.Modules/OrchardCore.DataProtection.Azure/#purpose","text":"","title":"Purpose"},{"location":"OrchardCore.Modules/OrchardCore.DataProtection.Azure/#_1","text":"Data Protection (Azure Storage) enables data protection key rings that are segregated by tenant and stored in an Azure Blob Storage container. \u6570\u636e\u4fdd\u62a4\uff08Azure\u5b58\u50a8\uff09\u652f\u6301\u7531\u79df\u6237\u9694\u79bb\u5e76\u5b58\u50a8\u5728Azure Blob\u5b58\u50a8\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u4fdd\u62a4\u5bc6\u94a5\u73af\u3002 This is useful for load balanced environments where each active node will need to share the same key ring. \u8fd9\u5bf9\u4e8e\u8d1f\u8f7d\u5e73\u8861\u73af\u5883\u975e\u5e38\u6709\u7528\uff0c\u5728\u8fd9\u79cd\u73af\u5883\u4e2d\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u8282\u70b9\u90fd\u9700\u8981\u5171\u4eab\u76f8\u540c\u7684\u5bc6\u94a5\u73af\u3002","title":"\u76ee\u7684"},{"location":"OrchardCore.Modules/OrchardCore.DataProtection.Azure/#configuration","text":"","title":"Configuration"},{"location":"OrchardCore.Modules/OrchardCore.DataProtection.Azure/#_2","text":"You'll need to specify a storage account connection string and a valid container name. The container will automatically be created if it does not already exist. \u60a8\u9700\u8981\u6307\u5b9a\u5b58\u50a8\u5e10\u6237\u8fde\u63a5\u5b57\u7b26\u4e32\u548c\u6709\u6548\u5bb9\u5668\u540d\u79f0\u3002\u5982\u679c\u5bb9\u5668\u5c1a\u4e0d\u5b58\u5728\uff0c\u5c06\u81ea\u52a8\u521b\u5efa\u5bb9\u5668\u3002 These settings need to be available to the IConfiguration implementation. In the simplest case, this will mean updating your appsettings.json file: \u8fd9\u4e9b\u8bbe\u7f6e\u9700\u8981\u53ef\u7528\u4e8e IConfiguration \u5b9e\u73b0\u3002\u5728\u6700\u7b80\u5355\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5c06\u610f\u5473\u7740\u66f4\u65b0\u4f60\u7684 appsettings.json \u6587\u4ef6\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"Modules\": { \"OrchardCore.DataProtection.Azure\": { \"ConnectionString\": \"DefaultEndpointsProtocol=https;AccountName=<myaccountname>;AccountKey=<myaccountkey>;EndpointSuffix=core.windows.net\", \"ContainerName\": \"dataprotection\" } } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u7ec4\u6001"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/","text":"Dynamic Cache (OrchardCore.DynamicCache) \u52a8\u6001\u7f13\u5b58\uff08OrchardCore.DynamicCache\uff09 Purpose \u76ee\u7684 Dynamic Cache allows you to cache sections of markup. \u52a8\u6001\u9ad8\u901f\u7f13\u5b58\u5141\u8bb8\u60a8\u7f13\u5b58\u6807\u8bb0\u7684\u5404\u4e2a\u90e8\u5206\u3002 Each cached section of markup can contain other (child) cached sections of markup. \u6807\u8bb0\u7684\u6bcf\u4e2a\u7f13\u5b58\u90e8\u5206\u90fd\u53ef\u4ee5\u5305\u542b\u6807\u8bb0\u7684\u5176\u4ed6\uff08\u5b50\uff09\u7f13\u5b58\u90e8\u5206\u3002 Cached sections can all have their own cache policies, which allows for finer configuration options than a page level cache would have. \u7f13\u5b58\u90e8\u5206\u90fd\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684\u7f13\u5b58\u7b56\u7565\uff0c\u8fd9\u5141\u8bb8\u6bd4\u9875\u9762\u7ea7\u7f13\u5b58\u66f4\u7cbe\u7ec6\u7684\u914d\u7f6e\u9009\u9879\u3002 Cached values are stored using the IDynamicCache service. \u4f7f\u7528 IDynamicCache \u670d\u52a1\u5b58\u50a8\u7f13\u5b58\u7684\u503c\u3002 Its default implementation is based on IDistributedCache which is itself based on IMemoryCache . \u5b83\u7684\u9ed8\u8ba4\u5b9e\u73b0\u57fa\u4e8e IDistributedCache \uff0c\u5b83\u672c\u8eab\u57fa\u4e8e IMemoryCache \u3002 Example: \u4f8b\uff1a Layout (not cached) \u5e03\u5c40\uff08\u672a\u7f13\u5b58\uff09 Section A A\u90e8\u5206 Section A1 (varies by role) Section A2 Section B B\u8282 Section B1 (varies by query string) Section B2 Rendering cached sections \u6e32\u67d3\u7f13\u5b58\u7684\u90e8\u5206 When this page is rendered for the first time, all shapes will be evaluated. Any blocks of markup that have been identified as cachable will be stored in the IDynamicCache service. \u9996\u6b21\u6e32\u67d3\u6b64\u9875\u9762\u65f6\uff0c\u5c06\u8bc4\u4f30\u6240\u6709\u5f62\u72b6\u3002\u4efb\u4f55\u5df2\u6807\u8bc6\u4e3a\u53ef\u7f13\u5b58\u7684\u6807\u8bb0\u5757\u90fd\u5c06\u5b58\u50a8\u5728\u201cIDynamicCache\u201d\u670d\u52a1\u4e2d\u3002 On subsequent requests, if a cacheable section has already been cached (and the cache entry is still valid) then it won't be processed ( Processing event in \u5728\u540e\u7eed\u8bf7\u6c42\u4e2d\uff0c\u5982\u679c\u5df2\u7f13\u5b58\u53ef\u7f13\u5b58\u90e8\u5206\uff08\u5e76\u4e14\u7f13\u5b58\u6761\u76ee\u4ecd\u7136\u6709\u6548\uff09\uff0c\u5219\u4e0d\u4f1a\u5904\u7406\u5b83\uff08\u5904\u7406\u4e2d\u7684 Processing \u4e8b\u4ef6\uff09 the ShapeMetadata ). The markup will be retrieved from the cache and returned as part of the response. ShapeMetadata \uff09\u3002\u6807\u8bb0\u5c06\u4ece\u7f13\u5b58\u4e2d\u68c0\u7d22\u5e76\u4f5c\u4e3a\u54cd\u5e94\u7684\u4e00\u90e8\u5206\u8fd4\u56de\u3002 Invalidating cached sections \u4f7f\u7f13\u5b58\u7684\u90e8\u5206\u65e0\u6548 If a cached section is invalidated, the markup for the section will be regenerated on the next request, and then placed back into the cache for subsequent requests to take advantage of. \u5982\u679c\u7f13\u5b58\u7684\u90e8\u5206\u65e0\u6548\uff0c\u5219\u5c06\u5728\u4e0b\u4e00\u4e2a\u8bf7\u6c42\u4e0a\u91cd\u65b0\u751f\u6210\u8be5\u90e8\u5206\u7684\u6807\u8bb0\uff0c\u7136\u540e\u5c06\u5176\u653e\u56de\u7f13\u5b58\u4e2d\u4ee5\u4f9b\u540e\u7eed\u8bf7\u6c42\u5229\u7528\u3002 If its children are still cached then their cached value will be used. \u5982\u679c\u5b83\u7684\u5b50\u8282\u70b9\u4ecd\u7136\u88ab\u7f13\u5b58\uff0c\u90a3\u4e48\u5c06\u4f7f\u7528\u5b83\u4eec\u7684\u7f13\u5b58\u503c\u3002 Invalidating a block will also invalidate all parent blocks. \u4f7f\u5757\u65e0\u6548\u4e5f\u5c06\u4f7f\u6240\u6709\u7236\u5757\u65e0\u6548\u3002 For instance, if Section B2 is invalidated, Section B will also be invalidated. When the Layout is rendered, the Section B code will run \u4f8b\u5982\uff0c\u5982\u679c Section B2 \u65e0\u6548\uff0c Section B \u4e5f\u5c06\u5931\u6548\u3002\u6e32\u67d3Layout\u65f6\uff0c\u5c06\u8fd0\u884c Section B \u4ee3\u7801 again, as will Section B2 , but the cached content of Section B1 will be reused. \u518d\u6b21\uff0c \u90e8\u5206B2 \uff0c\u4f46'\u90e8\u5206B1`\u7684\u7f13\u5b58\u5185\u5bb9\u5c06\u88ab\u91cd\u7528\u3002 Cached sections can define dependencies, which allows the cache to know when the cached value should be invalidated. \u7f13\u5b58\u90e8\u5206\u53ef\u4ee5\u5b9a\u4e49\u4f9d\u8d56\u5173\u7cfb\uff0c\u8fd9\u5141\u8bb8\u7f13\u5b58\u77e5\u9053\u4f55\u65f6\u5e94\u8be5\u4f7f\u7f13\u5b58\u7684\u503c\u65e0\u6548\u3002 For example- if a cache section includes the body of a content item, you may want to automatically invalidate this cache section whenever that content item changes. \u4f8b\u5982\uff0c\u5982\u679c\u7f13\u5b58\u90e8\u5206\u5305\u542b\u5185\u5bb9\u9879\u7684\u4e3b\u4f53\uff0c\u5219\u53ef\u80fd\u5e0c\u671b\u6bcf\u5f53\u8be5\u5185\u5bb9\u9879\u53d1\u751f\u66f4\u6539\u65f6\u81ea\u52a8\u4f7f\u6b64\u7f13\u5b58\u90e8\u5206\u65e0\u6548\u3002 You can do this by adding the dependencies contentitemid:{ContentItemId} to the cache section. \u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u4f9d\u8d56\u9879\u201ccontentitemid\uff1a{ContentItemId}\u201d\u6dfb\u52a0\u5230\u7f13\u5b58\u90e8\u5206\u6765\u5b8c\u6210\u6b64\u64cd\u4f5c\u3002 Cached sections can also be configured with a sliding expiration window, an absolute expiration window, or both. \u7f13\u5b58\u90e8\u5206\u8fd8\u53ef\u4ee5\u914d\u7f6e\u6ed1\u52a8\u5230\u671f\u7a97\u53e3\uff0c\u7edd\u5bf9\u5230\u671f\u7a97\u53e3\u6216\u4e24\u8005\u3002 If no expiration window is provided, a default sliding window of one minute will be used. \u5982\u679c\u672a\u63d0\u4f9b\u5230\u671f\u7a97\u53e3\uff0c\u5219\u5c06\u4f7f\u7528\u4e00\u5206\u949f\u7684\u9ed8\u8ba4\u6ed1\u52a8\u7a97\u53e3\u3002 If both types of expiration windows are supplied, the sliding policy will be used, up to the maximum absolute time allowed by the absolute expiration window. \u5982\u679c\u63d0\u4f9b\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u5230\u671f\u7a97\u53e3\uff0c\u5219\u5c06\u4f7f\u7528\u6ed1\u52a8\u7b56\u7565\uff0c\u76f4\u5230\u7edd\u5bf9\u5230\u671f\u7a97\u53e3\u5141\u8bb8\u7684\u6700\u5927\u7edd\u5bf9\u65f6\u95f4\u3002 Well-known Cache dependencies \u4f17\u6240\u5468\u77e5\u7684Cache\u4f9d\u8d56\u9879 Here is a list of common cache dependency values that can be used to invalidate cache entries. \u4ee5\u4e0b\u662f\u53ef\u7528\u4e8e\u4f7f\u7f13\u5b58\u6761\u76ee\u65e0\u6548\u7684\u516c\u5171\u7f13\u5b58\u4f9d\u8d56\u9879\u503c\u5217\u8868\u3002 | Dependency | Description | |\u4f9d\u8d56\u6027|\u8bf4\u660e| | --------- | ----------- | | --------- | ----------- | contentitemid:{ContentItemId} | Invalidated when a content item described with its unique id ( {ContentItemId} ) is Published, Unpublished or Removed. | | contentitemid\uff1a{ContentItemId} |\u4f7f\u7528\u5176\u552f\u4e00ID\uff08 {ContentItemId} \uff09\u63cf\u8ff0\u7684\u5185\u5bb9\u9879\u662f\u5df2\u53d1\u5e03\uff0c\u672a\u53d1\u5e03\u6216\u5df2\u5220\u9664\u65f6\u65e0\u6548\u3002 | | alias:{Alias} | Invalidated when a content item with a specific alias ( {Alias} ) is Published, Unpublished or Removed. | | alias\uff1a{Alias} |\u5177\u6709\u7279\u5b9a\u522b\u540d\uff08\u201c{Alias}\u201d\uff09\u7684\u5185\u5bb9\u9879\u4e3a\u5df2\u53d1\u5e03\uff0c\u672a\u53d1\u5e03\u6216\u5df2\u5220\u9664\u65f6\u65e0\u6548\u3002 | You can create your own dependencies by calling RemoveTagAsync() on ITagCache in response to events. \u60a8\u53ef\u4ee5\u901a\u8fc7\u5728 ITagCache \u4e0a\u8c03\u7528 RemoveTagAsync\uff08\uff09 \u6765\u54cd\u5e94\u4e8b\u4ef6\u6765\u521b\u5efa\u81ea\u5df1\u7684\u4f9d\u8d56\u9879\u3002 Varying cached sections (Contexts) \u6539\u53d8\u7f13\u5b58\u90e8\u5206\uff08\u4e0a\u4e0b\u6587\uff09 You may have a cached section that needs to be varied depending on the context of the request. \u60a8\u53ef\u80fd\u6709\u4e00\u4e2a\u7f13\u5b58\u90e8\u5206\u9700\u8981\u6839\u636e\u8bf7\u6c42\u7684\u4e0a\u4e0b\u6587\u8fdb\u884c\u66f4\u6539\u3002 An example of this would be a header section that is included on every page on the site, but contains different markup for each user (e.g. a log in form, or the currently logged in user's username etc...'). \u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u793a\u4f8b\u662f\u5305\u542b\u5728\u7f51\u7ad9\u4e0a\u6bcf\u4e2a\u9875\u9762\u4e0a\u7684\u6807\u9898\u90e8\u5206\uff0c\u4f46\u662f\u6bcf\u4e2a\u7528\u6237\u5305\u542b\u4e0d\u540c\u7684\u6807\u8bb0\uff08\u4f8b\u5982\u767b\u5f55\u8868\u5355\uff0c\u6216\u8005\u5f53\u524d\u767b\u5f55\u7528\u6237\u7684\u7528\u6237\u540d\u7b49......\uff09\u3002 You can do this by adding 'vary by' values (called contexts) to the cache policy of a cached section. \u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u201cvary by\u201d\u503c\uff08\u79f0\u4e3a\u4e0a\u4e0b\u6587\uff09\u6dfb\u52a0\u5230\u7f13\u5b58\u8282\u7684\u7f13\u5b58\u7b56\u7565\u6765\u6267\u884c\u6b64\u64cd\u4f5c\u3002 Adding a user context to the header example given above would create a unique cache item for each user that logs in to your site \u5728\u4e0a\u9762\u7ed9\u51fa\u7684\u6807\u9898\u793a\u4f8b\u4e2d\u6dfb\u52a0\u201cuser\u201d\u4e0a\u4e0b\u6587\u5c06\u4e3a\u767b\u5f55\u5230\u60a8\u7ad9\u70b9\u7684\u6bcf\u4e2a\u7528\u6237\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684\u7f13\u5b58\u9879 Contexts are hierarchical. For instance if a shape varies by user and user.roles contexts, only the user value will be used \u4e0a\u4e0b\u6587\u662f\u5206\u5c42\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5f62\u72b6\u56e0 user \u548c user.roles \u4e0a\u4e0b\u6587\u800c\u5f02\uff0c\u5219\u4ec5\u4f7f\u7528 user \u503c as it's more specialized than the user.roles one. \u56e0\u4e3a\u5b83\u6bd4 user.roles \u66f4\u4e13\u4e1a\u3002 Contexts can be parameterized, for instance query:age will pick the age value of the query string. \u4e0a\u4e0b\u6587\u53ef\u4ee5\u53c2\u6570\u5316\uff0c\u4f8b\u5982 query\uff1aage \u5c06\u9009\u62e9\u67e5\u8be2\u5b57\u7b26\u4e32\u7684 age \u503c\u3002 Available Contexts \u53ef\u7528\u7684\u4e0a\u4e0b\u6587 | Context | Description | |\u4e0a\u4e0b\u6587|\u8bf4\u660e| | --------- | ----------- | | --------- | ----------- | features | The list of enabled features. | | features |\u5df2\u542f\u7528\u529f\u80fd\u7684\u5217\u8868\u3002 | | features:{featureName} | The specified feature name. | | features\uff1a{featureName} |\u6307\u5b9a\u7684\u529f\u80fd\u540d\u79f0\u3002 | | query | The list of querystring values. | | query |\u67e5\u8be2\u5b57\u7b26\u4e32\u503c\u5217\u8868\u3002 | | query:{queryName} | The specified query name value. | | query\uff1a{queryName} |\u6307\u5b9a\u7684\u67e5\u8be2\u540d\u79f0\u503c\u3002 | | user | The current user. | | user |\u5f53\u524d\u7528\u6237\u3002 | | user.roles | The roles of the current user. | | user.roles |\u5f53\u524d\u7528\u6237\u7684\u89d2\u8272\u3002 | | route | The current request path. | | route |\u5f53\u524d\u7684\u8bf7\u6c42\u8def\u5f84\u3002 | You can create your own Contexts by implementing ICacheContextProvider . \u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0 ICacheContextProvider \u6765\u521b\u5efa\u81ea\u5df1\u7684\u4e0a\u4e0b\u6587\u3002 Fallback Contexts \u540e\u5907\u4e0a\u4e0b\u6587 Sometimes you may want to vary by a known value that is not an available context. \u6709\u65f6\u60a8\u53ef\u80fd\u5e0c\u671b\u6839\u636e\u4e0d\u662f\u53ef\u7528\u4e0a\u4e0b\u6587\u7684\u5df2\u77e5\u503c\u8fdb\u884c\u66f4\u6539\u3002 For example: You may wish to cache all your blog posts so that you can quickly display lists of your posts throughout your site. If the cache ID for the cache block was blog-post , you can use a known value as a context to vary the cache item for each blog post. In this case, you could use the Content Item ID as a context: \u4f8b\u5982\uff1a\u60a8\u53ef\u80fd\u5e0c\u671b\u7f13\u5b58\u6240\u6709\u535a\u5ba2\u5e16\u5b50\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u5728\u6574\u4e2a\u7f51\u7ad9\u4e2d\u5feb\u901f\u663e\u793a\u5e16\u5b50\u5217\u8868\u3002\u5982\u679c\u7f13\u5b58\u5757\u7684\u7f13\u5b58ID\u662f\u201cblog-post\u201d\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u5df2\u77e5\u503c\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u6765\u6539\u53d8\u6bcf\u4e2a\u535a\u5ba2\u5e16\u5b50\u7684\u7f13\u5b58\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5185\u5bb9\u9879ID\u4f5c\u4e3a\u4e0a\u4e0b\u6587\uff1a {% cache \"blog-post-summary\", vary_by: Model.ContentItemId %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05cache\u201cblog-post-summary\u201d\uff0cvary_by\uff1aModel.ContentItemId\uff05}</font> ... {% endcache %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endcache\uff05}</font> Usage \u7528\u6cd5 Cached sections can be configured to encompass a shape, or they can be explicitly added to markup with the cache liquid block, or the cache razor tag helper: \u7f13\u5b58\u7684\u90e8\u5206\u53ef\u4ee5\u914d\u7f6e\u4e3a\u5305\u542b\u4e00\u4e2a\u5f62\u72b6\uff0c\u6216\u8005\u53ef\u4ee5\u4f7f\u7528 cache liquid\u5757\u6216 cache razor tag helper\u5c06\u5b83\u4eec\u663e\u5f0f\u6dfb\u52a0\u5230\u6807\u8bb0\u4e2d\uff1a Caching a shape \u7f13\u5b58\u5f62\u72b6 ShapeMetadata.Cache(string cacheId) When called on a shape instances, marks the shape as being cached. Returns a CacheContext object. \u5728\u5f62\u72b6\u5b9e\u4f8b\u4e0a\u8c03\u7528\u65f6\uff0c\u5c06\u5f62\u72b6\u6807\u8bb0\u4e3a\u6b63\u5728\u7f13\u5b58\u3002\u8fd4\u56de\u4e00\u4e2a CacheContext \u5bf9\u8c61\u3002 Example: myShape.Cache(\"myshape\") \u793a\u4f8b\uff1a myShape.Cache\uff08\u201cmyshape\u201d\uff09 CacheContext members CacheContext\u6210\u5458 | Method | Description | |\u65b9\u6cd5|\u8bf4\u660e| | --------- | ----------- | | --------- | ----------- | WithDuration(Timespan) | Cache the shape for the specific amount of time. | | WithDuration\uff08Timespan\uff09 |\u7f13\u5b58\u5f62\u72b6\u7279\u5b9a\u7684\u65f6\u95f4\u3002 | | WithSlidingExpiration(Timespan) | Cache the shape for a specific amount of time with a sliding window. | | WithSlidingExpiration\uff08Timespan\uff09 |\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u7f13\u5b58\u5f62\u72b6\u7279\u5b9a\u7684\u65f6\u95f4\u3002 | | AddContext(params string[]) | Varies the cached content on the specified context values. | | AddContext\uff08params string []\uff09 |\u6539\u53d8\u6307\u5b9a\u4e0a\u4e0b\u6587\u503c\u7684\u7f13\u5b58\u5185\u5bb9\u3002 | | RemoveContext(string) | Removes the specified context. | | RemoveContext\uff08string\uff09 |\u5220\u9664\u6307\u5b9a\u7684\u4e0a\u4e0b\u6587\u3002 | | AddDependency(params string[]) | Defines the context values that will invalidate the cache entry. | | AddDependency\uff08params string []\uff09 |\u5b9a\u4e49\u5c06\u4f7f\u9ad8\u901f\u7f13\u5b58\u6761\u76ee\u65e0\u6548\u7684\u4e0a\u4e0b\u6587\u503c\u3002 | | RemoveDependency(string) | Removes the specified dependency. | | RemoveDependency\uff08string\uff09 |\u5220\u9664\u6307\u5b9a\u7684\u4f9d\u8d56\u9879\u3002 | | AddTag(string) | Adds a tag to the cache entry to that it can be invalidated by this tag value. | | AddTag\uff08string\uff09 |\u5c06\u6807\u8bb0\u6dfb\u52a0\u5230\u7f13\u5b58\u6761\u76ee\uff0c\u4f7f\u5176\u53ef\u4ee5\u901a\u8fc7\u6b64\u6807\u8bb0\u503c\u65e0\u6548\u3002 | | RemoveTag(string) | Removes the specified tag. | | RemoveTag\uff08string\uff09 |\u5220\u9664\u6307\u5b9a\u7684\u6807\u8bb0\u3002 | Note \uff01\u6ce8\u610f `AddDependency` differs from `AddContext` in that it doesn't store multiple values for each context, but invalidates the cached shape content when the value of the context varies. Internally they share the same implementation, as the physical cache key will contain the dependency context value. Shape Tag Helper Attributes \u5f62\u72b6\u6807\u8bb0\u52a9\u624b\u5c5e\u6027 When using shape tag helpers, the following attributes can be used: \u4f7f\u7528\u5f62\u72b6\u6807\u8bb0\u5e2e\u52a9\u7a0b\u5e8f\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5c5e\u6027\uff1a | Razor Attribute | Liquid Attribute | Description | Required | |\u5243\u5200\u5c5e\u6027|\u6db2\u4f53\u5c5e\u6027|\u8bf4\u660e|\u5fc5\u9700| | --------- | ----------- | ----------- | ----------- | | --------- | ----------- ----------- ----------- | cache-id | cache_id | The identifier of the cached shape. | Yes | | cache-id | cache_id |\u7f13\u5b58\u5f62\u72b6\u7684\u6807\u8bc6\u7b26\u3002 |\u662f\u7684| | cache-context | cache_context | A set of space/comma-separated context values. | No | | cache-context | cache_context |\u4e00\u7ec4\u7a7a\u683c/\u9017\u53f7\u5206\u9694\u7684\u4e0a\u4e0b\u6587\u503c\u3002 |\u6ca1\u6709| | cache-dependency | cache_dependency | A set of space/comma-separated dependency values. | No | | cache-dependency | cache_dependency |\u4e00\u7ec4\u7a7a\u683c/\u9017\u53f7\u5206\u9694\u7684\u4f9d\u8d56\u9879\u503c\u3002 |\u6ca1\u6709| | cache-tag | cache_tag | A set of space/comma-separated tag values. | No | | cache-tag | cache_tag |\u4e00\u7ec4\u7a7a\u683c/\u9017\u53f7\u5206\u9694\u7684\u6807\u8bb0\u503c\u3002 |\u6ca1\u6709| | cache-fixed-duration | cache_expires_after | The cache duration of the entry, e.g. \"00:05:00\" for 5 minutes. | No | | cache-fixed-duration | cache_expires_after |\u6761\u76ee\u7684\u7f13\u5b58\u6301\u7eed\u65f6\u95f4\uff0c\u4f8b\u5982\u201c00:05:00\u201d\u6301\u7eed5\u5206\u949f\u3002 |\u6ca1\u6709| | cache-sliding-duration | cache_expires_sliding | The sliding cache duration of the entry, e.g. \"00:05:00\" for 5 minutes. | No | | cache-sliding-duration | cache_expires_sliding |\u8be5\u6761\u76ee\u7684\u6ed1\u52a8\u7f13\u5b58\u6301\u7eed\u65f6\u95f4\uff0c\u4f8b\u5982\uff0c \u201c00:05:00\u201d\u6301\u7eed5\u5206\u949f\u3002 |\u6ca1\u6709| e.g.: to cache the menu shape in a liquid template, you would use this markup: \u4f8b\u5982\uff1a\u8981\u5c06\u83dc\u5355\u5f62\u72b6\u7f13\u5b58\u5728\u6db2\u4f53\u6a21\u677f\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u6807\u8bb0\uff1a {% shape \"menu\", alias: \"alias:main-menu\", cache_id: \"main-menu\", cache_expires_after: \"00:05:00\", cache_tag: \"alias:main-menu\" %} Liquid cache block \u6db2\u4f53\u7f13\u5b58\u5757 The liquid cache block can be used to cache sections of markup. cache blocks can be nested. \u6db2\u4f53\u201c\u7f13\u5b58\u201d\u5757\u53ef\u7528\u4e8e\u7f13\u5b58\u6807\u8bb0\u90e8\u5206\u3002 cache \u5757\u53ef\u4ee5\u5d4c\u5957\u3002 Arguments \u53c2\u6570 | Liquid Attribute | Description | Required | |\u6db2\u4f53\u5c5e\u6027|\u8bf4\u660e|\u5fc5\u9700| | --------- | ----------- | ----------- | | --------- | ----------- ----------- | id | The identifier of the cached shape. | Yes (this is the default first argument- no need to explicitly specify the name of this argument) | | id |\u7f13\u5b58\u5f62\u72b6\u7684\u6807\u8bc6\u7b26\u3002 |\u662f\uff08\u8fd9\u662f\u9ed8\u8ba4\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570 - \u65e0\u9700\u663e\u5f0f\u6307\u5b9a\u6b64\u53c2\u6570\u7684\u540d\u79f0\uff09| | contexts | A set of space/comma-separated context values. | No | | contexts |\u4e00\u7ec4\u7a7a\u683c/\u9017\u53f7\u5206\u9694\u7684\u4e0a\u4e0b\u6587\u503c\u3002 |\u6ca1\u6709| | dependencies | A set of space/comma-separated dependency values. | No | | dependencies |\u4e00\u7ec4\u7a7a\u683c/\u9017\u53f7\u5206\u9694\u7684\u4f9d\u8d56\u9879\u503c\u3002 |\u6ca1\u6709| | expires_after | The cache duration of the entry, e.g. \"00:05:00\" for 5 minutes. | No | | expires_after |\u6761\u76ee\u7684\u7f13\u5b58\u6301\u7eed\u65f6\u95f4\uff0c\u4f8b\u5982\u201c00:05:00\u201d\u6301\u7eed5\u5206\u949f\u3002 |\u6ca1\u6709| | expires_sliding | The sliding cache duration of the entry, e.g. \"00:05:00\" for 5 minutes. | No | | expires_sliding |\u8be5\u6761\u76ee\u7684\u6ed1\u52a8\u7f13\u5b58\u6301\u7eed\u65f6\u95f4\uff0c\u4f8b\u5982\uff0c \u201c00:05:00\u201d\u6301\u7eed5\u5206\u949f\u3002 |\u6ca1\u6709| Examples \u4f8b\u5b50 Simple block: \u7b80\u5355\u5757\uff1a {% cache \"my-cache-block\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05cache\u201cmy-cache-block\u201d\uff05}</font> ... {% endcache %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endcache\uff05}</font> Nested blocks: \u5d4c\u5957\u5757\uff1a {% cache \"a\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05cache\u201ca\u201d\uff05}</font> A {{ \"now\" | date: \"%T\" }} (No Duration) <br /> {% cache \"a1\", dependencies: \"a1\", vary_by: \"user\", expires_after: \"0:5:0\" %} A1 {{ \"now\" | date: \"%T\" }} (5 Minutes) <br /> {% endcache %} {% cache \"a2\", dependencies: \"a2\", expires_after: \"0:0:1\" %} A2 {{ \"now\" | date: \"%T\" }} (1 Second) <br /> {% cache \"a2a\", dependencies: \"a2a\", contexts: \"route\", expires_sliding: \"0:0:5\" %} A2A {{ \"now\" | date: \"%T\" }} (5 Seconds) <br /> {% endcache %} {% endcache %} {% endcache %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endcache\uff05}</font> Altering a cache scope \u66f4\u6539\u7f13\u5b58\u8303\u56f4 You may not yet know all the child dependencies, or even how long the cache block should be cached for when you enter a cache block. \u60a8\u53ef\u80fd\u8fd8\u4e0d\u77e5\u9053\u6240\u6709\u5b50\u4f9d\u8d56\u9879\uff0c\u751a\u81f3\u8fd8\u4e0d\u77e5\u9053\u5728\u60a8\u8f93\u5165\u7f13\u5b58\u5757\u65f6\u7f13\u5b58\u5757\u5e94\u8be5\u7f13\u5b58\u591a\u957f\u65f6\u95f4\u3002 An example might be a cache block around a list of content items from a query- because you do not know which content items will be displayed by the query, you cannot define the correct dependencies when you enter the cache block. \u4e00\u4e2a\u793a\u4f8b\u53ef\u80fd\u662f\u6765\u81ea\u67e5\u8be2\u7684\u5185\u5bb9\u9879\u5217\u8868\u5468\u56f4\u7684\u7f13\u5b58\u5757 - \u56e0\u4e3a\u60a8\u4e0d\u77e5\u9053\u67e5\u8be2\u5c06\u663e\u793a\u54ea\u4e9b\u5185\u5bb9\u9879\uff0c\u6240\u4ee5\u5728\u8f93\u5165\u7f13\u5b58\u5757\u65f6\u65e0\u6cd5\u5b9a\u4e49\u6b63\u786e\u7684\u4f9d\u8d56\u9879\u3002 There are four tags that allow you to alter the current cache scope. It's safe to use these tags even if you don't necessarily know if you're inside a cache block: \u6709\u56db\u4e2a\u6807\u8bb0\u5141\u8bb8\u60a8\u66f4\u6539\u5f53\u524d\u7f13\u5b58\u8303\u56f4\u3002\u5373\u4f7f\u60a8\u4e0d\u4e00\u5b9a\u77e5\u9053\u81ea\u5df1\u662f\u5426\u5728\u7f13\u5b58\u5757\u4e2d\uff0c\u4f7f\u7528\u8fd9\u4e9b\u6807\u8bb0\u4e5f\u662f\u5b89\u5168\u7684\uff1a | Liquid Tag | Description | Example | |\u6db2\u4f53\u6807\u7b7e|\u8bf4\u660e|\u793a\u4f8b| | --------- | ----------- | ----------- | | --------- | ----------- ----------- | cache_dependency | Adds a dependency to the current cache scope | {% cache_dependency \"alias:{Alias}\" %} | | cache_dependency |\u5411\u5f53\u524d\u7f13\u5b58\u8303\u56f4\u6dfb\u52a0\u4f9d\u8d56\u9879| {\uff05cache_dependency'\u522b\u540d\uff1a{Alias}\u201c\uff05} | | cache_expires_on | Sets a fixed date and time that the cache item will expire. The most restrictive cache policy (i.e. the one with the shortest life) will win in the event of multiple expiry policies being defined for a single block. | {% cache_expires_on {A DateTime or DateTimeOffset instance %} (e.g. from a date/time field on a content item) | | cache_expires_on |\u8bbe\u7f6e\u7f13\u5b58\u9879\u76ee\u5c06\u8fc7\u671f\u7684\u56fa\u5b9a\u65e5\u671f\u548c\u65f6\u95f4\u3002\u5982\u679c\u4e3a\u5355\u4e2a\u5757\u5b9a\u4e49\u4e86\u591a\u4e2a\u5230\u671f\u7b56\u7565\uff0c\u5219\u9650\u5236\u6027\u6700\u5f3a\u7684\u7f13\u5b58\u7b56\u7565\uff08\u5373\u5177\u6709\u6700\u77ed\u5bff\u547d\u7684\u7f13\u5b58\u7b56\u7565\uff09\u5c06\u83b7\u80dc\u3002 | {\uff05cache_expires_on {DateTime\u6216DateTimeOffset instance\uff05} \uff08\u4f8b\u5982\u6765\u81ea\u5185\u5bb9\u9879\u7684\u65e5\u671f/\u65f6\u95f4\u5b57\u6bb5\uff09| | cache_expires_after | Sets a timespan relative to when the item was cached that the cache item will expire. The most restrictive cache policy (i.e. the one with the shortest life) will win in the event of multiple expiry policies being defined for a single block. | {% cache_expires_after \"01:00:00\" %} (One hour) | | cache_expires_after |\u8bbe\u7f6e\u76f8\u5bf9\u4e8e\u7f13\u5b58\u9879\u76ee\u7f13\u5b58\u9879\u76ee\u5230\u671f\u65f6\u7684\u65f6\u95f4\u8de8\u5ea6\u3002\u5982\u679c\u4e3a\u5355\u4e2a\u5757\u5b9a\u4e49\u4e86\u591a\u4e2a\u5230\u671f\u7b56\u7565\uff0c\u5219\u9650\u5236\u6027\u6700\u5f3a\u7684\u7f13\u5b58\u7b56\u7565\uff08\u5373\u5177\u6709\u6700\u77ed\u5bff\u547d\u7684\u7f13\u5b58\u7b56\u7565\uff09\u5c06\u83b7\u80dc\u3002 | {\uff05cache_expires_after\u201c01:00:00\u201d\uff05} \uff08\u4e00\u5c0f\u65f6\uff09| | cache_expires_sliding | Sets a sliding window for the expiry of the cache item. The most restrictive cache policy (i.e. the one with the shortest life) will win in the event of multiple expiry policies being defined for a single block. | {% cache_expires_sliding \"00:01:00\" %} (One minute) | | cache_expires_sliding |\u4e3a\u7f13\u5b58\u9879\u7684\u5230\u671f\u8bbe\u7f6e\u6ed1\u52a8\u7a97\u53e3\u3002\u5982\u679c\u4e3a\u5355\u4e2a\u5757\u5b9a\u4e49\u4e86\u591a\u4e2a\u5230\u671f\u7b56\u7565\uff0c\u5219\u9650\u5236\u6027\u6700\u5f3a\u7684\u7f13\u5b58\u7b56\u7565\uff08\u5373\u5177\u6709\u6700\u77ed\u5bff\u547d\u7684\u7f13\u5b58\u7b56\u7565\uff09\u5c06\u83b7\u80dc\u3002 | {\uff05cache_expires_sliding\u201c00:01:00\u201d\uff05} \uff08\u4e00\u5206\u949f\uff09| Example: \u4f8b\uff1a Displaying content items from a query: \u663e\u793a\u67e5\u8be2\u4e2d\u7684\u5185\u5bb9\u9879\uff1a {% cache \"recent-blog-posts\"} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05cache\u201crecent-blog-posts\u201d}</font> {% assign recentBlogPosts = Queries.RecentBlogPosts | query %} {% for item in recentBlogPosts %} {{ item | display_text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {% assign cacheDependency = \"contentitemid:\" | append: Model.ContentItem.ContentItemId %} {% cache_dependency cacheDependency %} {% endfor %} {% endcache %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endcache\uff05}</font> Each item that is displayed by the query will now add its own cache dependency to the recent-blog-posts cache block. \u67e5\u8be2\u663e\u793a\u7684\u6bcf\u4e2a\u9879\u76ee\u73b0\u5728\u90fd\u4f1a\u5c06\u81ea\u5df1\u7684\u7f13\u5b58\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230 recent-blog-posts \u7f13\u5b58\u5757\u4e2d\u3002 Razor cache tag \u5243\u5200\u7f13\u5b58\u6807\u7b7e This has not yet been implemented. If you feel up to it, and you'd like to help out, then please raise a pull request. \u8fd9\u5c1a\u672a\u5b9e\u65bd\u3002\u5982\u679c\u60a8\u5bf9\u6b64\u611f\u5230\u6ee1\u610f\uff0c\u5e76\u5e0c\u671b\u63d0\u4f9b\u5e2e\u52a9\uff0c\u8bf7\u63d0\u51fa\u62c9\u53d6\u8bf7\u6c42\u3002","title":"Dynamic Cache"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#dynamic-cache-orchardcoredynamiccache","text":"","title":"Dynamic Cache (OrchardCore.DynamicCache)"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#orchardcoredynamiccache","text":"","title":"\u52a8\u6001\u7f13\u5b58\uff08OrchardCore.DynamicCache\uff09"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#purpose","text":"","title":"Purpose"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_1","text":"Dynamic Cache allows you to cache sections of markup. \u52a8\u6001\u9ad8\u901f\u7f13\u5b58\u5141\u8bb8\u60a8\u7f13\u5b58\u6807\u8bb0\u7684\u5404\u4e2a\u90e8\u5206\u3002 Each cached section of markup can contain other (child) cached sections of markup. \u6807\u8bb0\u7684\u6bcf\u4e2a\u7f13\u5b58\u90e8\u5206\u90fd\u53ef\u4ee5\u5305\u542b\u6807\u8bb0\u7684\u5176\u4ed6\uff08\u5b50\uff09\u7f13\u5b58\u90e8\u5206\u3002 Cached sections can all have their own cache policies, which allows for finer configuration options than a page level cache would have. \u7f13\u5b58\u90e8\u5206\u90fd\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684\u7f13\u5b58\u7b56\u7565\uff0c\u8fd9\u5141\u8bb8\u6bd4\u9875\u9762\u7ea7\u7f13\u5b58\u66f4\u7cbe\u7ec6\u7684\u914d\u7f6e\u9009\u9879\u3002 Cached values are stored using the IDynamicCache service. \u4f7f\u7528 IDynamicCache \u670d\u52a1\u5b58\u50a8\u7f13\u5b58\u7684\u503c\u3002 Its default implementation is based on IDistributedCache which is itself based on IMemoryCache . \u5b83\u7684\u9ed8\u8ba4\u5b9e\u73b0\u57fa\u4e8e IDistributedCache \uff0c\u5b83\u672c\u8eab\u57fa\u4e8e IMemoryCache \u3002","title":"\u76ee\u7684"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#example","text":"","title":"Example:"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_2","text":"Layout (not cached) \u5e03\u5c40\uff08\u672a\u7f13\u5b58\uff09 Section A A\u90e8\u5206 Section A1 (varies by role) Section A2 Section B B\u8282 Section B1 (varies by query string) Section B2","title":"\u4f8b\uff1a"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#rendering-cached-sections","text":"","title":"Rendering cached sections"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_3","text":"When this page is rendered for the first time, all shapes will be evaluated. Any blocks of markup that have been identified as cachable will be stored in the IDynamicCache service. \u9996\u6b21\u6e32\u67d3\u6b64\u9875\u9762\u65f6\uff0c\u5c06\u8bc4\u4f30\u6240\u6709\u5f62\u72b6\u3002\u4efb\u4f55\u5df2\u6807\u8bc6\u4e3a\u53ef\u7f13\u5b58\u7684\u6807\u8bb0\u5757\u90fd\u5c06\u5b58\u50a8\u5728\u201cIDynamicCache\u201d\u670d\u52a1\u4e2d\u3002 On subsequent requests, if a cacheable section has already been cached (and the cache entry is still valid) then it won't be processed ( Processing event in \u5728\u540e\u7eed\u8bf7\u6c42\u4e2d\uff0c\u5982\u679c\u5df2\u7f13\u5b58\u53ef\u7f13\u5b58\u90e8\u5206\uff08\u5e76\u4e14\u7f13\u5b58\u6761\u76ee\u4ecd\u7136\u6709\u6548\uff09\uff0c\u5219\u4e0d\u4f1a\u5904\u7406\u5b83\uff08\u5904\u7406\u4e2d\u7684 Processing \u4e8b\u4ef6\uff09 the ShapeMetadata ). The markup will be retrieved from the cache and returned as part of the response. ShapeMetadata \uff09\u3002\u6807\u8bb0\u5c06\u4ece\u7f13\u5b58\u4e2d\u68c0\u7d22\u5e76\u4f5c\u4e3a\u54cd\u5e94\u7684\u4e00\u90e8\u5206\u8fd4\u56de\u3002","title":"\u6e32\u67d3\u7f13\u5b58\u7684\u90e8\u5206"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#invalidating-cached-sections","text":"","title":"Invalidating cached sections"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_4","text":"If a cached section is invalidated, the markup for the section will be regenerated on the next request, and then placed back into the cache for subsequent requests to take advantage of. \u5982\u679c\u7f13\u5b58\u7684\u90e8\u5206\u65e0\u6548\uff0c\u5219\u5c06\u5728\u4e0b\u4e00\u4e2a\u8bf7\u6c42\u4e0a\u91cd\u65b0\u751f\u6210\u8be5\u90e8\u5206\u7684\u6807\u8bb0\uff0c\u7136\u540e\u5c06\u5176\u653e\u56de\u7f13\u5b58\u4e2d\u4ee5\u4f9b\u540e\u7eed\u8bf7\u6c42\u5229\u7528\u3002 If its children are still cached then their cached value will be used. \u5982\u679c\u5b83\u7684\u5b50\u8282\u70b9\u4ecd\u7136\u88ab\u7f13\u5b58\uff0c\u90a3\u4e48\u5c06\u4f7f\u7528\u5b83\u4eec\u7684\u7f13\u5b58\u503c\u3002 Invalidating a block will also invalidate all parent blocks. \u4f7f\u5757\u65e0\u6548\u4e5f\u5c06\u4f7f\u6240\u6709\u7236\u5757\u65e0\u6548\u3002 For instance, if Section B2 is invalidated, Section B will also be invalidated. When the Layout is rendered, the Section B code will run \u4f8b\u5982\uff0c\u5982\u679c Section B2 \u65e0\u6548\uff0c Section B \u4e5f\u5c06\u5931\u6548\u3002\u6e32\u67d3Layout\u65f6\uff0c\u5c06\u8fd0\u884c Section B \u4ee3\u7801 again, as will Section B2 , but the cached content of Section B1 will be reused. \u518d\u6b21\uff0c \u90e8\u5206B2 \uff0c\u4f46'\u90e8\u5206B1`\u7684\u7f13\u5b58\u5185\u5bb9\u5c06\u88ab\u91cd\u7528\u3002 Cached sections can define dependencies, which allows the cache to know when the cached value should be invalidated. \u7f13\u5b58\u90e8\u5206\u53ef\u4ee5\u5b9a\u4e49\u4f9d\u8d56\u5173\u7cfb\uff0c\u8fd9\u5141\u8bb8\u7f13\u5b58\u77e5\u9053\u4f55\u65f6\u5e94\u8be5\u4f7f\u7f13\u5b58\u7684\u503c\u65e0\u6548\u3002 For example- if a cache section includes the body of a content item, you may want to automatically invalidate this cache section whenever that content item changes. \u4f8b\u5982\uff0c\u5982\u679c\u7f13\u5b58\u90e8\u5206\u5305\u542b\u5185\u5bb9\u9879\u7684\u4e3b\u4f53\uff0c\u5219\u53ef\u80fd\u5e0c\u671b\u6bcf\u5f53\u8be5\u5185\u5bb9\u9879\u53d1\u751f\u66f4\u6539\u65f6\u81ea\u52a8\u4f7f\u6b64\u7f13\u5b58\u90e8\u5206\u65e0\u6548\u3002 You can do this by adding the dependencies contentitemid:{ContentItemId} to the cache section. \u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u4f9d\u8d56\u9879\u201ccontentitemid\uff1a{ContentItemId}\u201d\u6dfb\u52a0\u5230\u7f13\u5b58\u90e8\u5206\u6765\u5b8c\u6210\u6b64\u64cd\u4f5c\u3002 Cached sections can also be configured with a sliding expiration window, an absolute expiration window, or both. \u7f13\u5b58\u90e8\u5206\u8fd8\u53ef\u4ee5\u914d\u7f6e\u6ed1\u52a8\u5230\u671f\u7a97\u53e3\uff0c\u7edd\u5bf9\u5230\u671f\u7a97\u53e3\u6216\u4e24\u8005\u3002 If no expiration window is provided, a default sliding window of one minute will be used. \u5982\u679c\u672a\u63d0\u4f9b\u5230\u671f\u7a97\u53e3\uff0c\u5219\u5c06\u4f7f\u7528\u4e00\u5206\u949f\u7684\u9ed8\u8ba4\u6ed1\u52a8\u7a97\u53e3\u3002 If both types of expiration windows are supplied, the sliding policy will be used, up to the maximum absolute time allowed by the absolute expiration window. \u5982\u679c\u63d0\u4f9b\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u5230\u671f\u7a97\u53e3\uff0c\u5219\u5c06\u4f7f\u7528\u6ed1\u52a8\u7b56\u7565\uff0c\u76f4\u5230\u7edd\u5bf9\u5230\u671f\u7a97\u53e3\u5141\u8bb8\u7684\u6700\u5927\u7edd\u5bf9\u65f6\u95f4\u3002","title":"\u4f7f\u7f13\u5b58\u7684\u90e8\u5206\u65e0\u6548"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#well-known-cache-dependencies","text":"","title":"Well-known Cache dependencies"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#cache","text":"Here is a list of common cache dependency values that can be used to invalidate cache entries. \u4ee5\u4e0b\u662f\u53ef\u7528\u4e8e\u4f7f\u7f13\u5b58\u6761\u76ee\u65e0\u6548\u7684\u516c\u5171\u7f13\u5b58\u4f9d\u8d56\u9879\u503c\u5217\u8868\u3002 | Dependency | Description | |\u4f9d\u8d56\u6027|\u8bf4\u660e| | --------- | ----------- | | --------- | ----------- | contentitemid:{ContentItemId} | Invalidated when a content item described with its unique id ( {ContentItemId} ) is Published, Unpublished or Removed. | | contentitemid\uff1a{ContentItemId} |\u4f7f\u7528\u5176\u552f\u4e00ID\uff08 {ContentItemId} \uff09\u63cf\u8ff0\u7684\u5185\u5bb9\u9879\u662f\u5df2\u53d1\u5e03\uff0c\u672a\u53d1\u5e03\u6216\u5df2\u5220\u9664\u65f6\u65e0\u6548\u3002 | | alias:{Alias} | Invalidated when a content item with a specific alias ( {Alias} ) is Published, Unpublished or Removed. | | alias\uff1a{Alias} |\u5177\u6709\u7279\u5b9a\u522b\u540d\uff08\u201c{Alias}\u201d\uff09\u7684\u5185\u5bb9\u9879\u4e3a\u5df2\u53d1\u5e03\uff0c\u672a\u53d1\u5e03\u6216\u5df2\u5220\u9664\u65f6\u65e0\u6548\u3002 | You can create your own dependencies by calling RemoveTagAsync() on ITagCache in response to events. \u60a8\u53ef\u4ee5\u901a\u8fc7\u5728 ITagCache \u4e0a\u8c03\u7528 RemoveTagAsync\uff08\uff09 \u6765\u54cd\u5e94\u4e8b\u4ef6\u6765\u521b\u5efa\u81ea\u5df1\u7684\u4f9d\u8d56\u9879\u3002","title":"\u4f17\u6240\u5468\u77e5\u7684Cache\u4f9d\u8d56\u9879"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#varying-cached-sections-contexts","text":"","title":"Varying cached sections (Contexts)"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_5","text":"You may have a cached section that needs to be varied depending on the context of the request. \u60a8\u53ef\u80fd\u6709\u4e00\u4e2a\u7f13\u5b58\u90e8\u5206\u9700\u8981\u6839\u636e\u8bf7\u6c42\u7684\u4e0a\u4e0b\u6587\u8fdb\u884c\u66f4\u6539\u3002 An example of this would be a header section that is included on every page on the site, but contains different markup for each user (e.g. a log in form, or the currently logged in user's username etc...'). \u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u793a\u4f8b\u662f\u5305\u542b\u5728\u7f51\u7ad9\u4e0a\u6bcf\u4e2a\u9875\u9762\u4e0a\u7684\u6807\u9898\u90e8\u5206\uff0c\u4f46\u662f\u6bcf\u4e2a\u7528\u6237\u5305\u542b\u4e0d\u540c\u7684\u6807\u8bb0\uff08\u4f8b\u5982\u767b\u5f55\u8868\u5355\uff0c\u6216\u8005\u5f53\u524d\u767b\u5f55\u7528\u6237\u7684\u7528\u6237\u540d\u7b49......\uff09\u3002 You can do this by adding 'vary by' values (called contexts) to the cache policy of a cached section. \u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u201cvary by\u201d\u503c\uff08\u79f0\u4e3a\u4e0a\u4e0b\u6587\uff09\u6dfb\u52a0\u5230\u7f13\u5b58\u8282\u7684\u7f13\u5b58\u7b56\u7565\u6765\u6267\u884c\u6b64\u64cd\u4f5c\u3002 Adding a user context to the header example given above would create a unique cache item for each user that logs in to your site \u5728\u4e0a\u9762\u7ed9\u51fa\u7684\u6807\u9898\u793a\u4f8b\u4e2d\u6dfb\u52a0\u201cuser\u201d\u4e0a\u4e0b\u6587\u5c06\u4e3a\u767b\u5f55\u5230\u60a8\u7ad9\u70b9\u7684\u6bcf\u4e2a\u7528\u6237\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684\u7f13\u5b58\u9879 Contexts are hierarchical. For instance if a shape varies by user and user.roles contexts, only the user value will be used \u4e0a\u4e0b\u6587\u662f\u5206\u5c42\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5f62\u72b6\u56e0 user \u548c user.roles \u4e0a\u4e0b\u6587\u800c\u5f02\uff0c\u5219\u4ec5\u4f7f\u7528 user \u503c as it's more specialized than the user.roles one. \u56e0\u4e3a\u5b83\u6bd4 user.roles \u66f4\u4e13\u4e1a\u3002 Contexts can be parameterized, for instance query:age will pick the age value of the query string. \u4e0a\u4e0b\u6587\u53ef\u4ee5\u53c2\u6570\u5316\uff0c\u4f8b\u5982 query\uff1aage \u5c06\u9009\u62e9\u67e5\u8be2\u5b57\u7b26\u4e32\u7684 age \u503c\u3002","title":"\u6539\u53d8\u7f13\u5b58\u90e8\u5206\uff08\u4e0a\u4e0b\u6587\uff09"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#available-contexts","text":"","title":"Available Contexts"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_6","text":"| Context | Description | |\u4e0a\u4e0b\u6587|\u8bf4\u660e| | --------- | ----------- | | --------- | ----------- | features | The list of enabled features. | | features |\u5df2\u542f\u7528\u529f\u80fd\u7684\u5217\u8868\u3002 | | features:{featureName} | The specified feature name. | | features\uff1a{featureName} |\u6307\u5b9a\u7684\u529f\u80fd\u540d\u79f0\u3002 | | query | The list of querystring values. | | query |\u67e5\u8be2\u5b57\u7b26\u4e32\u503c\u5217\u8868\u3002 | | query:{queryName} | The specified query name value. | | query\uff1a{queryName} |\u6307\u5b9a\u7684\u67e5\u8be2\u540d\u79f0\u503c\u3002 | | user | The current user. | | user |\u5f53\u524d\u7528\u6237\u3002 | | user.roles | The roles of the current user. | | user.roles |\u5f53\u524d\u7528\u6237\u7684\u89d2\u8272\u3002 | | route | The current request path. | | route |\u5f53\u524d\u7684\u8bf7\u6c42\u8def\u5f84\u3002 | You can create your own Contexts by implementing ICacheContextProvider . \u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0 ICacheContextProvider \u6765\u521b\u5efa\u81ea\u5df1\u7684\u4e0a\u4e0b\u6587\u3002","title":"\u53ef\u7528\u7684\u4e0a\u4e0b\u6587"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#fallback-contexts","text":"","title":"Fallback Contexts"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_7","text":"Sometimes you may want to vary by a known value that is not an available context. \u6709\u65f6\u60a8\u53ef\u80fd\u5e0c\u671b\u6839\u636e\u4e0d\u662f\u53ef\u7528\u4e0a\u4e0b\u6587\u7684\u5df2\u77e5\u503c\u8fdb\u884c\u66f4\u6539\u3002 For example: You may wish to cache all your blog posts so that you can quickly display lists of your posts throughout your site. If the cache ID for the cache block was blog-post , you can use a known value as a context to vary the cache item for each blog post. In this case, you could use the Content Item ID as a context: \u4f8b\u5982\uff1a\u60a8\u53ef\u80fd\u5e0c\u671b\u7f13\u5b58\u6240\u6709\u535a\u5ba2\u5e16\u5b50\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u5728\u6574\u4e2a\u7f51\u7ad9\u4e2d\u5feb\u901f\u663e\u793a\u5e16\u5b50\u5217\u8868\u3002\u5982\u679c\u7f13\u5b58\u5757\u7684\u7f13\u5b58ID\u662f\u201cblog-post\u201d\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u5df2\u77e5\u503c\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u6765\u6539\u53d8\u6bcf\u4e2a\u535a\u5ba2\u5e16\u5b50\u7684\u7f13\u5b58\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5185\u5bb9\u9879ID\u4f5c\u4e3a\u4e0a\u4e0b\u6587\uff1a {% cache \"blog-post-summary\", vary_by: Model.ContentItemId %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05cache\u201cblog-post-summary\u201d\uff0cvary_by\uff1aModel.ContentItemId\uff05}</font> ... {% endcache %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endcache\uff05}</font>","title":"\u540e\u5907\u4e0a\u4e0b\u6587"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#usage","text":"","title":"Usage"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_8","text":"Cached sections can be configured to encompass a shape, or they can be explicitly added to markup with the cache liquid block, or the cache razor tag helper: \u7f13\u5b58\u7684\u90e8\u5206\u53ef\u4ee5\u914d\u7f6e\u4e3a\u5305\u542b\u4e00\u4e2a\u5f62\u72b6\uff0c\u6216\u8005\u53ef\u4ee5\u4f7f\u7528 cache liquid\u5757\u6216 cache razor tag helper\u5c06\u5b83\u4eec\u663e\u5f0f\u6dfb\u52a0\u5230\u6807\u8bb0\u4e2d\uff1a","title":"\u7528\u6cd5"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#caching-a-shape","text":"","title":"Caching a shape"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_9","text":"ShapeMetadata.Cache(string cacheId) When called on a shape instances, marks the shape as being cached. Returns a CacheContext object. \u5728\u5f62\u72b6\u5b9e\u4f8b\u4e0a\u8c03\u7528\u65f6\uff0c\u5c06\u5f62\u72b6\u6807\u8bb0\u4e3a\u6b63\u5728\u7f13\u5b58\u3002\u8fd4\u56de\u4e00\u4e2a CacheContext \u5bf9\u8c61\u3002 Example: myShape.Cache(\"myshape\") \u793a\u4f8b\uff1a myShape.Cache\uff08\u201cmyshape\u201d\uff09","title":"\u7f13\u5b58\u5f62\u72b6"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#cachecontext-members","text":"","title":"CacheContext members"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#cachecontext","text":"| Method | Description | |\u65b9\u6cd5|\u8bf4\u660e| | --------- | ----------- | | --------- | ----------- | WithDuration(Timespan) | Cache the shape for the specific amount of time. | | WithDuration\uff08Timespan\uff09 |\u7f13\u5b58\u5f62\u72b6\u7279\u5b9a\u7684\u65f6\u95f4\u3002 | | WithSlidingExpiration(Timespan) | Cache the shape for a specific amount of time with a sliding window. | | WithSlidingExpiration\uff08Timespan\uff09 |\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u7f13\u5b58\u5f62\u72b6\u7279\u5b9a\u7684\u65f6\u95f4\u3002 | | AddContext(params string[]) | Varies the cached content on the specified context values. | | AddContext\uff08params string []\uff09 |\u6539\u53d8\u6307\u5b9a\u4e0a\u4e0b\u6587\u503c\u7684\u7f13\u5b58\u5185\u5bb9\u3002 | | RemoveContext(string) | Removes the specified context. | | RemoveContext\uff08string\uff09 |\u5220\u9664\u6307\u5b9a\u7684\u4e0a\u4e0b\u6587\u3002 | | AddDependency(params string[]) | Defines the context values that will invalidate the cache entry. | | AddDependency\uff08params string []\uff09 |\u5b9a\u4e49\u5c06\u4f7f\u9ad8\u901f\u7f13\u5b58\u6761\u76ee\u65e0\u6548\u7684\u4e0a\u4e0b\u6587\u503c\u3002 | | RemoveDependency(string) | Removes the specified dependency. | | RemoveDependency\uff08string\uff09 |\u5220\u9664\u6307\u5b9a\u7684\u4f9d\u8d56\u9879\u3002 | | AddTag(string) | Adds a tag to the cache entry to that it can be invalidated by this tag value. | | AddTag\uff08string\uff09 |\u5c06\u6807\u8bb0\u6dfb\u52a0\u5230\u7f13\u5b58\u6761\u76ee\uff0c\u4f7f\u5176\u53ef\u4ee5\u901a\u8fc7\u6b64\u6807\u8bb0\u503c\u65e0\u6548\u3002 | | RemoveTag(string) | Removes the specified tag. | | RemoveTag\uff08string\uff09 |\u5220\u9664\u6307\u5b9a\u7684\u6807\u8bb0\u3002 | Note \uff01\u6ce8\u610f `AddDependency` differs from `AddContext` in that it doesn't store multiple values for each context, but invalidates the cached shape content when the value of the context varies. Internally they share the same implementation, as the physical cache key will contain the dependency context value.","title":"CacheContext\u6210\u5458"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#shape-tag-helper-attributes","text":"","title":"Shape Tag Helper Attributes"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_10","text":"When using shape tag helpers, the following attributes can be used: \u4f7f\u7528\u5f62\u72b6\u6807\u8bb0\u5e2e\u52a9\u7a0b\u5e8f\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5c5e\u6027\uff1a | Razor Attribute | Liquid Attribute | Description | Required | |\u5243\u5200\u5c5e\u6027|\u6db2\u4f53\u5c5e\u6027|\u8bf4\u660e|\u5fc5\u9700| | --------- | ----------- | ----------- | ----------- | | --------- | ----------- ----------- ----------- | cache-id | cache_id | The identifier of the cached shape. | Yes | | cache-id | cache_id |\u7f13\u5b58\u5f62\u72b6\u7684\u6807\u8bc6\u7b26\u3002 |\u662f\u7684| | cache-context | cache_context | A set of space/comma-separated context values. | No | | cache-context | cache_context |\u4e00\u7ec4\u7a7a\u683c/\u9017\u53f7\u5206\u9694\u7684\u4e0a\u4e0b\u6587\u503c\u3002 |\u6ca1\u6709| | cache-dependency | cache_dependency | A set of space/comma-separated dependency values. | No | | cache-dependency | cache_dependency |\u4e00\u7ec4\u7a7a\u683c/\u9017\u53f7\u5206\u9694\u7684\u4f9d\u8d56\u9879\u503c\u3002 |\u6ca1\u6709| | cache-tag | cache_tag | A set of space/comma-separated tag values. | No | | cache-tag | cache_tag |\u4e00\u7ec4\u7a7a\u683c/\u9017\u53f7\u5206\u9694\u7684\u6807\u8bb0\u503c\u3002 |\u6ca1\u6709| | cache-fixed-duration | cache_expires_after | The cache duration of the entry, e.g. \"00:05:00\" for 5 minutes. | No | | cache-fixed-duration | cache_expires_after |\u6761\u76ee\u7684\u7f13\u5b58\u6301\u7eed\u65f6\u95f4\uff0c\u4f8b\u5982\u201c00:05:00\u201d\u6301\u7eed5\u5206\u949f\u3002 |\u6ca1\u6709| | cache-sliding-duration | cache_expires_sliding | The sliding cache duration of the entry, e.g. \"00:05:00\" for 5 minutes. | No | | cache-sliding-duration | cache_expires_sliding |\u8be5\u6761\u76ee\u7684\u6ed1\u52a8\u7f13\u5b58\u6301\u7eed\u65f6\u95f4\uff0c\u4f8b\u5982\uff0c \u201c00:05:00\u201d\u6301\u7eed5\u5206\u949f\u3002 |\u6ca1\u6709| e.g.: to cache the menu shape in a liquid template, you would use this markup: \u4f8b\u5982\uff1a\u8981\u5c06\u83dc\u5355\u5f62\u72b6\u7f13\u5b58\u5728\u6db2\u4f53\u6a21\u677f\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u6807\u8bb0\uff1a {% shape \"menu\", alias: \"alias:main-menu\", cache_id: \"main-menu\", cache_expires_after: \"00:05:00\", cache_tag: \"alias:main-menu\" %}","title":"\u5f62\u72b6\u6807\u8bb0\u52a9\u624b\u5c5e\u6027"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#liquid-cache-block","text":"","title":"Liquid cache block"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_11","text":"The liquid cache block can be used to cache sections of markup. cache blocks can be nested. \u6db2\u4f53\u201c\u7f13\u5b58\u201d\u5757\u53ef\u7528\u4e8e\u7f13\u5b58\u6807\u8bb0\u90e8\u5206\u3002 cache \u5757\u53ef\u4ee5\u5d4c\u5957\u3002","title":"\u6db2\u4f53\u7f13\u5b58\u5757"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#arguments","text":"","title":"Arguments"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_12","text":"| Liquid Attribute | Description | Required | |\u6db2\u4f53\u5c5e\u6027|\u8bf4\u660e|\u5fc5\u9700| | --------- | ----------- | ----------- | | --------- | ----------- ----------- | id | The identifier of the cached shape. | Yes (this is the default first argument- no need to explicitly specify the name of this argument) | | id |\u7f13\u5b58\u5f62\u72b6\u7684\u6807\u8bc6\u7b26\u3002 |\u662f\uff08\u8fd9\u662f\u9ed8\u8ba4\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570 - \u65e0\u9700\u663e\u5f0f\u6307\u5b9a\u6b64\u53c2\u6570\u7684\u540d\u79f0\uff09| | contexts | A set of space/comma-separated context values. | No | | contexts |\u4e00\u7ec4\u7a7a\u683c/\u9017\u53f7\u5206\u9694\u7684\u4e0a\u4e0b\u6587\u503c\u3002 |\u6ca1\u6709| | dependencies | A set of space/comma-separated dependency values. | No | | dependencies |\u4e00\u7ec4\u7a7a\u683c/\u9017\u53f7\u5206\u9694\u7684\u4f9d\u8d56\u9879\u503c\u3002 |\u6ca1\u6709| | expires_after | The cache duration of the entry, e.g. \"00:05:00\" for 5 minutes. | No | | expires_after |\u6761\u76ee\u7684\u7f13\u5b58\u6301\u7eed\u65f6\u95f4\uff0c\u4f8b\u5982\u201c00:05:00\u201d\u6301\u7eed5\u5206\u949f\u3002 |\u6ca1\u6709| | expires_sliding | The sliding cache duration of the entry, e.g. \"00:05:00\" for 5 minutes. | No | | expires_sliding |\u8be5\u6761\u76ee\u7684\u6ed1\u52a8\u7f13\u5b58\u6301\u7eed\u65f6\u95f4\uff0c\u4f8b\u5982\uff0c \u201c00:05:00\u201d\u6301\u7eed5\u5206\u949f\u3002 |\u6ca1\u6709|","title":"\u53c2\u6570"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#examples","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_13","text":"Simple block: \u7b80\u5355\u5757\uff1a {% cache \"my-cache-block\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05cache\u201cmy-cache-block\u201d\uff05}</font> ... {% endcache %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endcache\uff05}</font> Nested blocks: \u5d4c\u5957\u5757\uff1a {% cache \"a\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05cache\u201ca\u201d\uff05}</font> A {{ \"now\" | date: \"%T\" }} (No Duration) <br /> {% cache \"a1\", dependencies: \"a1\", vary_by: \"user\", expires_after: \"0:5:0\" %} A1 {{ \"now\" | date: \"%T\" }} (5 Minutes) <br /> {% endcache %} {% cache \"a2\", dependencies: \"a2\", expires_after: \"0:0:1\" %} A2 {{ \"now\" | date: \"%T\" }} (1 Second) <br /> {% cache \"a2a\", dependencies: \"a2a\", contexts: \"route\", expires_sliding: \"0:0:5\" %} A2A {{ \"now\" | date: \"%T\" }} (5 Seconds) <br /> {% endcache %} {% endcache %} {% endcache %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endcache\uff05}</font>","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#altering-a-cache-scope","text":"","title":"Altering a cache scope"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_14","text":"You may not yet know all the child dependencies, or even how long the cache block should be cached for when you enter a cache block. \u60a8\u53ef\u80fd\u8fd8\u4e0d\u77e5\u9053\u6240\u6709\u5b50\u4f9d\u8d56\u9879\uff0c\u751a\u81f3\u8fd8\u4e0d\u77e5\u9053\u5728\u60a8\u8f93\u5165\u7f13\u5b58\u5757\u65f6\u7f13\u5b58\u5757\u5e94\u8be5\u7f13\u5b58\u591a\u957f\u65f6\u95f4\u3002 An example might be a cache block around a list of content items from a query- because you do not know which content items will be displayed by the query, you cannot define the correct dependencies when you enter the cache block. \u4e00\u4e2a\u793a\u4f8b\u53ef\u80fd\u662f\u6765\u81ea\u67e5\u8be2\u7684\u5185\u5bb9\u9879\u5217\u8868\u5468\u56f4\u7684\u7f13\u5b58\u5757 - \u56e0\u4e3a\u60a8\u4e0d\u77e5\u9053\u67e5\u8be2\u5c06\u663e\u793a\u54ea\u4e9b\u5185\u5bb9\u9879\uff0c\u6240\u4ee5\u5728\u8f93\u5165\u7f13\u5b58\u5757\u65f6\u65e0\u6cd5\u5b9a\u4e49\u6b63\u786e\u7684\u4f9d\u8d56\u9879\u3002 There are four tags that allow you to alter the current cache scope. It's safe to use these tags even if you don't necessarily know if you're inside a cache block: \u6709\u56db\u4e2a\u6807\u8bb0\u5141\u8bb8\u60a8\u66f4\u6539\u5f53\u524d\u7f13\u5b58\u8303\u56f4\u3002\u5373\u4f7f\u60a8\u4e0d\u4e00\u5b9a\u77e5\u9053\u81ea\u5df1\u662f\u5426\u5728\u7f13\u5b58\u5757\u4e2d\uff0c\u4f7f\u7528\u8fd9\u4e9b\u6807\u8bb0\u4e5f\u662f\u5b89\u5168\u7684\uff1a | Liquid Tag | Description | Example | |\u6db2\u4f53\u6807\u7b7e|\u8bf4\u660e|\u793a\u4f8b| | --------- | ----------- | ----------- | | --------- | ----------- ----------- | cache_dependency | Adds a dependency to the current cache scope | {% cache_dependency \"alias:{Alias}\" %} | | cache_dependency |\u5411\u5f53\u524d\u7f13\u5b58\u8303\u56f4\u6dfb\u52a0\u4f9d\u8d56\u9879| {\uff05cache_dependency'\u522b\u540d\uff1a{Alias}\u201c\uff05} | | cache_expires_on | Sets a fixed date and time that the cache item will expire. The most restrictive cache policy (i.e. the one with the shortest life) will win in the event of multiple expiry policies being defined for a single block. | {% cache_expires_on {A DateTime or DateTimeOffset instance %} (e.g. from a date/time field on a content item) | | cache_expires_on |\u8bbe\u7f6e\u7f13\u5b58\u9879\u76ee\u5c06\u8fc7\u671f\u7684\u56fa\u5b9a\u65e5\u671f\u548c\u65f6\u95f4\u3002\u5982\u679c\u4e3a\u5355\u4e2a\u5757\u5b9a\u4e49\u4e86\u591a\u4e2a\u5230\u671f\u7b56\u7565\uff0c\u5219\u9650\u5236\u6027\u6700\u5f3a\u7684\u7f13\u5b58\u7b56\u7565\uff08\u5373\u5177\u6709\u6700\u77ed\u5bff\u547d\u7684\u7f13\u5b58\u7b56\u7565\uff09\u5c06\u83b7\u80dc\u3002 | {\uff05cache_expires_on {DateTime\u6216DateTimeOffset instance\uff05} \uff08\u4f8b\u5982\u6765\u81ea\u5185\u5bb9\u9879\u7684\u65e5\u671f/\u65f6\u95f4\u5b57\u6bb5\uff09| | cache_expires_after | Sets a timespan relative to when the item was cached that the cache item will expire. The most restrictive cache policy (i.e. the one with the shortest life) will win in the event of multiple expiry policies being defined for a single block. | {% cache_expires_after \"01:00:00\" %} (One hour) | | cache_expires_after |\u8bbe\u7f6e\u76f8\u5bf9\u4e8e\u7f13\u5b58\u9879\u76ee\u7f13\u5b58\u9879\u76ee\u5230\u671f\u65f6\u7684\u65f6\u95f4\u8de8\u5ea6\u3002\u5982\u679c\u4e3a\u5355\u4e2a\u5757\u5b9a\u4e49\u4e86\u591a\u4e2a\u5230\u671f\u7b56\u7565\uff0c\u5219\u9650\u5236\u6027\u6700\u5f3a\u7684\u7f13\u5b58\u7b56\u7565\uff08\u5373\u5177\u6709\u6700\u77ed\u5bff\u547d\u7684\u7f13\u5b58\u7b56\u7565\uff09\u5c06\u83b7\u80dc\u3002 | {\uff05cache_expires_after\u201c01:00:00\u201d\uff05} \uff08\u4e00\u5c0f\u65f6\uff09| | cache_expires_sliding | Sets a sliding window for the expiry of the cache item. The most restrictive cache policy (i.e. the one with the shortest life) will win in the event of multiple expiry policies being defined for a single block. | {% cache_expires_sliding \"00:01:00\" %} (One minute) | | cache_expires_sliding |\u4e3a\u7f13\u5b58\u9879\u7684\u5230\u671f\u8bbe\u7f6e\u6ed1\u52a8\u7a97\u53e3\u3002\u5982\u679c\u4e3a\u5355\u4e2a\u5757\u5b9a\u4e49\u4e86\u591a\u4e2a\u5230\u671f\u7b56\u7565\uff0c\u5219\u9650\u5236\u6027\u6700\u5f3a\u7684\u7f13\u5b58\u7b56\u7565\uff08\u5373\u5177\u6709\u6700\u77ed\u5bff\u547d\u7684\u7f13\u5b58\u7b56\u7565\uff09\u5c06\u83b7\u80dc\u3002 | {\uff05cache_expires_sliding\u201c00:01:00\u201d\uff05} \uff08\u4e00\u5206\u949f\uff09|","title":"\u66f4\u6539\u7f13\u5b58\u8303\u56f4"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#example_1","text":"","title":"Example:"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_15","text":"Displaying content items from a query: \u663e\u793a\u67e5\u8be2\u4e2d\u7684\u5185\u5bb9\u9879\uff1a {% cache \"recent-blog-posts\"} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05cache\u201crecent-blog-posts\u201d}</font> {% assign recentBlogPosts = Queries.RecentBlogPosts | query %} {% for item in recentBlogPosts %} {{ item | display_text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {% assign cacheDependency = \"contentitemid:\" | append: Model.ContentItem.ContentItemId %} {% cache_dependency cacheDependency %} {% endfor %} {% endcache %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endcache\uff05}</font> Each item that is displayed by the query will now add its own cache dependency to the recent-blog-posts cache block. \u67e5\u8be2\u663e\u793a\u7684\u6bcf\u4e2a\u9879\u76ee\u73b0\u5728\u90fd\u4f1a\u5c06\u81ea\u5df1\u7684\u7f13\u5b58\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230 recent-blog-posts \u7f13\u5b58\u5757\u4e2d\u3002","title":"\u4f8b\uff1a"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#razor-cache-tag","text":"","title":"Razor cache tag"},{"location":"OrchardCore.Modules/OrchardCore.DynamicCache/#_16","text":"This has not yet been implemented. If you feel up to it, and you'd like to help out, then please raise a pull request. \u8fd9\u5c1a\u672a\u5b9e\u65bd\u3002\u5982\u679c\u60a8\u5bf9\u6b64\u611f\u5230\u6ee1\u610f\uff0c\u5e76\u5e0c\u671b\u63d0\u4f9b\u5e2e\u52a9\uff0c\u8bf7\u63d0\u51fa\u62c9\u53d6\u8bf7\u6c42\u3002","title":"\u5243\u5200\u7f13\u5b58\u6807\u7b7e"},{"location":"OrchardCore.Modules/OrchardCore.Flows/","text":"Flows (OrchardCore.Flows) \u6d41\u91cf\uff08OrchardCore.Flows\uff09 The Flows module provides methods to display content items directly within another content item. This is achieved with the Flow Part and the Bag Part. Flows\u6a21\u5757\u63d0\u4f9b\u4e86\u76f4\u63a5\u5728\u53e6\u4e00\u4e2a\u5185\u5bb9\u9879\u4e2d\u663e\u793a\u5185\u5bb9\u9879\u7684\u65b9\u6cd5\u3002\u8fd9\u662f\u901a\u8fc7\u6d41\u52a8\u90e8\u4ef6\u548c\u888b\u90e8\u4ef6\u5b9e\u73b0\u7684\u3002 A good example of this would be a page with an FAQ section in it. A FAQ content type might have a question and an answer field, and the content editor can add new FAQs directly when editing the page. \u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u5c31\u662f\u4e00\u4e2a\u5e26\u6709FAQ\u90e8\u5206\u7684\u9875\u9762\u3002 FAQ\u5185\u5bb9\u7c7b\u578b\u53ef\u80fd\u6709\u95ee\u9898\u548c\u7b54\u6848\u5b57\u6bb5\uff0c\u5185\u5bb9\u7f16\u8f91\u5668\u53ef\u4ee5\u5728\u7f16\u8f91\u9875\u9762\u65f6\u76f4\u63a5\u6dfb\u52a0\u65b0\u7684\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\u3002 Empty Flows and Bags \u7a7a\u6d41\u548c\u888b Flows and Bags that do not contain any content items will be displayed with a different shape name. For empty Flows, the shape name is FlowPart_Empty ; for empty Bags, it's BagPart_Empty . \u4e0d\u5305\u542b\u4efb\u4f55\u5185\u5bb9\u9879\u7684\u6d41\u548c\u5305\u5c06\u4ee5\u4e0d\u540c\u7684\u5f62\u72b6\u540d\u79f0\u663e\u793a\u3002\u5bf9\u4e8e\u7a7a\u7684Flow\uff0c\u5f62\u72b6\u540d\u79f0\u662f FlowPart_Empty ;\u5bf9\u4e8e\u7a7a\u5305\uff0c\u5b83\u662f'BagPart_Empty`\u3002 This allows you to conditionally show or hide empty Flows or Bags. For example, to hide a Flow part that has no items, you can add this to your placement file: \u8fd9\u5141\u8bb8\u60a8\u6709\u6761\u4ef6\u5730\u663e\u793a\u6216\u9690\u85cf\u7a7a\u7684\u6d41\u91cf\u6216\u5305\u3002\u4f8b\u5982\uff0c\u8981\u9690\u85cf\u6ca1\u6709\u9879\u76ee\u7684Flow\u90e8\u5206\uff0c\u53ef\u4ee5\u5c06\u5176\u6dfb\u52a0\u5230\u5c55\u793a\u4f4d\u7f6e\u6587\u4ef6\u4e2d\uff1a \"FlowPart_Empty\": [ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cFlowPart_Empty\u201d\uff1a[</font> { \"place\": \"-\" } ] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">]</font> And if you'd like to use the same template for Flow parts that have items and Flow parts that have no items, you could add this: \u5982\u679c\u60a8\u60f3\u4e3a\u5305\u542b\u7269\u54c1\u7684Flow\u96f6\u4ef6\u548c\u6ca1\u6709\u7269\u54c1\u7684Flow\u96f6\u4ef6\u4f7f\u7528\u76f8\u540c\u7684\u6a21\u677f\uff0c\u60a8\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a \"FlowPart_Empty\": [ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cFlowPart_Empty\u201d\uff1a[</font> { \"shape\": \"FlowPart\" } ] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">]</font>","title":"Flows"},{"location":"OrchardCore.Modules/OrchardCore.Flows/#flows-orchardcoreflows","text":"","title":"Flows (OrchardCore.Flows)"},{"location":"OrchardCore.Modules/OrchardCore.Flows/#orchardcoreflows","text":"The Flows module provides methods to display content items directly within another content item. This is achieved with the Flow Part and the Bag Part. Flows\u6a21\u5757\u63d0\u4f9b\u4e86\u76f4\u63a5\u5728\u53e6\u4e00\u4e2a\u5185\u5bb9\u9879\u4e2d\u663e\u793a\u5185\u5bb9\u9879\u7684\u65b9\u6cd5\u3002\u8fd9\u662f\u901a\u8fc7\u6d41\u52a8\u90e8\u4ef6\u548c\u888b\u90e8\u4ef6\u5b9e\u73b0\u7684\u3002 A good example of this would be a page with an FAQ section in it. A FAQ content type might have a question and an answer field, and the content editor can add new FAQs directly when editing the page. \u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u5c31\u662f\u4e00\u4e2a\u5e26\u6709FAQ\u90e8\u5206\u7684\u9875\u9762\u3002 FAQ\u5185\u5bb9\u7c7b\u578b\u53ef\u80fd\u6709\u95ee\u9898\u548c\u7b54\u6848\u5b57\u6bb5\uff0c\u5185\u5bb9\u7f16\u8f91\u5668\u53ef\u4ee5\u5728\u7f16\u8f91\u9875\u9762\u65f6\u76f4\u63a5\u6dfb\u52a0\u65b0\u7684\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\u3002","title":"\u6d41\u91cf\uff08OrchardCore.Flows\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Flows/#empty-flows-and-bags","text":"","title":"Empty Flows and Bags"},{"location":"OrchardCore.Modules/OrchardCore.Flows/#_1","text":"Flows and Bags that do not contain any content items will be displayed with a different shape name. For empty Flows, the shape name is FlowPart_Empty ; for empty Bags, it's BagPart_Empty . \u4e0d\u5305\u542b\u4efb\u4f55\u5185\u5bb9\u9879\u7684\u6d41\u548c\u5305\u5c06\u4ee5\u4e0d\u540c\u7684\u5f62\u72b6\u540d\u79f0\u663e\u793a\u3002\u5bf9\u4e8e\u7a7a\u7684Flow\uff0c\u5f62\u72b6\u540d\u79f0\u662f FlowPart_Empty ;\u5bf9\u4e8e\u7a7a\u5305\uff0c\u5b83\u662f'BagPart_Empty`\u3002 This allows you to conditionally show or hide empty Flows or Bags. For example, to hide a Flow part that has no items, you can add this to your placement file: \u8fd9\u5141\u8bb8\u60a8\u6709\u6761\u4ef6\u5730\u663e\u793a\u6216\u9690\u85cf\u7a7a\u7684\u6d41\u91cf\u6216\u5305\u3002\u4f8b\u5982\uff0c\u8981\u9690\u85cf\u6ca1\u6709\u9879\u76ee\u7684Flow\u90e8\u5206\uff0c\u53ef\u4ee5\u5c06\u5176\u6dfb\u52a0\u5230\u5c55\u793a\u4f4d\u7f6e\u6587\u4ef6\u4e2d\uff1a \"FlowPart_Empty\": [ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cFlowPart_Empty\u201d\uff1a[</font> { \"place\": \"-\" } ] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">]</font> And if you'd like to use the same template for Flow parts that have items and Flow parts that have no items, you could add this: \u5982\u679c\u60a8\u60f3\u4e3a\u5305\u542b\u7269\u54c1\u7684Flow\u96f6\u4ef6\u548c\u6ca1\u6709\u7269\u54c1\u7684Flow\u96f6\u4ef6\u4f7f\u7528\u76f8\u540c\u7684\u6a21\u677f\uff0c\u60a8\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a \"FlowPart_Empty\": [ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cFlowPart_Empty\u201d\uff1a[</font> { \"shape\": \"FlowPart\" } ] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">]</font>","title":"\u7a7a\u6d41\u548c\u888b"},{"location":"OrchardCore.Modules/OrchardCore.Forms/","text":"Forms (OrchardCore.Forms) \u8868\u683c\uff08OrchardCore.Forms\uff09 The Forms module provides components in the form of widgets and workflow activities to create, validate and process forms. Forms\u6a21\u5757\u4ee5\u7a97\u53e3\u5c0f\u90e8\u4ef6\u548c\u5de5\u4f5c\u6d41\u6d3b\u52a8\u7684\u5f62\u5f0f\u63d0\u4f9b\u7ec4\u4ef6\uff0c\u4ee5\u521b\u5efa\uff0c\u9a8c\u8bc1\u548c\u5904\u7406\u8868\u5355\u3002 General Concepts \u4e00\u822c\u6982\u5ff5 When building a form, there are primarily two aspects involved: \u6784\u5efa\u8868\u5355\u65f6\uff0c\u4e3b\u8981\u6d89\u53ca\u4e24\u4e2a\u65b9\u9762\uff1a Building the form. 1.\u6784\u5efa\u8868\u5355\u3002 Processing the form when submitted. 2.\u63d0\u4ea4\u8868\u683c\u65f6\u5904\u7406\u3002 Both parts are independent from one another, so that you can just use the form builder and handle its submissions yourself, or provide the form HTML markup yourself but rely on workflows to handle form submission. \u8fd9\u4e24\u4e2a\u90e8\u5206\u5f7c\u6b64\u72ec\u7acb\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u81ea\u5df1\u4f7f\u7528\u8868\u5355\u6784\u5efa\u5668\u5e76\u5904\u7406\u5176\u63d0\u4ea4\uff0c\u6216\u8005\u81ea\u5df1\u63d0\u4f9b\u8868\u5355HTML\u6807\u8bb0\uff0c\u4f46\u4f9d\u9760\u5de5\u4f5c\u6d41\u6765\u5904\u7406\u8868\u5355\u63d0\u4ea4\u3002 The form-building part relies on the Form widget. To create a form, add a Form widget to a zone or to a content item that has the FlowPart attached. \u8868\u5355\u6784\u5efa\u90e8\u5206\u4f9d\u8d56\u4e8eForm\u5c0f\u90e8\u4ef6\u3002\u8981\u521b\u5efa\u8868\u5355\uff0c\u8bf7\u5c06\u8868\u5355\u7a97\u53e3\u5c0f\u90e8\u4ef6\u6dfb\u52a0\u5230\u533a\u57df\u6216\u9644\u52a0\u4e86FlowPart\u7684\u5185\u5bb9\u9879\u3002 Creating a Form \u521b\u5efa\u8868\u5355 Creating a form typically involves the following steps: \u521b\u5efa\u8868\u5355\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u6b65\u9aa4\uff1a Make sure the Forms feature is enabled. 1.\u786e\u4fdd\u5df2\u542f\u7528\u201c\u8868\u5355\u201d\u529f\u80fd\u3002 Create a new content item that has the FlowPart attached. If you used the Blog recipe, there will be a Page content type that you can use. 2.\u521b\u5efa\u9644\u52a0\u4e86FlowPart\u7684\u65b0\u5185\u5bb9\u9879\u3002\u5982\u679c\u60a8\u4f7f\u7528\u4e86Blog\u914d\u65b9\uff0c\u5219\u4f1a\u6709\u4e00\u4e2a\u53ef\u4ee5\u4f7f\u7528\u7684\u9875\u9762\u5185\u5bb9\u7c7b\u578b\u3002 Add the Form widget. 3.\u6dfb\u52a0\u8868\u5355\u5c0f\u90e8\u4ef6\u3002 Because the Form widget has the FlowPart attached, you can add other widgets to the Form widget. Add widgets such as Input, Textarea and Button to build up your form. 4.\u7531\u4e8eForm\u7a97\u53e3\u5c0f\u90e8\u4ef6\u9644\u52a0\u4e86FlowPart\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5c06\u5176\u4ed6\u7a97\u53e3\u5c0f\u90e8\u4ef6\u6dfb\u52a0\u5230\u7a97\u4f53\u5c0f\u90e8\u4ef6\u3002\u6dfb\u52a0\u8bf8\u5982Input\uff0cTextarea\u548cButton\u4e4b\u7c7b\u7684\u5c0f\u90e8\u4ef6\u6765\u6784\u5efa\u8868\u5355\u3002 Processing Form submissions \u5904\u7406\u8868\u683c\u63d0\u4ea4 Once you have a form in place, you need to handle its submission. The Form widget has a field called Action , into which you can enter a URL to where the form should submit to. This could be the path to your own controller, but it can also be the URL pointing to a workflow type. \u4e00\u65e6\u6709\u8868\u683c\uff0c\u60a8\u9700\u8981\u5904\u7406\u5176\u63d0\u4ea4\u3002\u8868\u5355\u7a97\u53e3\u5c0f\u90e8\u4ef6\u6709\u4e00\u4e2a\u540d\u4e3a Action \u7684\u5b57\u6bb5\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u8f93\u5165\u8868\u5355\u5e94\u63d0\u4ea4\u5230\u7684URL\u3002\u8fd9\u53ef\u80fd\u662f\u60a8\u81ea\u5df1\u7684\u63a7\u5236\u5668\u7684\u8def\u5f84\uff0c\u4f46\u5b83\u4e5f\u53ef\u4ee5\u662f\u6307\u5411\u5de5\u4f5c\u6d41\u7c7b\u578b\u7684URL\u3002 Using a workflow is convenient because it doesn't require you to create a custom module. \u4f7f\u7528\u5de5\u4f5c\u6d41\u5f88\u65b9\u4fbf\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u60a8\u521b\u5efa\u81ea\u5b9a\u4e49\u6a21\u5757\u3002 Creating a workflow and associating it with a form typically involves the following steps: \u521b\u5efa\u5de5\u4f5c\u6d41\u5e76\u5c06\u5176\u4e0e\u8868\u5355\u76f8\u5173\u8054\u901a\u5e38\u6d89\u53ca\u4ee5\u4e0b\u6b65\u9aa4\uff1a Make sure the HTTP Workflows Activities feature is enabled. 1.\u786e\u4fdd\u5df2\u542f\u7528 HTTP\u5de5\u4f5c\u6d41\u6d3b\u52a8 \u529f\u80fd\u3002 Click on the Workflows menu item and create a new Workflow Type. 2.\u5355\u51fb\u201c\u5de5\u4f5c\u6d41\u7a0b\u201d\u83dc\u5355\u9879\u5e76\u521b\u5efa\u65b0\u7684\u201c\u5de5\u4f5c\u6d41\u7a0b\u7c7b\u578b\u201d\u3002 Add the Http Request Event event to the workflow. Make sure the HTTP Method field is set to POST . 3.\u5c06 Http Request Event \u4e8b\u4ef6\u6dfb\u52a0\u5230\u5de5\u4f5c\u6d41\u7a0b\u4e2d\u3002\u786e\u4fdd HTTP Method \u5b57\u6bb5\u8bbe\u7f6e\u4e3a POST \u3002 Copy the generated workflow URL to your clipboard. 4.\u5c06\u751f\u6210\u7684\u5de5\u4f5c\u6d41URL\u590d\u5236\u5230\u526a\u8d34\u677f\u3002 Click Save to save the changes and return to the workflow editor. 5.\u5355\u51fb\u201c\u4fdd\u5b58\u201d\u4ee5\u4fdd\u5b58\u66f4\u6539\u5e76\u8fd4\u56de\u5230\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u3002 Make sure the Http Request Event activity is configured as the start activity (on the workflow editor, single-click the activity and click on the on/off icon). The activity will have a green color if it's the starting activity. 5.\u786e\u4fdd\u5c06Http Request Event\u6d3b\u52a8\u914d\u7f6e\u4e3a\u542f\u52a8\u6d3b\u52a8\uff08\u5728\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u4e0a\uff0c\u5355\u51fb\u6d3b\u52a8\u5e76\u5355\u51fb\u5f00/\u5173\u56fe\u6807\uff09\u3002\u5982\u679c\u6d3b\u52a8\u662f\u8d77\u59cb\u6d3b\u52a8\uff0c\u5219\u6d3b\u52a8\u5c06\u4e3a\u7eff\u8272\u3002 Add any other activities to validate and process the form submission. We will see a real-world example later on. 5.\u6dfb\u52a0\u4efb\u4f55\u5176\u4ed6\u6d3b\u52a8\u4ee5\u9a8c\u8bc1\u548c\u5904\u7406\u8868\u5355\u63d0\u4ea4\u3002\u6211\u4eec\u7a0d\u540e\u4f1a\u770b\u5230\u4e00\u4e2a\u771f\u5b9e\u7684\u4f8b\u5b50\u3002 Click Save to save the workflow. 6.\u5355\u51fb\u201c\u4fdd\u5b58\u201d\u4ee5\u4fdd\u5b58\u5de5\u4f5c\u6d41\u7a0b\u3002 Go to the content item where you added a Form widget. 7.\u8f6c\u5230\u6dfb\u52a0\u201c\u8868\u5355\u201d\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u5185\u5bb9\u9879\u3002 Paste the workflow URL into the Action field. 8.\u5c06\u5de5\u4f5c\u6d41URL\u7c98\u8d34\u5230\u201c\u64cd\u4f5c\u201d\u5b57\u6bb5\u4e2d\u3002 Save your content item. 9.\u4fdd\u5b58\u60a8\u7684\u5185\u5bb9\u9879\u3002 At this point, you should be able to test out your form and its submission. \u6b64\u65f6\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u6d4b\u8bd5\u60a8\u7684\u8868\u5355\u53ca\u5176\u63d0\u4ea4\u3002 Implementing a Contact Form \u5b9e\u65bd\u8054\u7cfb\u8868\u683c In the following walkthrough, we'll build an actual contact form and implement a form handler using a workflow. \u5728\u4e0b\u9762\u7684\u6f14\u7ec3\u4e2d\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u5b9e\u9645\u7684\u8054\u7cfb\u8868\u5355\uff0c\u5e76\u4f7f\u7528\u5de5\u4f5c\u6d41\u5b9e\u73b0\u8868\u5355\u5904\u7406\u7a0b\u5e8f\u3002 The contact form will include the following fields: \u8054\u7cfb\u8868\u683c\u5c06\u5305\u62ec\u4ee5\u4e0b\u5b57\u6bb5\uff1a A Validation Summary widget. \u9a8c\u8bc1\u6458\u8981\u5c0f\u90e8\u4ef6\u3002 * A Name input widget. \u540d\u79f0\u8f93\u5165\u5c0f\u90e8\u4ef6\u3002 * An Email input widget. \u7535\u5b50\u90ae\u4ef6\u8f93\u5165\u5c0f\u90e8\u4ef6\u3002 * A Message text area widget. \u6d88\u606f\u6587\u672c\u533a\u57df\u5c0f\u90e8\u4ef6\u3002 * A Google NoCaptcha widget to protect against automated form submissions. Google NoCaptcha\u5c0f\u90e8\u4ef6\uff0c\u53ef\u9632\u6b62\u81ea\u52a8\u63d0\u4ea4\u8868\u5355\u3002 * A Submit button widget. \u63d0\u4ea4\u6309\u94ae\u5c0f\u90e8\u4ef6\u3002 * The workflow will perform the following actions: \u5de5\u4f5c\u6d41\u7a0b\u5c06\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a Validate that the Name, Email and Message fields are not empty. If they are empty, we'll add Model State Validation errors. \u9a8c\u8bc1\u540d\u79f0\uff0c\u7535\u5b50\u90ae\u4ef6\u548c\u6d88\u606f\u5b57\u6bb5\u4e0d\u4e3a\u7a7a\u3002\u5982\u679c\u5b83\u4eec\u4e3a\u7a7a\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u6a21\u578b\u72b6\u6001\u9a8c\u8bc1\u9519\u8bef\u3002 * Validate the NoCaptcha. \u9a8c\u8bc1NoCaptcha\u3002 * Send an email to the site owner that the contact form was submitted. The email will contain the submitted form fields. \u5411\u63d0\u4ea4\u8054\u7cfb\u8868\u5355\u7684\u7f51\u7ad9\u6240\u6709\u8005\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u7535\u5b50\u90ae\u4ef6\u5c06\u5305\u542b\u63d0\u4ea4\u7684\u8868\u5355\u5b57\u6bb5\u3002 * Creating the Contact Form \u521b\u5efa\u8054\u7cfb\u8868\u5355 For this walkthrough, I am assuming you executed the Blog recipe when setting up the site, which will automatically create a Page content type with the FlowPart attached. \u5728\u672c\u6f14\u7ec3\u4e2d\uff0c\u6211\u5047\u8bbe\u60a8\u5728\u8bbe\u7f6e\u7ad9\u70b9\u65f6\u6267\u884c\u4e86\u535a\u5ba2\u914d\u65b9\uff0c\u8fd9\u5c06\u81ea\u52a8\u521b\u5efa\u9644\u52a0\u4e86FlowPart\u7684\u9875\u9762\u5185\u5bb9\u7c7b\u578b\u3002 when you have a fresh new installation, the first thing we need to do is enable the following features: \u5f53\u4f60\u6709\u4e00\u4e2a\u5168\u65b0\u7684\u5b89\u88c5\u65f6\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u505a\u7684\u662f\u542f\u7528\u4ee5\u4e0b\u529f\u80fd\uff1a Forms \u5f62\u5f0f * HTTP Workflow Activities HTTP\u5de5\u4f5c\u6d41\u6d3b\u52a8 * Email \u7535\u5b50\u90ae\u4ef6 * Next, create a new Page content item and give it a title of Contact Form . Click the Add Widget button to add the Form widget. \u63a5\u4e0b\u6765\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9875\u9762\u5185\u5bb9\u9879\uff0c\u5e76\u4e3a\u5176\u6807\u9898\u4e3a Contact Form \u3002\u5355\u51fb \u6dfb\u52a0\u7a97\u53e3\u5c0f\u90e8\u4ef6 \u6309\u94ae\u4ee5\u6dfb\u52a0 \u7a97\u4f53 \u7a97\u53e3\u5c0f\u90e8\u4ef6\u3002 give the Form a title of Contact and leave the Action field empty for now. \u7ed9\u8868\u5355\u4e00\u4e2a Contact \u6807\u9898\uff0c\u6682\u65f6\u5c06Action\u5b57\u6bb5\u7559\u7a7a\u3002 Add the following widgets to the Form widget: \u5c06\u4ee5\u4e0b\u5c0f\u90e8\u4ef6\u6dfb\u52a0\u5230\u7a97\u4f53\u5c0f\u90e8\u4ef6\uff1a Validation Summary widget \u9a8c\u8bc1\u6458\u8981\u5c0f\u90e8\u4ef6 * Input widget, Name = \"Name\", Type = \"Text\", Placeholder Text = \"Enter your name\" \u8f93\u5165\u5c0f\u90e8\u4ef6\uff0c\u540d\u79f0=\u201c\u540d\u79f0\u201d\uff0c\u7c7b\u578b=\u201c\u6587\u672c\u201d\uff0c\u5360\u4f4d\u7b26\u6587\u672c=\u201c\u8f93\u5165\u60a8\u7684\u59d3\u540d\u201d * Input widget, Name = \"Email\", Type = \"Email\", Placeholder Text = \"Enter your email address\" \u8f93\u5165\u5c0f\u90e8\u4ef6\uff0c\u540d\u79f0=\u201c\u7535\u5b50\u90ae\u4ef6\u201d\uff0c\u7c7b\u578b=\u201c\u7535\u5b50\u90ae\u4ef6\u201d\uff0c\u5360\u4f4d\u7b26\u6587\u672c=\u201c\u8f93\u5165\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u201d * Textarea widget, Name = \"Message\", Placeholder Text = \"Enter your message\" Textarea\u5c0f\u90e8\u4ef6\uff0cName =\u201cMessage\u201d\uff0c\u5360\u4f4d\u7b26Text =\u201c\u8f93\u5165\u60a8\u7684\u6d88\u606f\u201d * NoCaptcha widget (we'll configure the settings momentarily) NoCaptcha\u5c0f\u90e8\u4ef6\uff08\u6211\u4eec\u5c06\u6682\u65f6\u914d\u7f6e\u8bbe\u7f6e\uff09 * Button widget, Text = \"Submit!\", Type = \"Submit\" Button widget\uff0cText =\u201cSubmit\uff01\u201d\uff0cType =\u201cSubmit\u201d * Configuring NoCaptcha \u914d\u7f6eNoCaptcha When adding the NoCaptcha widget, a message was displayed that the NoCaptcha settings need to be configured before it will be displayed on the form. Let's do that right away. \u6dfb\u52a0NoCaptcha\u5c0f\u90e8\u4ef6\u65f6\uff0c\u4f1a\u663e\u793a\u4e00\u6761\u6d88\u606f\uff0c\u8bf4\u660e\u5728\u8868\u5355\u4e0a\u663e\u793a\u4e4b\u524d\u9700\u8981\u914d\u7f6eNoCaptcha\u8bbe\u7f6e\u3002\u8ba9\u6211\u4eec\u9a6c\u4e0a\u505a\u3002 Click on the NoCaptcha Settings link that is displayed within the message. Alternatively, go to Configuration -> Settings -> Forms . \u5355\u51fb\u6d88\u606f\u4e2d\u663e\u793a\u7684 NoCaptcha Settings \u94fe\u63a5\u3002\u6216\u8005\uff0c\u8f6c\u5230 \u914d\u7f6e - > \u8bbe\u7f6e - > \u8868\u5355 \u3002 The Forms settings shows two fields: SiteKey and Site Secret . You can get these values for free from https://developers.google.com/recaptcha/ . The widget uses reCaptcha V2 , so make sure to create Site Key and Site Secret for that version. \u8868\u5355\u8bbe\u7f6e\u663e\u793a\u4e24\u4e2a\u5b57\u6bb5\uff1a SiteKey \u548c Site Secret \u3002\u60a8\u53ef\u4ee5\u4ece[https://developers.google.com/recaptcha/](https://developers.google.com/recaptcha/\uff09\u514d\u8d39\u83b7\u53d6\u8fd9\u4e9b\u503c\u3002\u5c0f\u90e8\u4ef6\u4f7f\u7528 reCaptcha V2 \uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd\u4e3a\u8be5\u7248\u672c\u521b\u5efa\u7ad9\u70b9\u5bc6\u94a5\u548c\u7ad9\u70b9\u5bc6\u94a5\u3002 Once you have generated a Site Key and Site Secret with Google, copy & paste those values in the SiteKey and Site Secret fields, repsectively, and click the Save button. \u4f7f\u7528Google\u751f\u6210\u7ad9\u70b9\u5bc6\u94a5\u548c\u7ad9\u70b9\u5bc6\u94a5\u540e\uff0c\u5c06\u8fd9\u4e9b\u503c\u590d\u5236\u5e76\u7c98\u8d34\u5230SiteKey\u548cSite Secret\u5b57\u6bb5\u4e2d\uff0c\u7136\u540e\u5355\u51fb\u201c\u4fdd\u5b58\u201d\u6309\u94ae\u3002 The final form configuration should look something like this: \u6700\u7ec8\u7684\u8868\u5355\u914d\u7f6e\u5e94\u5982\u4e0b\u6240\u793a\uff1a And on the front-end, it will look like this: \u5728\u524d\u7aef\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a Create the Contact Form Workflow \u521b\u5efa\u8054\u7cfb\u8868\u5355\u5de5\u4f5c\u6d41\u7a0b In order to validate the form input and send an email, we will create a workflow. \u4e3a\u4e86\u9a8c\u8bc1\u8868\u5355\u8f93\u5165\u5e76\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u3002 From the admin menu, click the Workflows menu item. Next, click on Create Workflow Type . \u4ece\u7ba1\u7406\u83dc\u5355\u4e2d\uff0c\u5355\u51fb \u5de5\u4f5c\u6d41\u7a0b \u83dc\u5355\u9879\u3002\u63a5\u4e0b\u6765\uff0c\u5355\u51fb \u521b\u5efa\u5de5\u4f5c\u6d41\u7a0b\u7c7b\u578b \u3002 We're now asked to provide a name for the workflow. Enter \"Contact Form Workflow\", leave the other options as-is, and click Save. When you do, you will be redirected to the Workflow Editor, which is where we'll implement the Contact Form submission logic. \u6211\u4eec\u73b0\u5728\u8981\u6c42\u63d0\u4f9b\u5de5\u4f5c\u6d41\u7a0b\u7684\u540d\u79f0\u3002\u8f93\u5165\u201c\u8054\u7cfb\u8868\u5355\u5de5\u4f5c\u6d41\u7a0b\u201d\uff0c\u4fdd\u7559\u5176\u4ed6\u9009\u9879\uff0c\u7136\u540e\u5355\u51fb\u201c\u4fdd\u5b58\u201d\u3002\u5f53\u60a8\u8fd9\u6837\u505a\u65f6\uff0c\u60a8\u5c06\u88ab\u91cd\u5b9a\u5411\u5230\u5de5\u4f5c\u6d41\u7a0b\u7f16\u8f91\u5668\uff0c\u8fd9\u662f\u6211\u4eec\u5c06\u5b9e\u73b0\u8054\u7cfb\u8868\u5355\u63d0\u4ea4\u903b\u8f91\u7684\u5730\u65b9\u3002 Adding the Http Request Event \u6dfb\u52a0Http\u8bf7\u6c42\u4e8b\u4ef6 Click on the Add Event button and look for the activity named HTTP Request . \u5355\u51fbAdd Event\u6309\u94ae\uff0c\u67e5\u627e\u540d\u4e3a HTTP Request \u7684\u6d3b\u52a8\u3002 For the Title, enter \"Contact Form Submitted\", and change the HTTP Method selection to POST . \u5bf9\u4e8e\u6807\u9898\uff0c\u8f93\u5165\u201c\u63d0\u4ea4\u7684\u8054\u7cfb\u8868\u5355\u201d\uff0c\u5e76\u5c06 HTTP\u65b9\u6cd5 \u9009\u9879\u66f4\u6539\u4e3a POST \u3002 Copy the generated URL (without the scheme, host name and port number) to the clipboard, because we will need it to update the form we created. \u5c06\u751f\u6210\u7684URL\uff08\u6ca1\u6709\u65b9\u6848\uff0c\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u53f7\uff09\u590d\u5236\u5230\u526a\u8d34\u677f\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5b83\u6765\u66f4\u65b0\u6211\u4eec\u521b\u5efa\u7684\u8868\u5355\u3002 Click Save to return to the workflow editor. \u5355\u51fb\u201c\u4fdd\u5b58\u201d\u8fd4\u56de\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u3002 Back on the workflow editor, we have now a single activity. Single-click this activity and click on the left-most icon to turn this activity into the starting activity. \u56de\u5230\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u6d3b\u52a8\u3002\u5355\u51fb\u6b64\u6d3b\u52a8\uff0c\u7136\u540e\u5355\u51fb\u6700\u5de6\u4fa7\u7684\u56fe\u6807\u5c06\u6b64\u6d3b\u52a8\u8f6c\u6362\u4e3a\u542f\u52a8\u6d3b\u52a8\u3002 Adding the Fork Activity \u6dfb\u52a0Fork\u6d3b\u52a8 There are various aspects of the form that we need to validate: we want to make sure the user entered a value for the Name , Email and Message fields, and we want to make sure the captcha is valid. \u6211\u4eec\u9700\u8981\u9a8c\u8bc1\u8868\u5355\u7684\u5404\u4e2a\u65b9\u9762\uff1a\u6211\u4eec\u8981\u786e\u4fdd\u7528\u6237\u8f93\u5165 Name \uff0c Email \u548c Message \u5b57\u6bb5\u7684\u503c\uff0c\u6211\u4eec\u5e0c\u671b\u786e\u4fdd \u9a8c\u8bc1\u7801 \u6709\u6548\u3002 Although we could perform each field validation sequentially (i.e. one at a time), we are going to do it in parallel. The advantage of doing so is that we can perform form field validation without having to check the result of each validation immediately. Instead, we can simply check the ModelState.IsValid property after all form fields have been validated. This keeps the workflow simplified, and works similar to when you would perform this validation from code. \u867d\u7136\u6211\u4eec\u53ef\u4ee5\u987a\u5e8f\u6267\u884c\u6bcf\u4e2a\u5b57\u6bb5\u9a8c\u8bc1\uff08\u5373\u4e00\u6b21\u4e00\u4e2a\uff09\uff0c\u4f46\u6211\u4eec\u5c06\u5e76\u884c\u6267\u884c\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u8868\u5355\u5b57\u6bb5\u9a8c\u8bc1\uff0c\u800c\u65e0\u9700\u7acb\u5373\u68c0\u67e5\u6bcf\u4e2a\u9a8c\u8bc1\u7684\u7ed3\u679c\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9a8c\u8bc1\u6240\u6709\u8868\u5355\u5b57\u6bb5\u540e\u68c0\u67e5ModelState.IsValid\u5c5e\u6027\u3002\u8fd9\u4f7f\u5de5\u4f5c\u6d41\u7a0b\u7b80\u5316\uff0c\u5e76\u4e14\u4e0e\u4ece\u4ee3\u7801\u6267\u884c\u6b64\u9a8c\u8bc1\u65f6\u7684\u5de5\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u3002 To execute branches of execution in parallel, we need to add the Fork activity, so go ahead and click the Add Task button and look for the Fork activity. \u8981\u5e76\u884c\u6267\u884c\u6267\u884c\u5206\u652f\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0 Fork \u6d3b\u52a8\uff0c\u56e0\u6b64\u8bf7\u7ee7\u7eed\u5e76\u5355\u51fbAdd Task\u6309\u94ae\u5e76\u67e5\u627eFork\u6d3b\u52a8\u3002 In the Fork activity editor, enter \"Validate Form Fields\" as the Title, and enter the following outcomes: \"Validate Name, Validate Email, Validate Message, Validate Captcha\" . \u5728Fork\u6d3b\u52a8\u7f16\u8f91\u5668\u4e2d\uff0c\u8f93\u5165\u201c\u9a8c\u8bc1\u8868\u5355\u5b57\u6bb5\u201d\u4f5c\u4e3a\u6807\u9898\uff0c\u5e76\u8f93\u5165\u4ee5\u4e0b\u7ed3\u679c\uff1a`\u201c\u9a8c\u8bc1\u540d\u79f0\uff0c\u9a8c\u8bc1\u7535\u5b50\u90ae\u4ef6\uff0c\u9a8c\u8bc1\u6d88\u606f\uff0c\u9a8c\u8bc1\u9a8c\u8bc1\u7801\u201d\u3002 Click on Save to save the changes and to be returned to the workflow editor. \u5355\u51fb\u201c\u4fdd\u5b58\u201d\u4ee5\u4fdd\u5b58\u66f4\u6539\u5e76\u8fd4\u56de\u5230\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u3002 Connect the Http Request activity to the Fork activity you just added. \u5c06 Http Request \u6d3b\u52a8\u8fde\u63a5\u5230\u521a\u521a\u6dfb\u52a0\u7684 Fork \u6d3b\u52a8\u3002 Adding Name, Email and Message Validation \u6dfb\u52a0\u540d\u79f0\uff0c\u7535\u5b50\u90ae\u4ef6\u548c\u6d88\u606f\u9a8c\u8bc1 Next, we will do the following for each of Name, Email and Message: \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u9488\u5bf9\u540d\u79f0\uff0c\u7535\u5b50\u90ae\u4ef6\u548c\u6d88\u606f\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a Add the Validate Form Field activity. Enter a title of \"Validate Name\" for the Name field, \"Validate Email\" for the Email field and \"Validate Message\" for the Message field. \u6dfb\u52a0 \u9a8c\u8bc1\u8868\u5355\u5b57\u6bb5 \u6d3b\u52a8\u3002\u4e3a\u540d\u79f0\u5b57\u6bb5\u8f93\u5165\u201c\u9a8c\u8bc1\u540d\u79f0\u201d\u7684\u6807\u9898\uff0c\u4e3a\u7535\u5b50\u90ae\u4ef6\u5b57\u6bb5\u8f93\u5165\u201c\u9a8c\u8bc1\u7535\u5b50\u90ae\u4ef6\u201d\uff0c\u4e3a\u201c\u6d88\u606f\u201d\u5b57\u6bb5\u8f93\u5165\u201c\u9a8c\u8bc1\u6d88\u606f\u201d\u3002 Enter the appropriate field name for the Field Name field (\"Name\", \"Email\" and \"Message\", respectively). \u4e3a \u5b57\u6bb5\u540d\u79f0 \u5b57\u6bb5\u8f93\u5165\u76f8\u5e94\u7684\u5b57\u6bb5\u540d\u79f0\uff08\u5206\u522b\u4e3a\u201c\u540d\u79f0\u201d\uff0c\u201c\u7535\u5b50\u90ae\u4ef6\u201d\u548c\u201c\u6d88\u606f\u201d\uff09\u3002 In the Error Message field, enter \"<field name here> is required\" . \u5728 \u9519\u8bef\u6d88\u606f \u5b57\u6bb5\u4e2d\uff0c\u8f93\u5165\u201c\u201d is\u201c\u201d\u3002 The Validate Form Field activity in the Beta 2 version of the Forms module only supports checking if the form field is empty or not. The RC version will have support for other kinds of validation, including the ability to provide custom vlidation. Beta\u6a21\u578b\u7684Forms\u6a21\u5757\u4e2d\u7684 Validate Form Field \u6d3b\u52a8\u4ec5\u652f\u6301\u68c0\u67e5\u8868\u5355\u5b57\u6bb5\u662f\u5426\u4e3a\u7a7a\u3002 RC\u7248\u672c\u5c06\u652f\u6301\u5176\u4ed6\u7c7b\u578b\u7684\u9a8c\u8bc1\uff0c\u5305\u62ec\u63d0\u4f9b\u81ea\u5b9a\u4e49vlidation\u7684\u529f\u80fd\u3002 Adding NoCaptcha \u6dfb\u52a0NoCaptcha To add the NoCaptcha validation activity, click Add Task and find the Validate NoCaptcha . Since there is nothing to configure on this activity, you'll be redirected straight to the workflow editor when you click Add. \u8981\u6dfb\u52a0NoCaptcha\u9a8c\u8bc1\u6d3b\u52a8\uff0c\u8bf7\u5355\u51fb\u201c\u6dfb\u52a0\u4efb\u52a1\u201d\uff0c\u7136\u540e\u627e\u5230 \u9a8c\u8bc1NoCaptcha \u3002\u7531\u4e8e\u6b64\u6d3b\u52a8\u65e0\u9700\u914d\u7f6e\u4efb\u4f55\u5185\u5bb9\uff0c\u56e0\u6b64\u5355\u51fb\u201c\u6dfb\u52a0\u201d\u65f6\uff0c\u60a8\u5c06\u76f4\u63a5\u91cd\u5b9a\u5411\u5230\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u3002 Once you added all 4 validation tasks, connect the Fork activity to the validation activities using the appropriate outcomes. For example, connect the \"Validate Name\" outcome of the Fork activity to the \"Validate Name\" activity. \u6dfb\u52a0\u5b8c\u6240\u67094\u4e2a\u9a8c\u8bc1\u4efb\u52a1\u540e\uff0c\u4f7f\u7528\u9002\u5f53\u7684\u7ed3\u679c\u5c06Fork\u6d3b\u52a8\u8fde\u63a5\u5230\u9a8c\u8bc1\u6d3b\u52a8\u3002\u4f8b\u5982\uff0c\u5c06Fork\u6d3b\u52a8\u7684\u201cValidate Name\u201d\u7ed3\u679c\u8fde\u63a5\u5230\u201cValidate Name\u201d\u6d3b\u52a8\u3002 If the specified form field is empty, the Validate Form Field activity will add a model validation error to the ModelState dictionary. The same goes for the Validate NoCaptcha activity if the captcha failed. This is useful, because we now only have to add a single check to see if there are any model validation errors. \u5982\u679c\u6307\u5b9a\u7684\u8868\u5355\u5b57\u6bb5\u4e3a\u7a7a\uff0c\u5219 Validate Form Field \u6d3b\u52a8\u5c06 \u6a21\u578b\u9a8c\u8bc1\u9519\u8bef\u6dfb\u52a0\u5230ModelState \u5b57\u5178\u3002\u5982\u679c\u9a8c\u8bc1\u7801\u5931\u8d25\uff0c Validate NoCaptcha \u6d3b\u52a8\u4e5f\u662f\u5982\u6b64\u3002\u8fd9\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u68c0\u67e5\u4ee5\u67e5\u770b\u662f\u5426\u5b58\u5728 any \u6a21\u578b\u9a8c\u8bc1\u9519\u8bef\u3002 Before we do that however, we first need to join the forked workflow execution back into a single flow. \u7136\u800c\uff0c\u5728\u6211\u4eec\u8fd9\u6837\u505a\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981 \u5c06\u5206\u53c9\u7684\u5de5\u4f5c\u6d41\u6267\u884c \u52a0\u5165\u5230\u5355\u4e2a\u6d41\u4e2d\u3002 Adding the Join Activity \u6dfb\u52a0\u52a0\u5165\u6d3b\u52a8 The Join activity will merge the forked workflow back into a single flow of execution. There are two modes: Wait Any and Wait All . In our case, we need the Wait All mode, because we need all validation steps to finish before continuing. Join \u6d3b\u52a8\u5c06\u5206\u53c9\u7684\u5de5\u4f5c\u6d41\u7a0b\u5408\u5e76\u4e3a\u5355\u4e2a\u6267\u884c\u6d41\u7a0b\u3002\u6709\u4e24\u79cd\u6a21\u5f0f\uff1a \u7b49\u5f85\u4efb\u4f55 \u548c \u7b49\u5f85\u6240\u6709 \u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u8981 Wait All \u6a21\u5f0f\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5728\u7ee7\u7eed\u4e4b\u524d\u5b8c\u6210\u6240\u6709\u9a8c\u8bc1\u6b65\u9aa4\u3002 Go ahead and add the Join activity to the workflow, and make sure to connect the Done outcome of each validation task to the Join activity. The \"Done\" outcome will execute regardless of whether or not the form field validation step failed or not, which is exactly what we want. \u7ee7\u7eed\u5c06Join\u6d3b\u52a8\u6dfb\u52a0\u5230\u5de5\u4f5c\u6d41\u7a0b\u4e2d\uff0c\u5e76\u786e\u4fdd\u5c06\u6bcf\u4e2a\u9a8c\u8bc1\u4efb\u52a1*\u7684 Done \u7ed3\u679c\u8fde\u63a5\u5230Join\u6d3b\u52a8\u3002\u65e0\u8bba\u8868\u5355\u5b57\u6bb5\u9a8c\u8bc1\u6b65\u9aa4\u662f\u5426\u5931\u8d25\uff0c\u201c\u5b8c\u6210\u201d\u7ed3\u679c\u90fd\u5c06\u6267\u884c\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002 Adding the Validate Form Activity \u6dfb\u52a0\u9a8c\u8bc1\u8868\u5355\u6d3b\u52a8 The Validate Form activity will check if the ModelState is valid or not. If any validation errors occurred, it will return False, and True otherwise. Validate Form \u6d3b\u52a8\u5c06\u68c0\u67e5ModelState\u662f\u5426\u6709\u6548\u3002\u5982\u679c\u53d1\u751f\u4efb\u4f55\u9a8c\u8bc1\u9519\u8bef\uff0c\u5219\u8fd4\u56deFalse\uff0c\u5426\u5219\u8fd4\u56deTrue\u3002 Go ahead and add the Validate Form activity and connect it to the Join activity. \u7ee7\u7eed\u5e76\u6dfb\u52a0Validate Form\u6d3b\u52a8\u5e76\u5c06\u5176\u8fde\u63a5\u5230Join\u6d3b\u52a8\u3002 Next, we have to implement the two possible outcomes: Valid and Invalid . \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5fc5\u987b\u5b9e\u73b0\u4e24\u79cd\u53ef\u80fd\u7684\u7ed3\u679c\uff1a \u6709\u6548 \u548c \u65e0\u6548 \u3002 If the outcome is Invalid, we will redirect back to the form. Since the form contains a Validation Summary, it will display all validation errors. \u5982\u679c\u7ed3\u679c\u4e3a\u65e0\u6548\uff0c\u6211\u4eec\u5c06\u91cd\u5b9a\u5411\u56de\u8868\u5355\u3002\u7531\u4e8e\u8868\u5355\u5305\u542b\u9a8c\u8bc1\u6458\u8981\uff0c\u56e0\u6b64\u5b83\u5c06\u663e\u793a\u6240\u6709\u9a8c\u8bc1\u9519\u8bef\u3002 If the outcome is Valid, we want to send an email and redirect the user to a Thank You page. \u5982\u679c\u7ed3\u679c\u662f\u6709\u6548\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u5e76\u5c06\u7528\u6237\u91cd\u5b9a\u5411\u5230\u201c\u611f\u8c22\u60a8\u201d\u9875\u9762\u3002 Let's implement the Redirect first. \u8ba9\u6211\u4eec\u5148\u5b9e\u73b0\u91cd\u5b9a\u5411\u3002 Adding the First Redirect Activity \u6dfb\u52a0\u7b2c\u4e00\u4e2a\u91cd\u5b9a\u5411\u6d3b\u52a8 Click the Add Task button and locate the Redirect activity. Use \"Display Form Errors\" for the title, and enter the relative path to the Contact Form content item ( /contact-form if you used the same title as I did). \u5355\u51fb\u201c\u6dfb\u52a0\u4efb\u52a1\u201d\u6309\u94ae\uff0c\u7136\u540e\u627e\u5230\u201c\u91cd\u5b9a\u5411\u201d\u6d3b\u52a8\u3002\u4f7f\u7528\u201c\u663e\u793a\u8868\u200b\u200b\u5355\u9519\u8bef\u201d\u4f5c\u4e3a\u6807\u9898\uff0c\u5e76\u8f93\u5165\u8054\u7cfb\u8868\u5355\u5185\u5bb9\u9879\u7684\u76f8\u5bf9\u8def\u5f84\uff08\u5982\u679c\u60a8\u4f7f\u7528\u4e0e\u6211\u76f8\u540c\u7684\u6807\u9898\uff0c\u5219\u8f93\u5165 / contact-form \uff09\u3002 Click Save and connect the Invalid outcome of the Validate Form activity to the Redirect activity you just added. \u5355\u51fb\u201c\u4fdd\u5b58\u201d\uff0c\u5c06\u201c\u9a8c\u8bc1\u8868\u5355\u201d\u6d3b\u52a8\u7684\u201c\u65e0\u6548\u7ed3\u679c\u201d\u8fde\u63a5\u5230\u521a\u521a\u6dfb\u52a0\u7684\u201c\u91cd\u5b9a\u5411\u201d\u6d3b\u52a8\u3002 Adding the Email Activity \u6dfb\u52a0\u7535\u5b50\u90ae\u4ef6\u6d3b\u52a8 Click the Add Task button and locate the Send Email activity. Enter the following values: \u5355\u51fb\u201c\u6dfb\u52a0\u4efb\u52a1\u201d\u6309\u94ae\uff0c\u627e\u5230\u201c\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u201d\u6d3b\u52a8\u3002\u8f93\u5165\u4ee5\u4e0b\u503c\uff1a Title: Send Email to Site Admin \u6807\u9898\uff1a`\u5411\u7f51\u7ad9\u7ba1\u7406\u5458\u53d1\u9001\u7535\u5b50\u90ae\u4ef6' * Sender: (leave empty) \u53d1\u4ef6\u4eba:(\u7559\u7a7a\uff09 * Recipients: admin@orchardcore.io \u6536\u4ef6\u4eba\uff1a admin @ orchardcore.io * Subject: Contact Form submitted by {{ Request.Form.Name }}! \u4e3b\u9898\uff1a {{Request.Form.Name}}\u63d0\u4ea4\u7684\u8054\u7cfb\u8868\u683c\uff01 * Body: \u8eab\u4f53\uff1a * <p>The following information was submitted:<p/> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><p>\u63d0\u4ea4\u4e86\u4ee5\u4e0b\u4fe1\u606f\uff1a<p /></font> <p>Name: {{ Request.Form.Name }}</p> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><p>\u59d3\u540d\uff1a{{Request.Form.Name}} </ p></font> <p>Email: {{ Request.Form.Email }}</p> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><p>\u7535\u5b50\u90ae\u4ef6\uff1a{{Request.Form.Email}} </ p></font> <p>Message: {{ Request.Form.Message }}</p> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><p>\u6d88\u606f\uff1a{{Request.Form.Message}} </ p></font> Configuring SMTP \u914d\u7f6eSMTP In order to try out sending emails, you will need to configure the SMTP settings. You can do so via Configuration -> Settings -> Smtp . For development purposes, I am a big fan of Smtp4Dev , which makes it super easy to try out sending emails without actually sending them . It's basically an SMTP host that intercepts emails being sent that you can then inspect. \u8981\u5c1d\u8bd5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u60a8\u9700\u8981\u914d\u7f6eSMTP\u8bbe\u7f6e\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7 Configuration * - > * Settings * - > * Smtp \u6765\u5b9e\u73b0\u3002\u51fa\u4e8e\u5f00\u53d1\u76ee\u7684\uff0c\u6211\u662f[Smtp4Dev]\uff08https://github.com/rnwood/smtp4dev\uff09\u7684\u5fe0\u5b9e\u7c89\u4e1d\uff0c\u8fd9\u4f7f\u5f97\u5c1d\u8bd5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6 \u975e\u5e38\u5bb9\u6613\uff0c\u800c\u65e0\u9700\u5b9e\u9645\u53d1\u9001 \u3002\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2aSMTP\u4e3b\u673a\u62e6\u622a\u53d1\u9001\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u68c0\u67e5\u3002 When configuring the SMTP settings in Orchard, make sure to provide the Sender email address , which will be used by default (remember, we didn't specify a Sender in the Send Email activity). Enter system@orchardcore.io or any other valid email address you like. \u5728Orchard\u4e2d\u914d\u7f6eSMTP\u8bbe\u7f6e\u65f6\uff0c\u8bf7\u786e\u4fdd\u63d0\u4f9b \u53d1\u4ef6\u4eba\u7535\u5b50\u90ae\u4ef6\u5730\u5740 \uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u4f7f\u7528\u8be5\u90ae\u4ef6\u5730\u5740**\uff08\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u672a\u5728\u201c\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u201d\u6d3b\u52a8\u4e2d\u6307\u5b9a\u53d1\u4ef6\u4eba\uff09\u3002\u8f93\u5165 system @ orchardcore.io \u6216\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u5176\u4ed6\u6709\u6548\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002 If you're using Smtp4Dev, make sure to enter localhost in the Host name field, and the configured port number. \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fSmtp4Dev\uff0c\u8bf7\u786e\u4fdd\u5728\u4e3b\u673a\u540d\u5b57\u6bb5\u4e2d\u8f93\u5165 localhost \u548c\u914d\u7f6e\u7684\u7aef\u53e3\u53f7\u3002 Adding the Second Redirect Activity \u6dfb\u52a0\u7b2c\u4e8c\u4e2a\u91cd\u5b9a\u5411\u6d3b\u52a8 After the email is sent, we want to redirect the user to a \"Thank You\" page. Go ahead and add a Redirect activity, using Display Thank You Page as the title and /thank-you as the URL. Make sure to connect the Done outcome of the Send Email activity to this new Redirect activity. \u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u540e\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7528\u6237\u91cd\u5b9a\u5411\u5230\u201c\u8c22\u8c22\u201d\u9875\u9762\u3002\u7ee7\u7eed\u6dfb\u52a0\u4e00\u4e2aRedirect\u6d3b\u52a8\uff0c\u4f7f\u7528 Display Thank You Page \u4f5c\u4e3a\u6807\u9898\uff0c\u4f7f\u7528 / thank-you \u4f5c\u4e3aURL\u3002\u786e\u4fdd\u5c06\u201c\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u201d\u6d3b\u52a8\u7684 \u5b8c\u6210 \u7ed3\u679c\u8fde\u63a5\u5230\u6b64\u65b0\u7684\u91cd\u5b9a\u5411\u6d3b\u52a8\u3002 Adding a Thank You Page \u6dfb\u52a0\u4e00\u4e2a\u611f\u8c22\u9875\u9762 Create a new Page content item with a title of Thank You! , and make sure its Permalink is thank-you after saving. Add any widgets to this page that you like. For example, add the Paragraph widget with the following text: Thank you for reaching out! We'll get back to you soon. \u521b\u5efa\u4e00\u4e2a\u6807\u9898\u4e3a\u201c\u8c22\u8c22\uff01\u201d\u7684\u65b0\u9875\u9762\u5185\u5bb9\u9879\uff0c\u5e76\u5728\u4fdd\u5b58\u540e\u786e\u4fdd\u5176\u6c38\u4e45\u94fe\u63a5\u4e3a\u201c\u8c22\u8c22\u201d\u3002\u5c06\u4efb\u4f55\u5c0f\u90e8\u4ef6\u6dfb\u52a0\u5230\u60a8\u559c\u6b22\u7684\u9875\u9762\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u4ee5\u4e0b\u6587\u672c\u6dfb\u52a0 Paragraph \u5c0f\u90e8\u4ef6\uff1a`\u8c22\u8c22\u4f60\u4f38\u51fa\u63f4\u624b\uff01\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u56de\u590d\u4f60 Updating the Contact Form widget \u66f4\u65b0\u201c\u8054\u7cfb\u8868\u5355\u201d\u5c0f\u7ec4\u4ef6 Now that our workflow is done, we need to update the Contact Form widget with the Workflow URL that was generated for us in the Http Request activity. Unless you have that URL still on your clipboard, go back to the first activity on the workflow, double-click it to get to its activity editor, and copy the URL (without the scheme, host and port number; just the path). \u73b0\u5728\u6211\u4eec\u7684\u5de5\u4f5c\u6d41\u7a0b\u5df2\u7ecf\u5b8c\u6210\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5728 Http Request \u6d3b\u52a8\u4e2d\u4e3a\u6211\u4eec\u751f\u6210\u7684\u5de5\u4f5c\u6d41URL\u66f4\u65b0Contact Form\u5c0f\u90e8\u4ef6\u3002\u9664\u975e\u60a8\u7684\u526a\u8d34\u677f\u4e0a\u4ecd\u6709\u8be5URL\uff0c\u5426\u5219\u8bf7\u8fd4\u56de\u5de5\u4f5c\u6d41\u4e0a\u7684\u7b2c\u4e00\u4e2a\u6d3b\u52a8\uff0c\u53cc\u51fb\u5b83\u4ee5\u8fdb\u5165\u5176\u6d3b\u52a8\u7f16\u8f91\u5668\uff0c\u7136\u540e\u590d\u5236URL\uff08\u4e0d\u5305\u62ec\u65b9\u6848\uff0c\u4e3b\u673a\u548c\u7aef\u53e3\u53f7;\u53ea\u6709\u8def\u5f84\uff09\u3002 Go back to the Contact Form page content item, expand the Contact Form widget and paste in the URL into the Action field and save your changes. \u8fd4\u56de\u201c\u8054\u7cfb\u8868\u5355\u201d\u9875\u9762\u5185\u5bb9\u9879\uff0c\u5c55\u5f00\u201c\u8054\u7cfb\u8868\u5355\u201d\u7a97\u53e3\u5c0f\u90e8\u4ef6\u5e76\u5c06URL\u7c98\u8d34\u5230 \u64cd\u4f5c \u5b57\u6bb5\u4e2d\u5e76\u4fdd\u5b58\u66f4\u6539\u3002 Try it out! \u8bd5\u8bd5\u770b\uff01 Go ahead and try it out. Navigate to https://localhost:44300/contact-form and fill out the form. If all went well, you should see an email coming in and be redirected to the Thank You page. \u7ee7\u7eed\u5c1d\u8bd5\u4e00\u4e0b\u3002\u5bfc\u822a\u5230https\uff1a// localhost\uff1a44300 / contact-form\u5e76\u586b\u5199\u8868\u5355\u3002\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u5e76\u88ab\u91cd\u5b9a\u5411\u5230Thank You\u9875\u9762\u3002 If you leave any field empty or do not pass the captcha, you should be redirected to the Contact Form page and see the validation errors. \u5982\u679c\u60a8\u5c06\u4efb\u4f55\u5b57\u6bb5\u7559\u7a7a\u6216\u672a\u901a\u8fc7\u9a8c\u8bc1\u7801\uff0c\u5219\u5e94\u5c06\u60a8\u91cd\u5b9a\u5411\u5230\u201c\u8054\u7cfb\u8868\u5355\u201d\u9875\u9762\u5e76\u67e5\u770b\u9a8c\u8bc1\u9519\u8bef\u3002 Fixing the Lost Field Values Isue \u4fee\u590d\u4e22\u5931\u7684\u5b57\u6bb5\u503cIsue There's one issue with the form that I left out intentionally to the very last. To see the problem, try entering some values in the form, except for one (e.g. leave Email empty, or do not check the captcha checkbox). When you submit the form, notice that the values you entered have disappeared. \u8fd9\u4e2a\u8868\u683c\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u6545\u610f\u6392\u5230\u6700\u540e\u3002\u8981\u67e5\u770b\u95ee\u9898\uff0c\u8bf7\u5c1d\u8bd5\u5728\u8868\u5355\u4e2d\u8f93\u5165\u4e00\u4e9b\u503c\uff08\u4e00\u4e2a\u9664\u5916\uff09\uff08\u4f8b\u5982\uff0c\u5c06\u7535\u5b50\u90ae\u4ef6\u7559\u7a7a\uff0c\u6216\u8005\u4e0d\u68c0\u67e5\u9a8c\u8bc1\u7801\u590d\u9009\u6846\uff09\u3002\u63d0\u4ea4\u8868\u5355\u65f6\uff0c\u8bf7\u6ce8\u610f\u60a8\u8f93\u5165\u7684\u503c\u5df2\u6d88\u5931\u3002 Normally what happens when you submit a form to an MVC controller, the model binder will bind the fields to some view model. During the model binding phase, MVC will add model state entries. However, we are not invoking model binding anywhere. We only add model validation errors when we identify a missing value. \u901a\u5e38\uff0c\u5f53\u60a8\u5c06\u8868\u5355\u63d0\u4ea4\u7ed9MVC\u63a7\u5236\u5668\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u6a21\u578b\u7ed1\u5b9a\u5668\u4f1a\u5c06\u5b57\u6bb5\u7ed1\u5b9a\u5230\u67d0\u4e2a\u89c6\u56fe\u6a21\u578b\u3002\u5728\u6a21\u578b\u7ed1\u5b9a\u9636\u6bb5\uff0cMVC\u5c06\u6dfb\u52a0\u6a21\u578b\u72b6\u6001\u6761\u76ee\u3002\u4f46\u662f\uff0c\u6211\u4eec\u4e0d\u4f1a\u5728\u4efb\u4f55\u5730\u65b9\u8c03\u7528\u6a21\u578b\u7ed1\u5b9a\u3002\u6211\u4eec\u53ea\u5728\u8bc6\u522b\u7f3a\u5931\u503c\u65f6\u6dfb\u52a0\u6a21\u578b\u9a8c\u8bc1\u9519\u8bef\u3002 To fix this, we must add the Bind Form Model State activity to the workflow, and connect it in between the first activity (Http Request) and the second activity (the Fork activity). This will cause all Form fields to be copied into ModelState, which is used when displaying the form again. \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5fc5\u987b\u5c06 Bind Form Model State \u6d3b\u52a8\u6dfb\u52a0\u5230\u5de5\u4f5c\u6d41\u7a0b\u4e2d\uff0c\u5e76\u5c06\u5176\u8fde\u63a5\u5230\u7b2c\u4e00\u4e2a\u6d3b\u52a8\uff08Http Request\uff09\u548c\u7b2c\u4e8c\u4e2a\u6d3b\u52a8\uff08Fork\u6d3b\u52a8\uff09\u4e4b\u95f4\u3002\u8fd9\u5c06\u5bfc\u81f4\u6240\u6709\u8868\u5355\u5b57\u6bb5\u90fd\u590d\u5236\u5230ModelState\u4e2d\uff0c\u8fd9\u5728\u518d\u6b21\u663e\u793a\u8868\u5355\u65f6\u4f7f\u7528\u3002 The final workflow should look like this: \u6700\u7ec8\u7684\u5de5\u4f5c\u6d41\u7a0b\u5e94\u5982\u4e0b\u6240\u793a\uff1a Future Improvements \u672a\u6765\u7684\u6539\u8fdb Implementing a workflow that handles form submissions is easy, but the workflow becomes big quite quickly as soon as you start adding validation logic to the mix. In the next version of the Forms module, there will be an easier way to validate Form submissions in combination with the Form widget. The Form widget will contain all of the validation settings, and there will be a single workflow activity that validates the submitted values against those settings. \u5b9e\u73b0\u5904\u7406\u8868\u5355\u63d0\u4ea4\u7684\u5de5\u4f5c\u6d41\u5f88\u5bb9\u6613\uff0c\u4f46\u53ea\u8981\u60a8\u5f00\u59cb\u5728\u6df7\u5408\u4e2d\u6dfb\u52a0\u9a8c\u8bc1\u903b\u8f91\uff0c\u5de5\u4f5c\u6d41\u5c31\u4f1a\u5f88\u5feb\u53d8\u5927\u3002\u5728Forms\u6a21\u5757\u7684\u4e0b\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u5c06\u6709\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u7ed3\u5408Form\u5c0f\u90e8\u4ef6\u9a8c\u8bc1Form\u63d0\u4ea4\u3002\u8868\u5355\u7a97\u53e3\u5c0f\u90e8\u4ef6\u5c06\u5305\u542b\u6240\u6709\u9a8c\u8bc1\u8bbe\u7f6e\uff0c\u5e76\u4e14\u5c06\u6709\u4e00\u4e2a\u5de5\u4f5c\u6d41\u6d3b\u52a8\u6839\u636e\u8fd9\u4e9b\u8bbe\u7f6e\u9a8c\u8bc1\u63d0\u4ea4\u7684\u503c\u3002 The low-level validation activities will remain part of the toolbox to support workflow validation for forms that are not built with the Form widget, but implemented as raw HTML for example. \u4f4e\u7ea7\u9a8c\u8bc1\u6d3b\u52a8\u5c06\u4ecd\u7136\u662f\u5de5\u5177\u7bb1\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u652f\u6301\u4e0d\u662f\u4f7f\u7528\u8868\u5355\u7a97\u53e3\u5c0f\u90e8\u4ef6\u6784\u5efa\u7684\u8868\u5355\u7684\u5de5\u4f5c\u6d41\u9a8c\u8bc1\uff0c\u800c\u662f\u5b9e\u73b0\u4e3a\u539f\u59cbHTML\u3002","title":"Forms"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#forms-orchardcoreforms","text":"","title":"Forms (OrchardCore.Forms)"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#orchardcoreforms","text":"The Forms module provides components in the form of widgets and workflow activities to create, validate and process forms. Forms\u6a21\u5757\u4ee5\u7a97\u53e3\u5c0f\u90e8\u4ef6\u548c\u5de5\u4f5c\u6d41\u6d3b\u52a8\u7684\u5f62\u5f0f\u63d0\u4f9b\u7ec4\u4ef6\uff0c\u4ee5\u521b\u5efa\uff0c\u9a8c\u8bc1\u548c\u5904\u7406\u8868\u5355\u3002","title":"\u8868\u683c\uff08OrchardCore.Forms\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#general-concepts","text":"","title":"General Concepts"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_1","text":"When building a form, there are primarily two aspects involved: \u6784\u5efa\u8868\u5355\u65f6\uff0c\u4e3b\u8981\u6d89\u53ca\u4e24\u4e2a\u65b9\u9762\uff1a Building the form. 1.\u6784\u5efa\u8868\u5355\u3002 Processing the form when submitted. 2.\u63d0\u4ea4\u8868\u683c\u65f6\u5904\u7406\u3002 Both parts are independent from one another, so that you can just use the form builder and handle its submissions yourself, or provide the form HTML markup yourself but rely on workflows to handle form submission. \u8fd9\u4e24\u4e2a\u90e8\u5206\u5f7c\u6b64\u72ec\u7acb\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u81ea\u5df1\u4f7f\u7528\u8868\u5355\u6784\u5efa\u5668\u5e76\u5904\u7406\u5176\u63d0\u4ea4\uff0c\u6216\u8005\u81ea\u5df1\u63d0\u4f9b\u8868\u5355HTML\u6807\u8bb0\uff0c\u4f46\u4f9d\u9760\u5de5\u4f5c\u6d41\u6765\u5904\u7406\u8868\u5355\u63d0\u4ea4\u3002 The form-building part relies on the Form widget. To create a form, add a Form widget to a zone or to a content item that has the FlowPart attached. \u8868\u5355\u6784\u5efa\u90e8\u5206\u4f9d\u8d56\u4e8eForm\u5c0f\u90e8\u4ef6\u3002\u8981\u521b\u5efa\u8868\u5355\uff0c\u8bf7\u5c06\u8868\u5355\u7a97\u53e3\u5c0f\u90e8\u4ef6\u6dfb\u52a0\u5230\u533a\u57df\u6216\u9644\u52a0\u4e86FlowPart\u7684\u5185\u5bb9\u9879\u3002","title":"\u4e00\u822c\u6982\u5ff5"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#creating-a-form","text":"","title":"Creating a Form"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_2","text":"Creating a form typically involves the following steps: \u521b\u5efa\u8868\u5355\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u6b65\u9aa4\uff1a Make sure the Forms feature is enabled. 1.\u786e\u4fdd\u5df2\u542f\u7528\u201c\u8868\u5355\u201d\u529f\u80fd\u3002 Create a new content item that has the FlowPart attached. If you used the Blog recipe, there will be a Page content type that you can use. 2.\u521b\u5efa\u9644\u52a0\u4e86FlowPart\u7684\u65b0\u5185\u5bb9\u9879\u3002\u5982\u679c\u60a8\u4f7f\u7528\u4e86Blog\u914d\u65b9\uff0c\u5219\u4f1a\u6709\u4e00\u4e2a\u53ef\u4ee5\u4f7f\u7528\u7684\u9875\u9762\u5185\u5bb9\u7c7b\u578b\u3002 Add the Form widget. 3.\u6dfb\u52a0\u8868\u5355\u5c0f\u90e8\u4ef6\u3002 Because the Form widget has the FlowPart attached, you can add other widgets to the Form widget. Add widgets such as Input, Textarea and Button to build up your form. 4.\u7531\u4e8eForm\u7a97\u53e3\u5c0f\u90e8\u4ef6\u9644\u52a0\u4e86FlowPart\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5c06\u5176\u4ed6\u7a97\u53e3\u5c0f\u90e8\u4ef6\u6dfb\u52a0\u5230\u7a97\u4f53\u5c0f\u90e8\u4ef6\u3002\u6dfb\u52a0\u8bf8\u5982Input\uff0cTextarea\u548cButton\u4e4b\u7c7b\u7684\u5c0f\u90e8\u4ef6\u6765\u6784\u5efa\u8868\u5355\u3002","title":"\u521b\u5efa\u8868\u5355"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#processing-form-submissions","text":"","title":"Processing Form submissions"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_3","text":"Once you have a form in place, you need to handle its submission. The Form widget has a field called Action , into which you can enter a URL to where the form should submit to. This could be the path to your own controller, but it can also be the URL pointing to a workflow type. \u4e00\u65e6\u6709\u8868\u683c\uff0c\u60a8\u9700\u8981\u5904\u7406\u5176\u63d0\u4ea4\u3002\u8868\u5355\u7a97\u53e3\u5c0f\u90e8\u4ef6\u6709\u4e00\u4e2a\u540d\u4e3a Action \u7684\u5b57\u6bb5\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u8f93\u5165\u8868\u5355\u5e94\u63d0\u4ea4\u5230\u7684URL\u3002\u8fd9\u53ef\u80fd\u662f\u60a8\u81ea\u5df1\u7684\u63a7\u5236\u5668\u7684\u8def\u5f84\uff0c\u4f46\u5b83\u4e5f\u53ef\u4ee5\u662f\u6307\u5411\u5de5\u4f5c\u6d41\u7c7b\u578b\u7684URL\u3002 Using a workflow is convenient because it doesn't require you to create a custom module. \u4f7f\u7528\u5de5\u4f5c\u6d41\u5f88\u65b9\u4fbf\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u60a8\u521b\u5efa\u81ea\u5b9a\u4e49\u6a21\u5757\u3002 Creating a workflow and associating it with a form typically involves the following steps: \u521b\u5efa\u5de5\u4f5c\u6d41\u5e76\u5c06\u5176\u4e0e\u8868\u5355\u76f8\u5173\u8054\u901a\u5e38\u6d89\u53ca\u4ee5\u4e0b\u6b65\u9aa4\uff1a Make sure the HTTP Workflows Activities feature is enabled. 1.\u786e\u4fdd\u5df2\u542f\u7528 HTTP\u5de5\u4f5c\u6d41\u6d3b\u52a8 \u529f\u80fd\u3002 Click on the Workflows menu item and create a new Workflow Type. 2.\u5355\u51fb\u201c\u5de5\u4f5c\u6d41\u7a0b\u201d\u83dc\u5355\u9879\u5e76\u521b\u5efa\u65b0\u7684\u201c\u5de5\u4f5c\u6d41\u7a0b\u7c7b\u578b\u201d\u3002 Add the Http Request Event event to the workflow. Make sure the HTTP Method field is set to POST . 3.\u5c06 Http Request Event \u4e8b\u4ef6\u6dfb\u52a0\u5230\u5de5\u4f5c\u6d41\u7a0b\u4e2d\u3002\u786e\u4fdd HTTP Method \u5b57\u6bb5\u8bbe\u7f6e\u4e3a POST \u3002 Copy the generated workflow URL to your clipboard. 4.\u5c06\u751f\u6210\u7684\u5de5\u4f5c\u6d41URL\u590d\u5236\u5230\u526a\u8d34\u677f\u3002 Click Save to save the changes and return to the workflow editor. 5.\u5355\u51fb\u201c\u4fdd\u5b58\u201d\u4ee5\u4fdd\u5b58\u66f4\u6539\u5e76\u8fd4\u56de\u5230\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u3002 Make sure the Http Request Event activity is configured as the start activity (on the workflow editor, single-click the activity and click on the on/off icon). The activity will have a green color if it's the starting activity. 5.\u786e\u4fdd\u5c06Http Request Event\u6d3b\u52a8\u914d\u7f6e\u4e3a\u542f\u52a8\u6d3b\u52a8\uff08\u5728\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u4e0a\uff0c\u5355\u51fb\u6d3b\u52a8\u5e76\u5355\u51fb\u5f00/\u5173\u56fe\u6807\uff09\u3002\u5982\u679c\u6d3b\u52a8\u662f\u8d77\u59cb\u6d3b\u52a8\uff0c\u5219\u6d3b\u52a8\u5c06\u4e3a\u7eff\u8272\u3002 Add any other activities to validate and process the form submission. We will see a real-world example later on. 5.\u6dfb\u52a0\u4efb\u4f55\u5176\u4ed6\u6d3b\u52a8\u4ee5\u9a8c\u8bc1\u548c\u5904\u7406\u8868\u5355\u63d0\u4ea4\u3002\u6211\u4eec\u7a0d\u540e\u4f1a\u770b\u5230\u4e00\u4e2a\u771f\u5b9e\u7684\u4f8b\u5b50\u3002 Click Save to save the workflow. 6.\u5355\u51fb\u201c\u4fdd\u5b58\u201d\u4ee5\u4fdd\u5b58\u5de5\u4f5c\u6d41\u7a0b\u3002 Go to the content item where you added a Form widget. 7.\u8f6c\u5230\u6dfb\u52a0\u201c\u8868\u5355\u201d\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u5185\u5bb9\u9879\u3002 Paste the workflow URL into the Action field. 8.\u5c06\u5de5\u4f5c\u6d41URL\u7c98\u8d34\u5230\u201c\u64cd\u4f5c\u201d\u5b57\u6bb5\u4e2d\u3002 Save your content item. 9.\u4fdd\u5b58\u60a8\u7684\u5185\u5bb9\u9879\u3002 At this point, you should be able to test out your form and its submission. \u6b64\u65f6\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u6d4b\u8bd5\u60a8\u7684\u8868\u5355\u53ca\u5176\u63d0\u4ea4\u3002","title":"\u5904\u7406\u8868\u683c\u63d0\u4ea4"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#implementing-a-contact-form","text":"","title":"Implementing a Contact Form"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_4","text":"In the following walkthrough, we'll build an actual contact form and implement a form handler using a workflow. \u5728\u4e0b\u9762\u7684\u6f14\u7ec3\u4e2d\uff0c\u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u5b9e\u9645\u7684\u8054\u7cfb\u8868\u5355\uff0c\u5e76\u4f7f\u7528\u5de5\u4f5c\u6d41\u5b9e\u73b0\u8868\u5355\u5904\u7406\u7a0b\u5e8f\u3002 The contact form will include the following fields: \u8054\u7cfb\u8868\u683c\u5c06\u5305\u62ec\u4ee5\u4e0b\u5b57\u6bb5\uff1a A Validation Summary widget. \u9a8c\u8bc1\u6458\u8981\u5c0f\u90e8\u4ef6\u3002 * A Name input widget. \u540d\u79f0\u8f93\u5165\u5c0f\u90e8\u4ef6\u3002 * An Email input widget. \u7535\u5b50\u90ae\u4ef6\u8f93\u5165\u5c0f\u90e8\u4ef6\u3002 * A Message text area widget. \u6d88\u606f\u6587\u672c\u533a\u57df\u5c0f\u90e8\u4ef6\u3002 * A Google NoCaptcha widget to protect against automated form submissions. Google NoCaptcha\u5c0f\u90e8\u4ef6\uff0c\u53ef\u9632\u6b62\u81ea\u52a8\u63d0\u4ea4\u8868\u5355\u3002 * A Submit button widget. \u63d0\u4ea4\u6309\u94ae\u5c0f\u90e8\u4ef6\u3002 * The workflow will perform the following actions: \u5de5\u4f5c\u6d41\u7a0b\u5c06\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a Validate that the Name, Email and Message fields are not empty. If they are empty, we'll add Model State Validation errors. \u9a8c\u8bc1\u540d\u79f0\uff0c\u7535\u5b50\u90ae\u4ef6\u548c\u6d88\u606f\u5b57\u6bb5\u4e0d\u4e3a\u7a7a\u3002\u5982\u679c\u5b83\u4eec\u4e3a\u7a7a\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u6a21\u578b\u72b6\u6001\u9a8c\u8bc1\u9519\u8bef\u3002 * Validate the NoCaptcha. \u9a8c\u8bc1NoCaptcha\u3002 * Send an email to the site owner that the contact form was submitted. The email will contain the submitted form fields. \u5411\u63d0\u4ea4\u8054\u7cfb\u8868\u5355\u7684\u7f51\u7ad9\u6240\u6709\u8005\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u7535\u5b50\u90ae\u4ef6\u5c06\u5305\u542b\u63d0\u4ea4\u7684\u8868\u5355\u5b57\u6bb5\u3002 *","title":"\u5b9e\u65bd\u8054\u7cfb\u8868\u683c"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#creating-the-contact-form","text":"","title":"Creating the Contact Form"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_5","text":"For this walkthrough, I am assuming you executed the Blog recipe when setting up the site, which will automatically create a Page content type with the FlowPart attached. \u5728\u672c\u6f14\u7ec3\u4e2d\uff0c\u6211\u5047\u8bbe\u60a8\u5728\u8bbe\u7f6e\u7ad9\u70b9\u65f6\u6267\u884c\u4e86\u535a\u5ba2\u914d\u65b9\uff0c\u8fd9\u5c06\u81ea\u52a8\u521b\u5efa\u9644\u52a0\u4e86FlowPart\u7684\u9875\u9762\u5185\u5bb9\u7c7b\u578b\u3002 when you have a fresh new installation, the first thing we need to do is enable the following features: \u5f53\u4f60\u6709\u4e00\u4e2a\u5168\u65b0\u7684\u5b89\u88c5\u65f6\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u505a\u7684\u662f\u542f\u7528\u4ee5\u4e0b\u529f\u80fd\uff1a Forms \u5f62\u5f0f * HTTP Workflow Activities HTTP\u5de5\u4f5c\u6d41\u6d3b\u52a8 * Email \u7535\u5b50\u90ae\u4ef6 * Next, create a new Page content item and give it a title of Contact Form . Click the Add Widget button to add the Form widget. \u63a5\u4e0b\u6765\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9875\u9762\u5185\u5bb9\u9879\uff0c\u5e76\u4e3a\u5176\u6807\u9898\u4e3a Contact Form \u3002\u5355\u51fb \u6dfb\u52a0\u7a97\u53e3\u5c0f\u90e8\u4ef6 \u6309\u94ae\u4ee5\u6dfb\u52a0 \u7a97\u4f53 \u7a97\u53e3\u5c0f\u90e8\u4ef6\u3002 give the Form a title of Contact and leave the Action field empty for now. \u7ed9\u8868\u5355\u4e00\u4e2a Contact \u6807\u9898\uff0c\u6682\u65f6\u5c06Action\u5b57\u6bb5\u7559\u7a7a\u3002 Add the following widgets to the Form widget: \u5c06\u4ee5\u4e0b\u5c0f\u90e8\u4ef6\u6dfb\u52a0\u5230\u7a97\u4f53\u5c0f\u90e8\u4ef6\uff1a Validation Summary widget \u9a8c\u8bc1\u6458\u8981\u5c0f\u90e8\u4ef6 * Input widget, Name = \"Name\", Type = \"Text\", Placeholder Text = \"Enter your name\" \u8f93\u5165\u5c0f\u90e8\u4ef6\uff0c\u540d\u79f0=\u201c\u540d\u79f0\u201d\uff0c\u7c7b\u578b=\u201c\u6587\u672c\u201d\uff0c\u5360\u4f4d\u7b26\u6587\u672c=\u201c\u8f93\u5165\u60a8\u7684\u59d3\u540d\u201d * Input widget, Name = \"Email\", Type = \"Email\", Placeholder Text = \"Enter your email address\" \u8f93\u5165\u5c0f\u90e8\u4ef6\uff0c\u540d\u79f0=\u201c\u7535\u5b50\u90ae\u4ef6\u201d\uff0c\u7c7b\u578b=\u201c\u7535\u5b50\u90ae\u4ef6\u201d\uff0c\u5360\u4f4d\u7b26\u6587\u672c=\u201c\u8f93\u5165\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u201d * Textarea widget, Name = \"Message\", Placeholder Text = \"Enter your message\" Textarea\u5c0f\u90e8\u4ef6\uff0cName =\u201cMessage\u201d\uff0c\u5360\u4f4d\u7b26Text =\u201c\u8f93\u5165\u60a8\u7684\u6d88\u606f\u201d * NoCaptcha widget (we'll configure the settings momentarily) NoCaptcha\u5c0f\u90e8\u4ef6\uff08\u6211\u4eec\u5c06\u6682\u65f6\u914d\u7f6e\u8bbe\u7f6e\uff09 * Button widget, Text = \"Submit!\", Type = \"Submit\" Button widget\uff0cText =\u201cSubmit\uff01\u201d\uff0cType =\u201cSubmit\u201d *","title":"\u521b\u5efa\u8054\u7cfb\u8868\u5355"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#configuring-nocaptcha","text":"","title":"Configuring NoCaptcha"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#nocaptcha","text":"When adding the NoCaptcha widget, a message was displayed that the NoCaptcha settings need to be configured before it will be displayed on the form. Let's do that right away. \u6dfb\u52a0NoCaptcha\u5c0f\u90e8\u4ef6\u65f6\uff0c\u4f1a\u663e\u793a\u4e00\u6761\u6d88\u606f\uff0c\u8bf4\u660e\u5728\u8868\u5355\u4e0a\u663e\u793a\u4e4b\u524d\u9700\u8981\u914d\u7f6eNoCaptcha\u8bbe\u7f6e\u3002\u8ba9\u6211\u4eec\u9a6c\u4e0a\u505a\u3002 Click on the NoCaptcha Settings link that is displayed within the message. Alternatively, go to Configuration -> Settings -> Forms . \u5355\u51fb\u6d88\u606f\u4e2d\u663e\u793a\u7684 NoCaptcha Settings \u94fe\u63a5\u3002\u6216\u8005\uff0c\u8f6c\u5230 \u914d\u7f6e - > \u8bbe\u7f6e - > \u8868\u5355 \u3002 The Forms settings shows two fields: SiteKey and Site Secret . You can get these values for free from https://developers.google.com/recaptcha/ . The widget uses reCaptcha V2 , so make sure to create Site Key and Site Secret for that version. \u8868\u5355\u8bbe\u7f6e\u663e\u793a\u4e24\u4e2a\u5b57\u6bb5\uff1a SiteKey \u548c Site Secret \u3002\u60a8\u53ef\u4ee5\u4ece[https://developers.google.com/recaptcha/](https://developers.google.com/recaptcha/\uff09\u514d\u8d39\u83b7\u53d6\u8fd9\u4e9b\u503c\u3002\u5c0f\u90e8\u4ef6\u4f7f\u7528 reCaptcha V2 \uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd\u4e3a\u8be5\u7248\u672c\u521b\u5efa\u7ad9\u70b9\u5bc6\u94a5\u548c\u7ad9\u70b9\u5bc6\u94a5\u3002 Once you have generated a Site Key and Site Secret with Google, copy & paste those values in the SiteKey and Site Secret fields, repsectively, and click the Save button. \u4f7f\u7528Google\u751f\u6210\u7ad9\u70b9\u5bc6\u94a5\u548c\u7ad9\u70b9\u5bc6\u94a5\u540e\uff0c\u5c06\u8fd9\u4e9b\u503c\u590d\u5236\u5e76\u7c98\u8d34\u5230SiteKey\u548cSite Secret\u5b57\u6bb5\u4e2d\uff0c\u7136\u540e\u5355\u51fb\u201c\u4fdd\u5b58\u201d\u6309\u94ae\u3002 The final form configuration should look something like this: \u6700\u7ec8\u7684\u8868\u5355\u914d\u7f6e\u5e94\u5982\u4e0b\u6240\u793a\uff1a And on the front-end, it will look like this: \u5728\u524d\u7aef\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a","title":"\u914d\u7f6eNoCaptcha"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#create-the-contact-form-workflow","text":"","title":"Create the Contact Form Workflow"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_6","text":"In order to validate the form input and send an email, we will create a workflow. \u4e3a\u4e86\u9a8c\u8bc1\u8868\u5355\u8f93\u5165\u5e76\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u3002 From the admin menu, click the Workflows menu item. Next, click on Create Workflow Type . \u4ece\u7ba1\u7406\u83dc\u5355\u4e2d\uff0c\u5355\u51fb \u5de5\u4f5c\u6d41\u7a0b \u83dc\u5355\u9879\u3002\u63a5\u4e0b\u6765\uff0c\u5355\u51fb \u521b\u5efa\u5de5\u4f5c\u6d41\u7a0b\u7c7b\u578b \u3002 We're now asked to provide a name for the workflow. Enter \"Contact Form Workflow\", leave the other options as-is, and click Save. When you do, you will be redirected to the Workflow Editor, which is where we'll implement the Contact Form submission logic. \u6211\u4eec\u73b0\u5728\u8981\u6c42\u63d0\u4f9b\u5de5\u4f5c\u6d41\u7a0b\u7684\u540d\u79f0\u3002\u8f93\u5165\u201c\u8054\u7cfb\u8868\u5355\u5de5\u4f5c\u6d41\u7a0b\u201d\uff0c\u4fdd\u7559\u5176\u4ed6\u9009\u9879\uff0c\u7136\u540e\u5355\u51fb\u201c\u4fdd\u5b58\u201d\u3002\u5f53\u60a8\u8fd9\u6837\u505a\u65f6\uff0c\u60a8\u5c06\u88ab\u91cd\u5b9a\u5411\u5230\u5de5\u4f5c\u6d41\u7a0b\u7f16\u8f91\u5668\uff0c\u8fd9\u662f\u6211\u4eec\u5c06\u5b9e\u73b0\u8054\u7cfb\u8868\u5355\u63d0\u4ea4\u903b\u8f91\u7684\u5730\u65b9\u3002","title":"\u521b\u5efa\u8054\u7cfb\u8868\u5355\u5de5\u4f5c\u6d41\u7a0b"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#adding-the-http-request-event","text":"","title":"Adding the Http Request Event"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#http","text":"Click on the Add Event button and look for the activity named HTTP Request . \u5355\u51fbAdd Event\u6309\u94ae\uff0c\u67e5\u627e\u540d\u4e3a HTTP Request \u7684\u6d3b\u52a8\u3002 For the Title, enter \"Contact Form Submitted\", and change the HTTP Method selection to POST . \u5bf9\u4e8e\u6807\u9898\uff0c\u8f93\u5165\u201c\u63d0\u4ea4\u7684\u8054\u7cfb\u8868\u5355\u201d\uff0c\u5e76\u5c06 HTTP\u65b9\u6cd5 \u9009\u9879\u66f4\u6539\u4e3a POST \u3002 Copy the generated URL (without the scheme, host name and port number) to the clipboard, because we will need it to update the form we created. \u5c06\u751f\u6210\u7684URL\uff08\u6ca1\u6709\u65b9\u6848\uff0c\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u53f7\uff09\u590d\u5236\u5230\u526a\u8d34\u677f\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5b83\u6765\u66f4\u65b0\u6211\u4eec\u521b\u5efa\u7684\u8868\u5355\u3002 Click Save to return to the workflow editor. \u5355\u51fb\u201c\u4fdd\u5b58\u201d\u8fd4\u56de\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u3002 Back on the workflow editor, we have now a single activity. Single-click this activity and click on the left-most icon to turn this activity into the starting activity. \u56de\u5230\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\uff0c\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u6d3b\u52a8\u3002\u5355\u51fb\u6b64\u6d3b\u52a8\uff0c\u7136\u540e\u5355\u51fb\u6700\u5de6\u4fa7\u7684\u56fe\u6807\u5c06\u6b64\u6d3b\u52a8\u8f6c\u6362\u4e3a\u542f\u52a8\u6d3b\u52a8\u3002","title":"\u6dfb\u52a0Http\u8bf7\u6c42\u4e8b\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#adding-the-fork-activity","text":"","title":"Adding the Fork Activity"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#fork","text":"There are various aspects of the form that we need to validate: we want to make sure the user entered a value for the Name , Email and Message fields, and we want to make sure the captcha is valid. \u6211\u4eec\u9700\u8981\u9a8c\u8bc1\u8868\u5355\u7684\u5404\u4e2a\u65b9\u9762\uff1a\u6211\u4eec\u8981\u786e\u4fdd\u7528\u6237\u8f93\u5165 Name \uff0c Email \u548c Message \u5b57\u6bb5\u7684\u503c\uff0c\u6211\u4eec\u5e0c\u671b\u786e\u4fdd \u9a8c\u8bc1\u7801 \u6709\u6548\u3002 Although we could perform each field validation sequentially (i.e. one at a time), we are going to do it in parallel. The advantage of doing so is that we can perform form field validation without having to check the result of each validation immediately. Instead, we can simply check the ModelState.IsValid property after all form fields have been validated. This keeps the workflow simplified, and works similar to when you would perform this validation from code. \u867d\u7136\u6211\u4eec\u53ef\u4ee5\u987a\u5e8f\u6267\u884c\u6bcf\u4e2a\u5b57\u6bb5\u9a8c\u8bc1\uff08\u5373\u4e00\u6b21\u4e00\u4e2a\uff09\uff0c\u4f46\u6211\u4eec\u5c06\u5e76\u884c\u6267\u884c\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u8868\u5355\u5b57\u6bb5\u9a8c\u8bc1\uff0c\u800c\u65e0\u9700\u7acb\u5373\u68c0\u67e5\u6bcf\u4e2a\u9a8c\u8bc1\u7684\u7ed3\u679c\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9a8c\u8bc1\u6240\u6709\u8868\u5355\u5b57\u6bb5\u540e\u68c0\u67e5ModelState.IsValid\u5c5e\u6027\u3002\u8fd9\u4f7f\u5de5\u4f5c\u6d41\u7a0b\u7b80\u5316\uff0c\u5e76\u4e14\u4e0e\u4ece\u4ee3\u7801\u6267\u884c\u6b64\u9a8c\u8bc1\u65f6\u7684\u5de5\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u3002 To execute branches of execution in parallel, we need to add the Fork activity, so go ahead and click the Add Task button and look for the Fork activity. \u8981\u5e76\u884c\u6267\u884c\u6267\u884c\u5206\u652f\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0 Fork \u6d3b\u52a8\uff0c\u56e0\u6b64\u8bf7\u7ee7\u7eed\u5e76\u5355\u51fbAdd Task\u6309\u94ae\u5e76\u67e5\u627eFork\u6d3b\u52a8\u3002 In the Fork activity editor, enter \"Validate Form Fields\" as the Title, and enter the following outcomes: \"Validate Name, Validate Email, Validate Message, Validate Captcha\" . \u5728Fork\u6d3b\u52a8\u7f16\u8f91\u5668\u4e2d\uff0c\u8f93\u5165\u201c\u9a8c\u8bc1\u8868\u5355\u5b57\u6bb5\u201d\u4f5c\u4e3a\u6807\u9898\uff0c\u5e76\u8f93\u5165\u4ee5\u4e0b\u7ed3\u679c\uff1a`\u201c\u9a8c\u8bc1\u540d\u79f0\uff0c\u9a8c\u8bc1\u7535\u5b50\u90ae\u4ef6\uff0c\u9a8c\u8bc1\u6d88\u606f\uff0c\u9a8c\u8bc1\u9a8c\u8bc1\u7801\u201d\u3002 Click on Save to save the changes and to be returned to the workflow editor. \u5355\u51fb\u201c\u4fdd\u5b58\u201d\u4ee5\u4fdd\u5b58\u66f4\u6539\u5e76\u8fd4\u56de\u5230\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u3002 Connect the Http Request activity to the Fork activity you just added. \u5c06 Http Request \u6d3b\u52a8\u8fde\u63a5\u5230\u521a\u521a\u6dfb\u52a0\u7684 Fork \u6d3b\u52a8\u3002","title":"\u6dfb\u52a0Fork\u6d3b\u52a8"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#adding-name-email-and-message-validation","text":"","title":"Adding Name, Email and Message Validation"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_7","text":"Next, we will do the following for each of Name, Email and Message: \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u9488\u5bf9\u540d\u79f0\uff0c\u7535\u5b50\u90ae\u4ef6\u548c\u6d88\u606f\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a Add the Validate Form Field activity. Enter a title of \"Validate Name\" for the Name field, \"Validate Email\" for the Email field and \"Validate Message\" for the Message field. \u6dfb\u52a0 \u9a8c\u8bc1\u8868\u5355\u5b57\u6bb5 \u6d3b\u52a8\u3002\u4e3a\u540d\u79f0\u5b57\u6bb5\u8f93\u5165\u201c\u9a8c\u8bc1\u540d\u79f0\u201d\u7684\u6807\u9898\uff0c\u4e3a\u7535\u5b50\u90ae\u4ef6\u5b57\u6bb5\u8f93\u5165\u201c\u9a8c\u8bc1\u7535\u5b50\u90ae\u4ef6\u201d\uff0c\u4e3a\u201c\u6d88\u606f\u201d\u5b57\u6bb5\u8f93\u5165\u201c\u9a8c\u8bc1\u6d88\u606f\u201d\u3002 Enter the appropriate field name for the Field Name field (\"Name\", \"Email\" and \"Message\", respectively). \u4e3a \u5b57\u6bb5\u540d\u79f0 \u5b57\u6bb5\u8f93\u5165\u76f8\u5e94\u7684\u5b57\u6bb5\u540d\u79f0\uff08\u5206\u522b\u4e3a\u201c\u540d\u79f0\u201d\uff0c\u201c\u7535\u5b50\u90ae\u4ef6\u201d\u548c\u201c\u6d88\u606f\u201d\uff09\u3002 In the Error Message field, enter \"<field name here> is required\" . \u5728 \u9519\u8bef\u6d88\u606f \u5b57\u6bb5\u4e2d\uff0c\u8f93\u5165\u201c\u201d is\u201c\u201d\u3002 The Validate Form Field activity in the Beta 2 version of the Forms module only supports checking if the form field is empty or not. The RC version will have support for other kinds of validation, including the ability to provide custom vlidation. Beta\u6a21\u578b\u7684Forms\u6a21\u5757\u4e2d\u7684 Validate Form Field \u6d3b\u52a8\u4ec5\u652f\u6301\u68c0\u67e5\u8868\u5355\u5b57\u6bb5\u662f\u5426\u4e3a\u7a7a\u3002 RC\u7248\u672c\u5c06\u652f\u6301\u5176\u4ed6\u7c7b\u578b\u7684\u9a8c\u8bc1\uff0c\u5305\u62ec\u63d0\u4f9b\u81ea\u5b9a\u4e49vlidation\u7684\u529f\u80fd\u3002","title":"\u6dfb\u52a0\u540d\u79f0\uff0c\u7535\u5b50\u90ae\u4ef6\u548c\u6d88\u606f\u9a8c\u8bc1"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#adding-nocaptcha","text":"","title":"Adding NoCaptcha"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#nocaptcha_1","text":"To add the NoCaptcha validation activity, click Add Task and find the Validate NoCaptcha . Since there is nothing to configure on this activity, you'll be redirected straight to the workflow editor when you click Add. \u8981\u6dfb\u52a0NoCaptcha\u9a8c\u8bc1\u6d3b\u52a8\uff0c\u8bf7\u5355\u51fb\u201c\u6dfb\u52a0\u4efb\u52a1\u201d\uff0c\u7136\u540e\u627e\u5230 \u9a8c\u8bc1NoCaptcha \u3002\u7531\u4e8e\u6b64\u6d3b\u52a8\u65e0\u9700\u914d\u7f6e\u4efb\u4f55\u5185\u5bb9\uff0c\u56e0\u6b64\u5355\u51fb\u201c\u6dfb\u52a0\u201d\u65f6\uff0c\u60a8\u5c06\u76f4\u63a5\u91cd\u5b9a\u5411\u5230\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u3002 Once you added all 4 validation tasks, connect the Fork activity to the validation activities using the appropriate outcomes. For example, connect the \"Validate Name\" outcome of the Fork activity to the \"Validate Name\" activity. \u6dfb\u52a0\u5b8c\u6240\u67094\u4e2a\u9a8c\u8bc1\u4efb\u52a1\u540e\uff0c\u4f7f\u7528\u9002\u5f53\u7684\u7ed3\u679c\u5c06Fork\u6d3b\u52a8\u8fde\u63a5\u5230\u9a8c\u8bc1\u6d3b\u52a8\u3002\u4f8b\u5982\uff0c\u5c06Fork\u6d3b\u52a8\u7684\u201cValidate Name\u201d\u7ed3\u679c\u8fde\u63a5\u5230\u201cValidate Name\u201d\u6d3b\u52a8\u3002 If the specified form field is empty, the Validate Form Field activity will add a model validation error to the ModelState dictionary. The same goes for the Validate NoCaptcha activity if the captcha failed. This is useful, because we now only have to add a single check to see if there are any model validation errors. \u5982\u679c\u6307\u5b9a\u7684\u8868\u5355\u5b57\u6bb5\u4e3a\u7a7a\uff0c\u5219 Validate Form Field \u6d3b\u52a8\u5c06 \u6a21\u578b\u9a8c\u8bc1\u9519\u8bef\u6dfb\u52a0\u5230ModelState \u5b57\u5178\u3002\u5982\u679c\u9a8c\u8bc1\u7801\u5931\u8d25\uff0c Validate NoCaptcha \u6d3b\u52a8\u4e5f\u662f\u5982\u6b64\u3002\u8fd9\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u68c0\u67e5\u4ee5\u67e5\u770b\u662f\u5426\u5b58\u5728 any \u6a21\u578b\u9a8c\u8bc1\u9519\u8bef\u3002 Before we do that however, we first need to join the forked workflow execution back into a single flow. \u7136\u800c\uff0c\u5728\u6211\u4eec\u8fd9\u6837\u505a\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981 \u5c06\u5206\u53c9\u7684\u5de5\u4f5c\u6d41\u6267\u884c \u52a0\u5165\u5230\u5355\u4e2a\u6d41\u4e2d\u3002","title":"\u6dfb\u52a0NoCaptcha"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#adding-the-join-activity","text":"","title":"Adding the Join Activity"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_8","text":"The Join activity will merge the forked workflow back into a single flow of execution. There are two modes: Wait Any and Wait All . In our case, we need the Wait All mode, because we need all validation steps to finish before continuing. Join \u6d3b\u52a8\u5c06\u5206\u53c9\u7684\u5de5\u4f5c\u6d41\u7a0b\u5408\u5e76\u4e3a\u5355\u4e2a\u6267\u884c\u6d41\u7a0b\u3002\u6709\u4e24\u79cd\u6a21\u5f0f\uff1a \u7b49\u5f85\u4efb\u4f55 \u548c \u7b49\u5f85\u6240\u6709 \u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u8981 Wait All \u6a21\u5f0f\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5728\u7ee7\u7eed\u4e4b\u524d\u5b8c\u6210\u6240\u6709\u9a8c\u8bc1\u6b65\u9aa4\u3002 Go ahead and add the Join activity to the workflow, and make sure to connect the Done outcome of each validation task to the Join activity. The \"Done\" outcome will execute regardless of whether or not the form field validation step failed or not, which is exactly what we want. \u7ee7\u7eed\u5c06Join\u6d3b\u52a8\u6dfb\u52a0\u5230\u5de5\u4f5c\u6d41\u7a0b\u4e2d\uff0c\u5e76\u786e\u4fdd\u5c06\u6bcf\u4e2a\u9a8c\u8bc1\u4efb\u52a1*\u7684 Done \u7ed3\u679c\u8fde\u63a5\u5230Join\u6d3b\u52a8\u3002\u65e0\u8bba\u8868\u5355\u5b57\u6bb5\u9a8c\u8bc1\u6b65\u9aa4\u662f\u5426\u5931\u8d25\uff0c\u201c\u5b8c\u6210\u201d\u7ed3\u679c\u90fd\u5c06\u6267\u884c\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002","title":"\u6dfb\u52a0\u52a0\u5165\u6d3b\u52a8"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#adding-the-validate-form-activity","text":"","title":"Adding the Validate Form Activity"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_9","text":"The Validate Form activity will check if the ModelState is valid or not. If any validation errors occurred, it will return False, and True otherwise. Validate Form \u6d3b\u52a8\u5c06\u68c0\u67e5ModelState\u662f\u5426\u6709\u6548\u3002\u5982\u679c\u53d1\u751f\u4efb\u4f55\u9a8c\u8bc1\u9519\u8bef\uff0c\u5219\u8fd4\u56deFalse\uff0c\u5426\u5219\u8fd4\u56deTrue\u3002 Go ahead and add the Validate Form activity and connect it to the Join activity. \u7ee7\u7eed\u5e76\u6dfb\u52a0Validate Form\u6d3b\u52a8\u5e76\u5c06\u5176\u8fde\u63a5\u5230Join\u6d3b\u52a8\u3002 Next, we have to implement the two possible outcomes: Valid and Invalid . \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5fc5\u987b\u5b9e\u73b0\u4e24\u79cd\u53ef\u80fd\u7684\u7ed3\u679c\uff1a \u6709\u6548 \u548c \u65e0\u6548 \u3002 If the outcome is Invalid, we will redirect back to the form. Since the form contains a Validation Summary, it will display all validation errors. \u5982\u679c\u7ed3\u679c\u4e3a\u65e0\u6548\uff0c\u6211\u4eec\u5c06\u91cd\u5b9a\u5411\u56de\u8868\u5355\u3002\u7531\u4e8e\u8868\u5355\u5305\u542b\u9a8c\u8bc1\u6458\u8981\uff0c\u56e0\u6b64\u5b83\u5c06\u663e\u793a\u6240\u6709\u9a8c\u8bc1\u9519\u8bef\u3002 If the outcome is Valid, we want to send an email and redirect the user to a Thank You page. \u5982\u679c\u7ed3\u679c\u662f\u6709\u6548\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u5e76\u5c06\u7528\u6237\u91cd\u5b9a\u5411\u5230\u201c\u611f\u8c22\u60a8\u201d\u9875\u9762\u3002 Let's implement the Redirect first. \u8ba9\u6211\u4eec\u5148\u5b9e\u73b0\u91cd\u5b9a\u5411\u3002","title":"\u6dfb\u52a0\u9a8c\u8bc1\u8868\u5355\u6d3b\u52a8"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#adding-the-first-redirect-activity","text":"","title":"Adding the First Redirect Activity"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_10","text":"Click the Add Task button and locate the Redirect activity. Use \"Display Form Errors\" for the title, and enter the relative path to the Contact Form content item ( /contact-form if you used the same title as I did). \u5355\u51fb\u201c\u6dfb\u52a0\u4efb\u52a1\u201d\u6309\u94ae\uff0c\u7136\u540e\u627e\u5230\u201c\u91cd\u5b9a\u5411\u201d\u6d3b\u52a8\u3002\u4f7f\u7528\u201c\u663e\u793a\u8868\u200b\u200b\u5355\u9519\u8bef\u201d\u4f5c\u4e3a\u6807\u9898\uff0c\u5e76\u8f93\u5165\u8054\u7cfb\u8868\u5355\u5185\u5bb9\u9879\u7684\u76f8\u5bf9\u8def\u5f84\uff08\u5982\u679c\u60a8\u4f7f\u7528\u4e0e\u6211\u76f8\u540c\u7684\u6807\u9898\uff0c\u5219\u8f93\u5165 / contact-form \uff09\u3002 Click Save and connect the Invalid outcome of the Validate Form activity to the Redirect activity you just added. \u5355\u51fb\u201c\u4fdd\u5b58\u201d\uff0c\u5c06\u201c\u9a8c\u8bc1\u8868\u5355\u201d\u6d3b\u52a8\u7684\u201c\u65e0\u6548\u7ed3\u679c\u201d\u8fde\u63a5\u5230\u521a\u521a\u6dfb\u52a0\u7684\u201c\u91cd\u5b9a\u5411\u201d\u6d3b\u52a8\u3002","title":"\u6dfb\u52a0\u7b2c\u4e00\u4e2a\u91cd\u5b9a\u5411\u6d3b\u52a8"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#adding-the-email-activity","text":"","title":"Adding the Email Activity"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_11","text":"Click the Add Task button and locate the Send Email activity. Enter the following values: \u5355\u51fb\u201c\u6dfb\u52a0\u4efb\u52a1\u201d\u6309\u94ae\uff0c\u627e\u5230\u201c\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u201d\u6d3b\u52a8\u3002\u8f93\u5165\u4ee5\u4e0b\u503c\uff1a Title: Send Email to Site Admin \u6807\u9898\uff1a`\u5411\u7f51\u7ad9\u7ba1\u7406\u5458\u53d1\u9001\u7535\u5b50\u90ae\u4ef6' * Sender: (leave empty) \u53d1\u4ef6\u4eba:(\u7559\u7a7a\uff09 * Recipients: admin@orchardcore.io \u6536\u4ef6\u4eba\uff1a admin @ orchardcore.io * Subject: Contact Form submitted by {{ Request.Form.Name }}! \u4e3b\u9898\uff1a {{Request.Form.Name}}\u63d0\u4ea4\u7684\u8054\u7cfb\u8868\u683c\uff01 * Body: \u8eab\u4f53\uff1a * <p>The following information was submitted:<p/> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><p>\u63d0\u4ea4\u4e86\u4ee5\u4e0b\u4fe1\u606f\uff1a<p /></font> <p>Name: {{ Request.Form.Name }}</p> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><p>\u59d3\u540d\uff1a{{Request.Form.Name}} </ p></font> <p>Email: {{ Request.Form.Email }}</p> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><p>\u7535\u5b50\u90ae\u4ef6\uff1a{{Request.Form.Email}} </ p></font> <p>Message: {{ Request.Form.Message }}</p> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><p>\u6d88\u606f\uff1a{{Request.Form.Message}} </ p></font>","title":"\u6dfb\u52a0\u7535\u5b50\u90ae\u4ef6\u6d3b\u52a8"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#configuring-smtp","text":"","title":"Configuring SMTP"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#smtp","text":"In order to try out sending emails, you will need to configure the SMTP settings. You can do so via Configuration -> Settings -> Smtp . For development purposes, I am a big fan of Smtp4Dev , which makes it super easy to try out sending emails without actually sending them . It's basically an SMTP host that intercepts emails being sent that you can then inspect. \u8981\u5c1d\u8bd5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u60a8\u9700\u8981\u914d\u7f6eSMTP\u8bbe\u7f6e\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7 Configuration * - > * Settings * - > * Smtp \u6765\u5b9e\u73b0\u3002\u51fa\u4e8e\u5f00\u53d1\u76ee\u7684\uff0c\u6211\u662f[Smtp4Dev]\uff08https://github.com/rnwood/smtp4dev\uff09\u7684\u5fe0\u5b9e\u7c89\u4e1d\uff0c\u8fd9\u4f7f\u5f97\u5c1d\u8bd5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6 \u975e\u5e38\u5bb9\u6613\uff0c\u800c\u65e0\u9700\u5b9e\u9645\u53d1\u9001 \u3002\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2aSMTP\u4e3b\u673a\u62e6\u622a\u53d1\u9001\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u68c0\u67e5\u3002 When configuring the SMTP settings in Orchard, make sure to provide the Sender email address , which will be used by default (remember, we didn't specify a Sender in the Send Email activity). Enter system@orchardcore.io or any other valid email address you like. \u5728Orchard\u4e2d\u914d\u7f6eSMTP\u8bbe\u7f6e\u65f6\uff0c\u8bf7\u786e\u4fdd\u63d0\u4f9b \u53d1\u4ef6\u4eba\u7535\u5b50\u90ae\u4ef6\u5730\u5740 \uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u4f7f\u7528\u8be5\u90ae\u4ef6\u5730\u5740**\uff08\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u672a\u5728\u201c\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u201d\u6d3b\u52a8\u4e2d\u6307\u5b9a\u53d1\u4ef6\u4eba\uff09\u3002\u8f93\u5165 system @ orchardcore.io \u6216\u60a8\u559c\u6b22\u7684\u4efb\u4f55\u5176\u4ed6\u6709\u6548\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002 If you're using Smtp4Dev, make sure to enter localhost in the Host name field, and the configured port number. \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fSmtp4Dev\uff0c\u8bf7\u786e\u4fdd\u5728\u4e3b\u673a\u540d\u5b57\u6bb5\u4e2d\u8f93\u5165 localhost \u548c\u914d\u7f6e\u7684\u7aef\u53e3\u53f7\u3002","title":"\u914d\u7f6eSMTP"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#adding-the-second-redirect-activity","text":"","title":"Adding the Second Redirect Activity"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_12","text":"After the email is sent, we want to redirect the user to a \"Thank You\" page. Go ahead and add a Redirect activity, using Display Thank You Page as the title and /thank-you as the URL. Make sure to connect the Done outcome of the Send Email activity to this new Redirect activity. \u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u540e\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7528\u6237\u91cd\u5b9a\u5411\u5230\u201c\u8c22\u8c22\u201d\u9875\u9762\u3002\u7ee7\u7eed\u6dfb\u52a0\u4e00\u4e2aRedirect\u6d3b\u52a8\uff0c\u4f7f\u7528 Display Thank You Page \u4f5c\u4e3a\u6807\u9898\uff0c\u4f7f\u7528 / thank-you \u4f5c\u4e3aURL\u3002\u786e\u4fdd\u5c06\u201c\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u201d\u6d3b\u52a8\u7684 \u5b8c\u6210 \u7ed3\u679c\u8fde\u63a5\u5230\u6b64\u65b0\u7684\u91cd\u5b9a\u5411\u6d3b\u52a8\u3002","title":"\u6dfb\u52a0\u7b2c\u4e8c\u4e2a\u91cd\u5b9a\u5411\u6d3b\u52a8"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#adding-a-thank-you-page","text":"","title":"Adding a Thank You Page"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_13","text":"Create a new Page content item with a title of Thank You! , and make sure its Permalink is thank-you after saving. Add any widgets to this page that you like. For example, add the Paragraph widget with the following text: Thank you for reaching out! We'll get back to you soon. \u521b\u5efa\u4e00\u4e2a\u6807\u9898\u4e3a\u201c\u8c22\u8c22\uff01\u201d\u7684\u65b0\u9875\u9762\u5185\u5bb9\u9879\uff0c\u5e76\u5728\u4fdd\u5b58\u540e\u786e\u4fdd\u5176\u6c38\u4e45\u94fe\u63a5\u4e3a\u201c\u8c22\u8c22\u201d\u3002\u5c06\u4efb\u4f55\u5c0f\u90e8\u4ef6\u6dfb\u52a0\u5230\u60a8\u559c\u6b22\u7684\u9875\u9762\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u4ee5\u4e0b\u6587\u672c\u6dfb\u52a0 Paragraph \u5c0f\u90e8\u4ef6\uff1a`\u8c22\u8c22\u4f60\u4f38\u51fa\u63f4\u624b\uff01\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u56de\u590d\u4f60","title":"\u6dfb\u52a0\u4e00\u4e2a\u611f\u8c22\u9875\u9762"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#updating-the-contact-form-widget","text":"","title":"Updating the Contact Form widget"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_14","text":"Now that our workflow is done, we need to update the Contact Form widget with the Workflow URL that was generated for us in the Http Request activity. Unless you have that URL still on your clipboard, go back to the first activity on the workflow, double-click it to get to its activity editor, and copy the URL (without the scheme, host and port number; just the path). \u73b0\u5728\u6211\u4eec\u7684\u5de5\u4f5c\u6d41\u7a0b\u5df2\u7ecf\u5b8c\u6210\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5728 Http Request \u6d3b\u52a8\u4e2d\u4e3a\u6211\u4eec\u751f\u6210\u7684\u5de5\u4f5c\u6d41URL\u66f4\u65b0Contact Form\u5c0f\u90e8\u4ef6\u3002\u9664\u975e\u60a8\u7684\u526a\u8d34\u677f\u4e0a\u4ecd\u6709\u8be5URL\uff0c\u5426\u5219\u8bf7\u8fd4\u56de\u5de5\u4f5c\u6d41\u4e0a\u7684\u7b2c\u4e00\u4e2a\u6d3b\u52a8\uff0c\u53cc\u51fb\u5b83\u4ee5\u8fdb\u5165\u5176\u6d3b\u52a8\u7f16\u8f91\u5668\uff0c\u7136\u540e\u590d\u5236URL\uff08\u4e0d\u5305\u62ec\u65b9\u6848\uff0c\u4e3b\u673a\u548c\u7aef\u53e3\u53f7;\u53ea\u6709\u8def\u5f84\uff09\u3002 Go back to the Contact Form page content item, expand the Contact Form widget and paste in the URL into the Action field and save your changes. \u8fd4\u56de\u201c\u8054\u7cfb\u8868\u5355\u201d\u9875\u9762\u5185\u5bb9\u9879\uff0c\u5c55\u5f00\u201c\u8054\u7cfb\u8868\u5355\u201d\u7a97\u53e3\u5c0f\u90e8\u4ef6\u5e76\u5c06URL\u7c98\u8d34\u5230 \u64cd\u4f5c \u5b57\u6bb5\u4e2d\u5e76\u4fdd\u5b58\u66f4\u6539\u3002","title":"\u66f4\u65b0\u201c\u8054\u7cfb\u8868\u5355\u201d\u5c0f\u7ec4\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#try-it-out","text":"","title":"Try it out!"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_15","text":"Go ahead and try it out. Navigate to https://localhost:44300/contact-form and fill out the form. If all went well, you should see an email coming in and be redirected to the Thank You page. \u7ee7\u7eed\u5c1d\u8bd5\u4e00\u4e0b\u3002\u5bfc\u822a\u5230https\uff1a// localhost\uff1a44300 / contact-form\u5e76\u586b\u5199\u8868\u5355\u3002\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u5e76\u88ab\u91cd\u5b9a\u5411\u5230Thank You\u9875\u9762\u3002 If you leave any field empty or do not pass the captcha, you should be redirected to the Contact Form page and see the validation errors. \u5982\u679c\u60a8\u5c06\u4efb\u4f55\u5b57\u6bb5\u7559\u7a7a\u6216\u672a\u901a\u8fc7\u9a8c\u8bc1\u7801\uff0c\u5219\u5e94\u5c06\u60a8\u91cd\u5b9a\u5411\u5230\u201c\u8054\u7cfb\u8868\u5355\u201d\u9875\u9762\u5e76\u67e5\u770b\u9a8c\u8bc1\u9519\u8bef\u3002","title":"\u8bd5\u8bd5\u770b\uff01"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#fixing-the-lost-field-values-isue","text":"","title":"Fixing the Lost Field Values Isue"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#isue","text":"There's one issue with the form that I left out intentionally to the very last. To see the problem, try entering some values in the form, except for one (e.g. leave Email empty, or do not check the captcha checkbox). When you submit the form, notice that the values you entered have disappeared. \u8fd9\u4e2a\u8868\u683c\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u6545\u610f\u6392\u5230\u6700\u540e\u3002\u8981\u67e5\u770b\u95ee\u9898\uff0c\u8bf7\u5c1d\u8bd5\u5728\u8868\u5355\u4e2d\u8f93\u5165\u4e00\u4e9b\u503c\uff08\u4e00\u4e2a\u9664\u5916\uff09\uff08\u4f8b\u5982\uff0c\u5c06\u7535\u5b50\u90ae\u4ef6\u7559\u7a7a\uff0c\u6216\u8005\u4e0d\u68c0\u67e5\u9a8c\u8bc1\u7801\u590d\u9009\u6846\uff09\u3002\u63d0\u4ea4\u8868\u5355\u65f6\uff0c\u8bf7\u6ce8\u610f\u60a8\u8f93\u5165\u7684\u503c\u5df2\u6d88\u5931\u3002 Normally what happens when you submit a form to an MVC controller, the model binder will bind the fields to some view model. During the model binding phase, MVC will add model state entries. However, we are not invoking model binding anywhere. We only add model validation errors when we identify a missing value. \u901a\u5e38\uff0c\u5f53\u60a8\u5c06\u8868\u5355\u63d0\u4ea4\u7ed9MVC\u63a7\u5236\u5668\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u6a21\u578b\u7ed1\u5b9a\u5668\u4f1a\u5c06\u5b57\u6bb5\u7ed1\u5b9a\u5230\u67d0\u4e2a\u89c6\u56fe\u6a21\u578b\u3002\u5728\u6a21\u578b\u7ed1\u5b9a\u9636\u6bb5\uff0cMVC\u5c06\u6dfb\u52a0\u6a21\u578b\u72b6\u6001\u6761\u76ee\u3002\u4f46\u662f\uff0c\u6211\u4eec\u4e0d\u4f1a\u5728\u4efb\u4f55\u5730\u65b9\u8c03\u7528\u6a21\u578b\u7ed1\u5b9a\u3002\u6211\u4eec\u53ea\u5728\u8bc6\u522b\u7f3a\u5931\u503c\u65f6\u6dfb\u52a0\u6a21\u578b\u9a8c\u8bc1\u9519\u8bef\u3002 To fix this, we must add the Bind Form Model State activity to the workflow, and connect it in between the first activity (Http Request) and the second activity (the Fork activity). This will cause all Form fields to be copied into ModelState, which is used when displaying the form again. \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5fc5\u987b\u5c06 Bind Form Model State \u6d3b\u52a8\u6dfb\u52a0\u5230\u5de5\u4f5c\u6d41\u7a0b\u4e2d\uff0c\u5e76\u5c06\u5176\u8fde\u63a5\u5230\u7b2c\u4e00\u4e2a\u6d3b\u52a8\uff08Http Request\uff09\u548c\u7b2c\u4e8c\u4e2a\u6d3b\u52a8\uff08Fork\u6d3b\u52a8\uff09\u4e4b\u95f4\u3002\u8fd9\u5c06\u5bfc\u81f4\u6240\u6709\u8868\u5355\u5b57\u6bb5\u90fd\u590d\u5236\u5230ModelState\u4e2d\uff0c\u8fd9\u5728\u518d\u6b21\u663e\u793a\u8868\u5355\u65f6\u4f7f\u7528\u3002 The final workflow should look like this: \u6700\u7ec8\u7684\u5de5\u4f5c\u6d41\u7a0b\u5e94\u5982\u4e0b\u6240\u793a\uff1a","title":"\u4fee\u590d\u4e22\u5931\u7684\u5b57\u6bb5\u503cIsue"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#future-improvements","text":"","title":"Future Improvements"},{"location":"OrchardCore.Modules/OrchardCore.Forms/#_16","text":"Implementing a workflow that handles form submissions is easy, but the workflow becomes big quite quickly as soon as you start adding validation logic to the mix. In the next version of the Forms module, there will be an easier way to validate Form submissions in combination with the Form widget. The Form widget will contain all of the validation settings, and there will be a single workflow activity that validates the submitted values against those settings. \u5b9e\u73b0\u5904\u7406\u8868\u5355\u63d0\u4ea4\u7684\u5de5\u4f5c\u6d41\u5f88\u5bb9\u6613\uff0c\u4f46\u53ea\u8981\u60a8\u5f00\u59cb\u5728\u6df7\u5408\u4e2d\u6dfb\u52a0\u9a8c\u8bc1\u903b\u8f91\uff0c\u5de5\u4f5c\u6d41\u5c31\u4f1a\u5f88\u5feb\u53d8\u5927\u3002\u5728Forms\u6a21\u5757\u7684\u4e0b\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u5c06\u6709\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u7ed3\u5408Form\u5c0f\u90e8\u4ef6\u9a8c\u8bc1Form\u63d0\u4ea4\u3002\u8868\u5355\u7a97\u53e3\u5c0f\u90e8\u4ef6\u5c06\u5305\u542b\u6240\u6709\u9a8c\u8bc1\u8bbe\u7f6e\uff0c\u5e76\u4e14\u5c06\u6709\u4e00\u4e2a\u5de5\u4f5c\u6d41\u6d3b\u52a8\u6839\u636e\u8fd9\u4e9b\u8bbe\u7f6e\u9a8c\u8bc1\u63d0\u4ea4\u7684\u503c\u3002 The low-level validation activities will remain part of the toolbox to support workflow validation for forms that are not built with the Form widget, but implemented as raw HTML for example. \u4f4e\u7ea7\u9a8c\u8bc1\u6d3b\u52a8\u5c06\u4ecd\u7136\u662f\u5de5\u5177\u7bb1\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u652f\u6301\u4e0d\u662f\u4f7f\u7528\u8868\u5355\u7a97\u53e3\u5c0f\u90e8\u4ef6\u6784\u5efa\u7684\u8868\u5355\u7684\u5de5\u4f5c\u6d41\u9a8c\u8bc1\uff0c\u800c\u662f\u5b9e\u73b0\u4e3a\u539f\u59cbHTML\u3002","title":"\u672a\u6765\u7684\u6539\u8fdb"},{"location":"OrchardCore.Modules/OrchardCore.Html/","text":"Body (OrchardCore.Html) \u8eab\u4f53\uff08OrchardCore.Html\uff09 Theming \u4e3b\u9898\u5316 Shapes \u5f62\u72b6 The following shapes are rendered when the HtmlBodyPart is attached to a content type \u5f53 HtmlBodyPart \u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u65f6\uff0c\u5c06\u5448\u73b0\u4ee5\u4e0b\u5f62\u72b6 | Name | Display Type | Default Location | Model Type | |\u540d\u79f0|\u663e\u793a\u7c7b\u578b|\u9ed8\u8ba4\u4f4d\u7f6e|\u578b\u53f7\u7c7b\u578b| | ------| ------------ |----------------- | ---------- | | ------ | ------------ | ----------------- | ---------- | | HtmlBodyPart | Detail | Content:5 | HtmlBodyPartViewModel | | HtmlBodyPart | \u7ec6\u8282 | \u5185\u5bb9\uff1a5 | HtmlBodyPartViewModel | | HtmlBodyPart | Summary | Content:10 | HtmlBodyPartViewModel | | HtmlBodyPart | \u6458\u8981 | \u5185\u5bb9\uff1a10 | HtmlBodyPartViewModel | HtmlBodyPartViewModel HtmlBodyPartViewModel The following properties are available on the HtmlBodyPartViewModel class. HtmlBodyPartViewModel \u7c7b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Type | Description | |\u8d22\u4ea7|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Body | string | The content that was edited. It might contain tokens. | | \u8eab\u4f53 | string |\u5df2\u7f16\u8f91\u7684\u5185\u5bb9\u3002\u5b83\u53ef\u80fd\u5305\u542b\u4ee4\u724c\u3002 | | Html | string | The HTML content once all tokens have been processed | | Html | string |\u5904\u7406\u5b8c\u6240\u6709\u4ee4\u724c\u540e\u7684HTML\u5185\u5bb9| | ContentItem | ContentItem | The content item of the part | | ContentItem | ContentItem |\u90e8\u5206\u7684\u5185\u5bb9\u9879\u76ee | HtmlBodyPart | HtmlBodyPart | The HtmlBodyPart instance| | HtmlBodyPart | HtmlBodyPart | HtmlBodyPart \u5b9e\u4f8b| | TypePartSettings | HtmlBodyPartSettings | The settings of the part | | TypePartSettings | HtmlBodyPartSettings |\u90e8\u5206\u7684\u8bbe\u7f6e| HtmlBodyPart HtmlBodyPart The following properties are available on HtmlBodyPart HtmlBodyPart \u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027 | Name | Type | Description | |\u540d\u79f0|\u8f93\u5165|\u8bf4\u660e| | -----| ---- |------------ | | ----- | ---- | ------------ | | Body | string | The HTML content in the body. It can contain Liquid tags so using it directly might result in unexpected results. Prefer rendering the HtmlBodyPart shape instead | | \u8eab\u4f53 | string |\u6b63\u6587\u4e2d\u7684HTML\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u5305\u542bLiquid\u6807\u7b7e\uff0c\u56e0\u6b64\u76f4\u63a5\u4f7f\u7528\u5b83\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u7ed3\u679c\u3002\u66f4\u559c\u6b22\u6e32\u67d3 HtmlBodyPart \u5f62\u72b6 | Content | The raw content of the part | | \u5185\u5bb9 |\u90e8\u5206\u7684\u539f\u59cb\u5185\u5bb9| | ContentItem | The content item containing this part | | ContentItem |\u5305\u542b\u6b64\u90e8\u5206\u7684\u5185\u5bb9\u9879\u76ee Editors \u7f16\u8005 The HtmlBody Part editor can be different for each content type. In the HtmlBody Part settings of a __HtmlBody Part__\u7f16\u8f91\u5668\u5bf9\u4e8e\u6bcf\u79cd\u5185\u5bb9\u7c7b\u578b\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u3002\u5728__HtmlBody Part__\u8bbe\u7f6e\u4e2d content type, just select the one that needs to be used. \u5185\u5bb9\u7c7b\u578b\uff0c\u53ea\u9700\u9009\u62e9\u9700\u8981\u4f7f\u7528\u7684\u5185\u5bb9\u3002 There are two predefined editor names: \u6709\u4e24\u4e2a\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668\u540d\u79f0\uff1a Default is the editor that is used by default Default \u662f\u9ed8\u8ba4\u4f7f\u7528\u7684\u7f16\u8f91\u5668 Wysiwyg is the editor that provides a WYSIWYG experience Wysiwyg \u662f\u63d0\u4f9bWYSIWYG\u4f53\u9a8c\u7684\u7f16\u8f91\u5668 Custom Editors \u81ea\u5b9a\u4e49\u7f16\u8f91\u5668 Customizing the editor can mean to replace the predefined one with different experiences, or to provide \u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\u53ef\u80fd\u610f\u5473\u7740\u7528\u4e0d\u540c\u7684\u4f53\u9a8c\u66ff\u6362\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668\uff0c\u6216\u8005\u63d0\u4f9b new options for the user to choose from. \u7528\u6237\u53ef\u4f9b\u9009\u62e9\u7684\u65b0\u9009\u9879\u3002 To create a new custom editor, it is required to provide two shape templates, one to provide \u8981\u521b\u5efa\u65b0\u7684\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\uff0c\u9700\u8981\u63d0\u4f9b\u4e24\u4e2a\u5f62\u72b6\u6a21\u677f\uff0c\u4e00\u4e2a\u7528\u4e8e\u63d0\u4f9b the name of the editor (optional if you want to override an existing one), and a shape to \u7f16\u8f91\u5668\u7684\u540d\u79f0\uff08\u5982\u679c\u8981\u8986\u76d6\u73b0\u6709\u7f16\u8f91\u5668\uff0c\u5219\u4e3a\u53ef\u9009\u9879\uff09\u548c\u5f62\u72b6 render the actual HTML for the editor. \u5448\u73b0\u7f16\u8f91\u5668\u7684\u5b9e\u9645HTML\u3002 Declaration \u5ba3\u8a00 To declare a new editor, create a shape named HtmlBody_Option__{Name} where {Name} is a value \u8981\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u7f16\u8f91\u5668\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a HtmlBody_Option __ {Name} \u7684\u5f62\u72b6\uff0c\u5176\u4e2d {Name} \u662f\u4e00\u4e2a\u503c of your choosing. This will be represented by a file named HtmlBody-{Name}.Option.cshtml . \u4f60\u9009\u62e9\u7684\u3002\u8fd9\u5c06\u7531\u540d\u4e3a HtmlBody- {Name} .Option.cshtml \u7684\u6587\u4ef6\u8868\u793a\u3002 Sample content: \u793a\u4f8b\u5185\u5bb9\uff1a @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> string currentEditor = Model.Editor; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <option value=\"Wysiwyg\" selected=\"@(currentEditor == \"Wysiwyg\")\">@T[\"Wysiwyg editor\"]</option> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><option value =\u201cWysiwyg\u201dselected =\u201c@\uff08currentEditor ==\u201dWysiwyg\u201c\uff09\u201d> @ T [\u201cWysiwyg\u7f16\u8f91\u201d] </ option></font> HTML Editor HTML\u7f16\u8f91\u5668 To define what HTML to render when the editor is selected from the settings, a shape named \u8981\u5b9a\u4e49\u4ece\u8bbe\u7f6e\u4e2d\u9009\u62e9\u7f16\u8f91\u5668\u65f6\u8981\u5448\u73b0\u7684HTML\uff0c\u8bf7\u4f7f\u7528\u540d\u4e3a\u7684\u5f62\u72b6 HtmlBody_Editor__{Name} corresponding to a file Body-{Name}.Editor.cshtml can be created. Sample content: \u793a\u4f8b\u5185\u5bb9\uff1a @using OrchardCore.Html.ViewModels; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@using OrchardCore.Html.ViewModels;</font> @model HtmlBodyPartViewModel <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@model HtmlBodyPartViewModel</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> <fieldset class=\"form-group\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><fieldset class =\u201cform-group\u201d></font> <label asp-for=\"Body\">@T[\"Body\"]</label> <textarea asp-for=\"Body\" rows=\"5\" class=\"form-control\"></textarea> <span class=\"hint\">@T[\"The body of the content item.\"]</span> </fieldset> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></\u5b57\u6bb5\u96c6></font> Overriding the predefined editors \u8986\u76d6\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668 You can override the HTML editor for the Default editor by creating a shape file named \u60a8\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u540d\u4e3a\u7684\u5f62\u72b6\u6587\u4ef6\u6765\u8986\u76d6\u201cDefault\u201d\u7f16\u8f91\u5668\u7684HTML\u7f16\u8f91\u5668 HtmlBody.Editor.cshtml . The Wysiwyg editor is defined by using the file named HtmlBody-Wysiwyg.Editor.cshtml . CREDITS \u5b66\u5206 Trumbowyg Trumbowyg https://github.com/Alex-D/Trumbowyg https://github.com/Alex-D/Trumbowyg Copyright (c) 2012-2016 Alexandre Demode (Alex-D) \u7248\u6743\u6240\u6709\uff08c\uff092012-2016 Alexandre Demode\uff08Alex-D\uff09 License: MIT \u6267\u7167\uff1a\u9ebb\u7701\u7406\u5de5\u5b66\u9662","title":"Html"},{"location":"OrchardCore.Modules/OrchardCore.Html/#body-orchardcorehtml","text":"","title":"Body (OrchardCore.Html)"},{"location":"OrchardCore.Modules/OrchardCore.Html/#orchardcorehtml","text":"","title":"\u8eab\u4f53\uff08OrchardCore.Html\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Html/#theming","text":"","title":"Theming"},{"location":"OrchardCore.Modules/OrchardCore.Html/#_1","text":"","title":"\u4e3b\u9898\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Html/#shapes","text":"","title":"Shapes"},{"location":"OrchardCore.Modules/OrchardCore.Html/#_2","text":"The following shapes are rendered when the HtmlBodyPart is attached to a content type \u5f53 HtmlBodyPart \u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u65f6\uff0c\u5c06\u5448\u73b0\u4ee5\u4e0b\u5f62\u72b6 | Name | Display Type | Default Location | Model Type | |\u540d\u79f0|\u663e\u793a\u7c7b\u578b|\u9ed8\u8ba4\u4f4d\u7f6e|\u578b\u53f7\u7c7b\u578b| | ------| ------------ |----------------- | ---------- | | ------ | ------------ | ----------------- | ---------- | | HtmlBodyPart | Detail | Content:5 | HtmlBodyPartViewModel | | HtmlBodyPart | \u7ec6\u8282 | \u5185\u5bb9\uff1a5 | HtmlBodyPartViewModel | | HtmlBodyPart | Summary | Content:10 | HtmlBodyPartViewModel | | HtmlBodyPart | \u6458\u8981 | \u5185\u5bb9\uff1a10 | HtmlBodyPartViewModel |","title":"\u5f62\u72b6"},{"location":"OrchardCore.Modules/OrchardCore.Html/#htmlbodypartviewmodel","text":"","title":"HtmlBodyPartViewModel"},{"location":"OrchardCore.Modules/OrchardCore.Html/#htmlbodypartviewmodel_1","text":"The following properties are available on the HtmlBodyPartViewModel class. HtmlBodyPartViewModel \u7c7b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Type | Description | |\u8d22\u4ea7|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Body | string | The content that was edited. It might contain tokens. | | \u8eab\u4f53 | string |\u5df2\u7f16\u8f91\u7684\u5185\u5bb9\u3002\u5b83\u53ef\u80fd\u5305\u542b\u4ee4\u724c\u3002 | | Html | string | The HTML content once all tokens have been processed | | Html | string |\u5904\u7406\u5b8c\u6240\u6709\u4ee4\u724c\u540e\u7684HTML\u5185\u5bb9| | ContentItem | ContentItem | The content item of the part | | ContentItem | ContentItem |\u90e8\u5206\u7684\u5185\u5bb9\u9879\u76ee | HtmlBodyPart | HtmlBodyPart | The HtmlBodyPart instance| | HtmlBodyPart | HtmlBodyPart | HtmlBodyPart \u5b9e\u4f8b| | TypePartSettings | HtmlBodyPartSettings | The settings of the part | | TypePartSettings | HtmlBodyPartSettings |\u90e8\u5206\u7684\u8bbe\u7f6e|","title":"HtmlBodyPartViewModel"},{"location":"OrchardCore.Modules/OrchardCore.Html/#htmlbodypart","text":"","title":"HtmlBodyPart"},{"location":"OrchardCore.Modules/OrchardCore.Html/#htmlbodypart_1","text":"The following properties are available on HtmlBodyPart HtmlBodyPart \u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027 | Name | Type | Description | |\u540d\u79f0|\u8f93\u5165|\u8bf4\u660e| | -----| ---- |------------ | | ----- | ---- | ------------ | | Body | string | The HTML content in the body. It can contain Liquid tags so using it directly might result in unexpected results. Prefer rendering the HtmlBodyPart shape instead | | \u8eab\u4f53 | string |\u6b63\u6587\u4e2d\u7684HTML\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u5305\u542bLiquid\u6807\u7b7e\uff0c\u56e0\u6b64\u76f4\u63a5\u4f7f\u7528\u5b83\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u7ed3\u679c\u3002\u66f4\u559c\u6b22\u6e32\u67d3 HtmlBodyPart \u5f62\u72b6 | Content | The raw content of the part | | \u5185\u5bb9 |\u90e8\u5206\u7684\u539f\u59cb\u5185\u5bb9| | ContentItem | The content item containing this part | | ContentItem |\u5305\u542b\u6b64\u90e8\u5206\u7684\u5185\u5bb9\u9879\u76ee","title":"HtmlBodyPart"},{"location":"OrchardCore.Modules/OrchardCore.Html/#editors","text":"","title":"Editors"},{"location":"OrchardCore.Modules/OrchardCore.Html/#_3","text":"The HtmlBody Part editor can be different for each content type. In the HtmlBody Part settings of a __HtmlBody Part__\u7f16\u8f91\u5668\u5bf9\u4e8e\u6bcf\u79cd\u5185\u5bb9\u7c7b\u578b\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u3002\u5728__HtmlBody Part__\u8bbe\u7f6e\u4e2d content type, just select the one that needs to be used. \u5185\u5bb9\u7c7b\u578b\uff0c\u53ea\u9700\u9009\u62e9\u9700\u8981\u4f7f\u7528\u7684\u5185\u5bb9\u3002 There are two predefined editor names: \u6709\u4e24\u4e2a\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668\u540d\u79f0\uff1a Default is the editor that is used by default Default \u662f\u9ed8\u8ba4\u4f7f\u7528\u7684\u7f16\u8f91\u5668 Wysiwyg is the editor that provides a WYSIWYG experience Wysiwyg \u662f\u63d0\u4f9bWYSIWYG\u4f53\u9a8c\u7684\u7f16\u8f91\u5668","title":"\u7f16\u8005"},{"location":"OrchardCore.Modules/OrchardCore.Html/#custom-editors","text":"","title":"Custom Editors"},{"location":"OrchardCore.Modules/OrchardCore.Html/#_4","text":"Customizing the editor can mean to replace the predefined one with different experiences, or to provide \u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\u53ef\u80fd\u610f\u5473\u7740\u7528\u4e0d\u540c\u7684\u4f53\u9a8c\u66ff\u6362\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668\uff0c\u6216\u8005\u63d0\u4f9b new options for the user to choose from. \u7528\u6237\u53ef\u4f9b\u9009\u62e9\u7684\u65b0\u9009\u9879\u3002 To create a new custom editor, it is required to provide two shape templates, one to provide \u8981\u521b\u5efa\u65b0\u7684\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\uff0c\u9700\u8981\u63d0\u4f9b\u4e24\u4e2a\u5f62\u72b6\u6a21\u677f\uff0c\u4e00\u4e2a\u7528\u4e8e\u63d0\u4f9b the name of the editor (optional if you want to override an existing one), and a shape to \u7f16\u8f91\u5668\u7684\u540d\u79f0\uff08\u5982\u679c\u8981\u8986\u76d6\u73b0\u6709\u7f16\u8f91\u5668\uff0c\u5219\u4e3a\u53ef\u9009\u9879\uff09\u548c\u5f62\u72b6 render the actual HTML for the editor. \u5448\u73b0\u7f16\u8f91\u5668\u7684\u5b9e\u9645HTML\u3002","title":"\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Html/#declaration","text":"","title":"Declaration"},{"location":"OrchardCore.Modules/OrchardCore.Html/#_5","text":"To declare a new editor, create a shape named HtmlBody_Option__{Name} where {Name} is a value \u8981\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u7f16\u8f91\u5668\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a HtmlBody_Option __ {Name} \u7684\u5f62\u72b6\uff0c\u5176\u4e2d {Name} \u662f\u4e00\u4e2a\u503c of your choosing. This will be represented by a file named HtmlBody-{Name}.Option.cshtml . \u4f60\u9009\u62e9\u7684\u3002\u8fd9\u5c06\u7531\u540d\u4e3a HtmlBody- {Name} .Option.cshtml \u7684\u6587\u4ef6\u8868\u793a\u3002 Sample content: \u793a\u4f8b\u5185\u5bb9\uff1a @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> string currentEditor = Model.Editor; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <option value=\"Wysiwyg\" selected=\"@(currentEditor == \"Wysiwyg\")\">@T[\"Wysiwyg editor\"]</option> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><option value =\u201cWysiwyg\u201dselected =\u201c@\uff08currentEditor ==\u201dWysiwyg\u201c\uff09\u201d> @ T [\u201cWysiwyg\u7f16\u8f91\u201d] </ option></font>","title":"\u5ba3\u8a00"},{"location":"OrchardCore.Modules/OrchardCore.Html/#html-editor","text":"","title":"HTML Editor"},{"location":"OrchardCore.Modules/OrchardCore.Html/#html","text":"To define what HTML to render when the editor is selected from the settings, a shape named \u8981\u5b9a\u4e49\u4ece\u8bbe\u7f6e\u4e2d\u9009\u62e9\u7f16\u8f91\u5668\u65f6\u8981\u5448\u73b0\u7684HTML\uff0c\u8bf7\u4f7f\u7528\u540d\u4e3a\u7684\u5f62\u72b6 HtmlBody_Editor__{Name} corresponding to a file Body-{Name}.Editor.cshtml can be created. Sample content: \u793a\u4f8b\u5185\u5bb9\uff1a @using OrchardCore.Html.ViewModels; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@using OrchardCore.Html.ViewModels;</font> @model HtmlBodyPartViewModel <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@model HtmlBodyPartViewModel</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> <fieldset class=\"form-group\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><fieldset class =\u201cform-group\u201d></font> <label asp-for=\"Body\">@T[\"Body\"]</label> <textarea asp-for=\"Body\" rows=\"5\" class=\"form-control\"></textarea> <span class=\"hint\">@T[\"The body of the content item.\"]</span> </fieldset> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></\u5b57\u6bb5\u96c6></font>","title":"HTML\u7f16\u8f91\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Html/#overriding-the-predefined-editors","text":"","title":"Overriding the predefined editors"},{"location":"OrchardCore.Modules/OrchardCore.Html/#_6","text":"You can override the HTML editor for the Default editor by creating a shape file named \u60a8\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u540d\u4e3a\u7684\u5f62\u72b6\u6587\u4ef6\u6765\u8986\u76d6\u201cDefault\u201d\u7f16\u8f91\u5668\u7684HTML\u7f16\u8f91\u5668 HtmlBody.Editor.cshtml . The Wysiwyg editor is defined by using the file named HtmlBody-Wysiwyg.Editor.cshtml .","title":"\u8986\u76d6\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Html/#credits","text":"","title":"CREDITS"},{"location":"OrchardCore.Modules/OrchardCore.Html/#_7","text":"","title":"\u5b66\u5206"},{"location":"OrchardCore.Modules/OrchardCore.Html/#trumbowyg","text":"","title":"Trumbowyg"},{"location":"OrchardCore.Modules/OrchardCore.Html/#trumbowyg_1","text":"https://github.com/Alex-D/Trumbowyg https://github.com/Alex-D/Trumbowyg Copyright (c) 2012-2016 Alexandre Demode (Alex-D) \u7248\u6743\u6240\u6709\uff08c\uff092012-2016 Alexandre Demode\uff08Alex-D\uff09 License: MIT \u6267\u7167\uff1a\u9ebb\u7701\u7406\u5de5\u5b66\u9662","title":"Trumbowyg"},{"location":"OrchardCore.Modules/OrchardCore.Indexing/","text":"Indexing (OrchardCore.Indexing) \u7d22\u5f15\uff08OrchardCore.Indexing\uff09 The Indexing module provides services to index content items. It does so by storing an append-only log of \u7d22\u5f15\u6a21\u5757\u63d0\u4f9b\u7d22\u5f15\u5185\u5bb9\u9879\u7684\u670d\u52a1\u3002\u5b83\u901a\u8fc7\u5b58\u50a8\u4ec5\u9644\u52a0\u65e5\u5fd7\u6765\u5b9e\u73b0 content item entries, and providing a service to query this list with a cursor-like interface. An entry can \u5185\u5bb9\u9879\u6761\u76ee\uff0c\u5e76\u63d0\u4f9b\u4f7f\u7528\u7c7b\u4f3c\u6e38\u6807\u7684\u754c\u9762\u67e5\u8be2\u6b64\u5217\u8868\u7684\u670d\u52a1\u3002\u4e00\u4e2a\u6761\u76ee\u53ef\u4ee5 be either an Update or a Deletion task. This list of tasks can also be seen as an event store for content items. \u53ef\u4ee5\u662f\u201c\u66f4\u65b0\u201d\u6216\u201c\u5220\u9664\u201d\u4efb\u52a1\u3002\u6b64\u4efb\u52a1\u5217\u8868\u8fd8\u53ef\u4ee5\u89c6\u4e3a\u5185\u5bb9\u9879\u7684\u4e8b\u4ef6\u5b58\u50a8\u3002 Other modules can then store their own cursor location for this list, and check for updates and deletions \u7136\u540e\uff0c\u5176\u4ed6\u6a21\u5757\u53ef\u4ee5\u4e3a\u6b64\u5217\u8868\u5b58\u50a8\u81ea\u5df1\u7684\u5149\u6807\u4f4d\u7f6e\uff0c\u5e76\u68c0\u67e5\u66f4\u65b0\u548c\u5220\u9664 of content items and do custom operations based on these changes. \u5185\u5bb9\u9879\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u66f4\u6539\u6267\u884c\u81ea\u5b9a\u4e49\u64cd\u4f5c\u3002","title":"Indexing"},{"location":"OrchardCore.Modules/OrchardCore.Indexing/#indexing-orchardcoreindexing","text":"","title":"Indexing (OrchardCore.Indexing)"},{"location":"OrchardCore.Modules/OrchardCore.Indexing/#orchardcoreindexing","text":"The Indexing module provides services to index content items. It does so by storing an append-only log of \u7d22\u5f15\u6a21\u5757\u63d0\u4f9b\u7d22\u5f15\u5185\u5bb9\u9879\u7684\u670d\u52a1\u3002\u5b83\u901a\u8fc7\u5b58\u50a8\u4ec5\u9644\u52a0\u65e5\u5fd7\u6765\u5b9e\u73b0 content item entries, and providing a service to query this list with a cursor-like interface. An entry can \u5185\u5bb9\u9879\u6761\u76ee\uff0c\u5e76\u63d0\u4f9b\u4f7f\u7528\u7c7b\u4f3c\u6e38\u6807\u7684\u754c\u9762\u67e5\u8be2\u6b64\u5217\u8868\u7684\u670d\u52a1\u3002\u4e00\u4e2a\u6761\u76ee\u53ef\u4ee5 be either an Update or a Deletion task. This list of tasks can also be seen as an event store for content items. \u53ef\u4ee5\u662f\u201c\u66f4\u65b0\u201d\u6216\u201c\u5220\u9664\u201d\u4efb\u52a1\u3002\u6b64\u4efb\u52a1\u5217\u8868\u8fd8\u53ef\u4ee5\u89c6\u4e3a\u5185\u5bb9\u9879\u7684\u4e8b\u4ef6\u5b58\u50a8\u3002 Other modules can then store their own cursor location for this list, and check for updates and deletions \u7136\u540e\uff0c\u5176\u4ed6\u6a21\u5757\u53ef\u4ee5\u4e3a\u6b64\u5217\u8868\u5b58\u50a8\u81ea\u5df1\u7684\u5149\u6807\u4f4d\u7f6e\uff0c\u5e76\u68c0\u67e5\u66f4\u65b0\u548c\u5220\u9664 of content items and do custom operations based on these changes. \u5185\u5bb9\u9879\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u66f4\u6539\u6267\u884c\u81ea\u5b9a\u4e49\u64cd\u4f5c\u3002","title":"\u7d22\u5f15\uff08OrchardCore.Indexing\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/","text":"Liquid (OrchardCore.Liquid) \u6db2\u4f53\uff08OrchardCore.Liquid\uff09 This module provides a way to create templates securely from the admin site. \u6b64\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u79cd\u4ece\u7ba1\u7406\u7ad9\u70b9\u5b89\u5168\u5730\u521b\u5efa\u6a21\u677f\u7684\u65b9\u6cd5\u3002 For more information about the Liquid syntax, please refer to this site: https://shopify.github.io/liquid/ \u6709\u5173Liquid\u8bed\u6cd5\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6b64\u7ad9\u70b9\uff1a https://shopify.github.io/liquid/ General concepts \u4e00\u822c\u6982\u5ff5 HTML escaping HTML\u8f6c\u4e49 All outputs are encoded into HTML by default. \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u8f93\u51fa\u90fd\u7f16\u7801\u4e3aHTML\u3002 This means that any HTML reserved chars will be converted to the corresponding HTML entities. \u8fd9\u610f\u5473\u7740\u4efb\u4f55HTML\u4fdd\u7559\u7684\u5b57\u7b26\u90fd\u5c06\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684HTML\u5b9e\u4f53\u3002 If you need to render some raw HTML chars you can use the Raw filter. \u5982\u679c\u9700\u8981\u6e32\u67d3\u4e00\u4e9b\u539f\u59cbHTML\u5b57\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528 Raw \u8fc7\u6ee4\u5668\u3002 Content Item Filters \u5185\u5bb9\u9879\u8fc7\u6ee4\u5668 All the default filters that are available in the standard Liquid syntax are available in OrchardCore. OrchardCore\u4e2d\u63d0\u4f9b\u4e86\u6807\u51c6Liquid\u8bed\u6cd5\u4e2d\u53ef\u7528\u7684\u6240\u6709\u9ed8\u8ba4\u8fc7\u6ee4\u5668\u3002 On top of that each Orchard module can provide custom filters for their own purpose. \u6700\u91cd\u8981\u7684\u662f\uff0c\u6bcf\u4e2aOrchard\u6a21\u5757\u90fd\u53ef\u4ee5\u4e3a\u81ea\u5df1\u7684\u76ee\u7684\u63d0\u4f9b\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u3002 Here is a list of common filters that apply to content items. \u4ee5\u4e0b\u662f\u9002\u7528\u4e8e\u5185\u5bb9\u9879\u7684\u5e38\u7528\u8fc7\u6ee4\u5668\u5217\u8868\u3002 display_url DISPLAY_URL Returns the URL of the content item \u8fd4\u56de\u5185\u5bb9\u9879\u7684URL Input \u8f93\u5165 {{ Model.ContentItem | display_url }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem | display_url}}</font> Output \u4ea7\u91cf /blog/my-blog-post <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">/\u535a\u5ba2/\u6211 - \u535a\u5ba2 - \u5c97\u4f4d</font> display_text DISPLAY_TEXT Returns the title of the content item \u8fd4\u56de\u5185\u5bb9\u9879\u7684\u6807\u9898 Input \u8f93\u5165 {{ Model.ContentItem | display_text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem | display_text}}</font> Output \u4ea7\u91cf My Blog Post <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u6211\u7684\u535a\u6587</font> slugify slugify Convert a text into a string that can be used in a URL. \u5c06\u6587\u672c\u8f6c\u6362\u4e3a\u53ef\u5728URL\u4e2d\u4f7f\u7528\u7684\u5b57\u7b26\u4e32\u3002 Input \u8f93\u5165 {{ \"This is some text\" | slugify }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u201c\u8fd9\u662f\u4e00\u4e9b\u6587\u5b57\u201d| slugify}}</font> Output \u4ea7\u91cf this-is-some-text <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u8fd9 - \u662f - \u4e00\u4e9b\u6587\u672c</font> container \u5bb9\u5668 Returns the container content item of another content item. \u8fd4\u56de\u53e6\u4e00\u4e2a\u5185\u5bb9\u9879\u7684\u5bb9\u5668\u5185\u5bb9\u9879\u3002 Input \u8f93\u5165 {{ Model.ContentItem | container | display_text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem |\u5bb9\u5668| display_text}}</font> In this example we assume ContentItem represents a blog post. \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5047\u8bbe ContentItem \u4ee3\u8868\u535a\u5ba2\u6587\u7ae0\u3002 Output \u4ea7\u91cf Blog <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u535a\u5ba2</font> local \u672c\u5730 Converts a UTC date and time to the local date and time based on the site settings. \u6839\u636e\u7ad9\u70b9\u8bbe\u7f6e\u5c06UTC\u65e5\u671f\u548c\u65f6\u95f4\u8f6c\u6362\u4e3a\u672c\u5730\u65e5\u671f\u548c\u65f6\u95f4\u3002 Input \u8f93\u5165 {{ \"now\" | local | date: \"%c\" }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u201cnow\u201d|\u5f53\u5730\u7684|\u65e5\u671f\uff1a\u201c\uff05c\u201d}}</font> or \u8981\u4e48 {{ Model.ContentItem.CreatedUtc | local | date: \"%c\" }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem.CreatedUtc |\u5f53\u5730\u7684|\u65e5\u671f\uff1a\u201c\uff05c\u201d}}</font> Output \u4ea7\u91cf Wednesday, 02 August 2017 11:54:48 <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">2017\u5e748\u67082\u65e5\u661f\u671f\u4e0911:54:48</font> t \u0164 Localizes a string using the current culture. \u4f7f\u7528\u5f53\u524d\u6587\u5316\u672c\u5730\u5316\u5b57\u7b26\u4e32\u3002 Input \u8f93\u5165 {{ \"Hello!\" | t }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{ \u201c\u4f60\u597d\uff01\u201d | t}}</font> Output \u4ea7\u91cf Bonjour! <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f60\u597d\uff01</font> html_class html_class Converts a string into a friendly HTML class. \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u53cb\u597d\u7684HTML\u7c7b\u3002 Input \u8f93\u5165 {{ \"LandingPage\" | html_class }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u201cLandingPage\u201d| html_class}}</font> Output \u4ea7\u91cf landing-page <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u767b\u9646\u9875\u9762</font> Markdownify Markdownify Converts a Markdown string to HTML. \u5c06Markdown\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3aHTML\u3002 Input \u8f93\u5165 {{ \"### Services\" | markdownify }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u201c###\u670d\u52a1\u201d|\u964d\u4ef7}}</font> Output \u4ea7\u91cf <h3>Services</h3> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><H3>\u670d\u52a1</ H3></font> Properties \u5c5e\u6027 By default the liquid templates have access to a common set of objects. \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6db2\u4f53\u6a21\u677f\u53ef\u4ee5\u8bbf\u95ee\u4e00\u7ec4\u516c\u5171\u5bf9\u8c61\u3002 Model.Content Model.Content When available, a zone shape that contains all the shapes generated by the content's parts and fields. \u53ef\u7528\u65f6\uff0c\u533a\u57df\u5f62\u72b6\u5305\u542b\u5185\u5bb9\u7684\u90e8\u4ef6\u548c\u5b57\u6bb5\u751f\u6210\u7684\u6240\u6709\u5f62\u72b6\u3002 Model.ContentItem Model.ContentItem When available, represents the current content item being rendered. \u53ef\u7528\u65f6\uff0c\u8868\u793a\u6b63\u5728\u5448\u73b0\u7684\u5f53\u524d\u5185\u5bb9\u9879\u3002 The following properties are available on the ContentItem object. ContentItem \u5bf9\u8c61\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Example | Description | |\u8d22\u4ea7|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Id | 12 | The id of the document in the database | | Id | 12 |\u6570\u636e\u5e93\u4e2d\u6587\u6863\u7684ID | | ContentItemId | 4qs7mv9xc4ttg5ktm61qj9dy5d | The common identifier of all versions of the content item | | ContentItemId | 4qs7mv9xc4ttg5ktm61qj9dy5d |\u5185\u5bb9\u9879\u7684\u6240\u6709\u7248\u672c\u7684\u516c\u5171\u6807\u8bc6\u7b26 | ContentItemVersionId | 4jp895achc3hj1qy7xq8f10nmv | The unique identifier of the content item version | | ContentItemVersionId | 4jp895achc3hj1qy7xq8f10nmv |\u5185\u5bb9\u9879\u7248\u672c\u7684\u552f\u4e00\u6807\u8bc6\u7b26 | Number | 6 | The version number | | Number | 6 |\u7248\u672c\u53f7| | Owner | admin | The username of the creator of this content item | | '\u6240\u6709\u8005'| admin |\u6b64\u5185\u5bb9\u9879\u7684\u521b\u5efa\u8005\u7684\u7528\u6237\u540d | Author | admin | The username of the editor of this version | | \u4f5c\u8005 | admin |\u6b64\u7248\u672c\u7684\u7f16\u8f91\u5668\u7684\u7528\u6237\u540d| | Published | true | Whether this content item version is published or not | | \u5df2\u53d1\u5e03 | true |\u662f\u5426\u53d1\u5e03\u6b64\u5185\u5bb9\u9879\u7248\u672c| | Latest | true | Whether this content item version is the latest of the content item | | Latest | true |\u6b64\u5185\u5bb9\u9879\u7248\u672c\u662f\u5426\u662f\u6700\u65b0\u7684\u5185\u5bb9\u9879| | ContentType | BlogPost | The content type | | ContentType | BlogPost |\u5185\u5bb9\u7c7b\u578b| | CreatedUtc | 2017-05-25 00:27:22.647 | When the content item was first created or first published | | CreatedUtc | 2017-05-25 00\uff1a27\uff1a22.647 |\u9996\u6b21\u521b\u5efa\u6216\u9996\u6b21\u53d1\u5e03\u5185\u5bb9\u9879\u65f6 | ModifiedUtc | 2017-05-25 00:27:22.647 | When the content item version was created | | ModifiedUtc | 2017-05-25 00\uff1a27\uff1a22.647 |\u521b\u5efa\u5185\u5bb9\u9879\u7248\u672c\u65f6| | PublishedUtc | 2017-05-25 00:27:22.647 | When the content item was last published | | PublishedUtc | 2017-05-25 00\uff1a27\uff1a22.647 |\u4e0a\u6b21\u53d1\u5e03\u5185\u5bb9\u9879\u65f6| | Content | { ... } | A document containing all the content properties. See specific documentation for usage .| | \u5185\u5bb9 | {...} |\u5305\u542b\u6240\u6709\u5185\u5bb9\u5c5e\u6027\u7684\u6587\u6863\u3002\u6709\u5173\u7528\u6cd5\uff0c\u8bf7\u53c2\u9605\u7279\u5b9a\u6587\u6863 Content property \u5185\u5bb9\u5c5e\u6027 The Content property of a content item exposes all its elements, like parts and fields. It is possible to \u5185\u5bb9\u9879\u7684\u201cContent\u201d\u5c5e\u6027\u516c\u5f00\u5176\u6240\u6709\u5143\u7d20\uff0c\u5982\u90e8\u5206\u548c\u5b57\u6bb5\u3002\u6709\u53ef\u80fd inspect all the available properties by evaluating Content directly. It will then render the full document. \u901a\u8fc7\u76f4\u63a5\u8bc4\u4f30 Content \u6765\u68c0\u67e5\u6240\u6709\u53ef\u7528\u7684\u5c5e\u6027\u3002\u7136\u540e\u5b83\u5c06\u5448\u73b0\u5b8c\u6574\u7684\u6587\u6863\u3002 The convention is that each Part is exposed by its name as the first level. \u60ef\u4f8b\u662f\u6bcf\u4e2aPart\u90fd\u4ee5\u5176\u540d\u79f0\u4f5c\u4e3a\u7b2c\u4e00\u7ea7\u516c\u5f00\u3002 If the content item has custom fields, they will be available under a part whose name will match the content type. \u5982\u679c\u5185\u5bb9\u9879\u5177\u6709\u81ea\u5b9a\u4e49\u5b57\u6bb5\uff0c\u5219\u5b83\u4eec\u5c06\u5728\u540d\u79f0\u4e0e\u5185\u5bb9\u7c7b\u578b\u5339\u914d\u7684\u90e8\u4ef6\u4e0b\u53ef\u7528\u3002 For example, assuming the type Product has a Text field named Size , access the value of this field for a \u4f8b\u5982\uff0c\u5047\u8bbe\u7c7b\u578b Product \u6709\u4e00\u4e2a\u540d\u4e3a Size \u7684\u6587\u672c\u5b57\u6bb5\uff0c\u8bf7\u8bbf\u95ee\u8be5\u5b57\u6bb5\u7684\u503c content item as follows: \u5185\u5bb9\u9879\u76ee\u5982\u4e0b\uff1a {{ Model.ContentItem.Content.Product.Size.Text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem.Content.Product.Size.Text}}</font> Similarly, if the content item has a Title part, we can access it like this: \u7c7b\u4f3c\u5730\uff0c\u5982\u679c\u5185\u5bb9\u9879\u5177\u6709\u201c\u6807\u9898\u201d\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u8fd9\u6837\u8bbf\u95ee\u5b83\uff1a {{ Model.ContentItem.Content.TitlePart.Title }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem.Content.TitlePart.Title}}</font> User \u7528\u6237 Represents the authenticated user for the current request. \u8868\u793a\u5f53\u524d\u8bf7\u6c42\u7684\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u3002 The following properties are available on the User object. \u201cUser\u201d\u5bf9\u8c61\u4e0a\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Example | Description | |\u8d22\u4ea7|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Identity.Name | admin | The name of the authenticated user | | Identity.Name | admin |\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u7684\u540d\u79f0 Site \u73b0\u573a Gives access to the current site settings, e.g Site.SiteName . \u63d0\u4f9b\u5bf9\u5f53\u524d\u7ad9\u70b9\u8bbe\u7f6e\u7684\u8bbf\u95ee\uff0c\u4f8b\u5982\u201cSite.SiteName\u201d\u3002 | Property | Example | Description | |\u8d22\u4ea7|\u793a\u4f8b|\u8bf4\u660e| | -------- | ------- |------------ | | -------- | ------- | ------------ | | BaseUrl | | The base URL of the site | | BaseUrl | |\u7ad9\u70b9\u7684\u57fa\u672cURL | | Calendar | | The site's calendar | | \u65e5\u5386 | |\u8be5\u7f51\u7ad9\u7684\u65e5\u5386| | Culture | en-us | The site's default culture as an ISO language code | | \u6587\u5316 | en-us |\u8be5\u7f51\u7ad9\u7684\u9ed8\u8ba4\u6587\u5316\u4e3aISO\u8bed\u8a00\u4ee3\u7801| | MaxPagedCount | 0 | The maximum number of pages that can be paged | | MaxPagedCount | 0 |\u53ef\u4ee5\u5206\u9875\u7684\u6700\u5927\u9875\u6570 | MaxPageSize | 100 | The maximum page size that can be set by a user | | MaxPageSize | 100 |\u7528\u6237\u53ef\u4ee5\u8bbe\u7f6e\u7684\u6700\u5927\u9875\u9762\u5927\u5c0f | PageSize | 10 | The default page size of lists | | PageSize | 10 |\u5217\u8868\u7684\u9ed8\u8ba4\u9875\u9762\u5927\u5c0f| | SiteName | My Site | The friendly name of the site | | SiteName | \u6211\u7684\u7f51\u7ad9 |\u7f51\u7ad9\u7684\u53cb\u597d\u540d\u79f0| | SuperUser | admin | The user name of the site's super user | | \u8d85\u7ea7\u7528\u6237 | admin |\u7ad9\u70b9\u7684\u8d85\u7ea7\u7528\u6237\u7684\u7528\u6237\u540d| | TimeZoneId | America/Los_Angeles | The site's time zone id as per the tz database, c.f., https://en.wikipedia.org/wiki/List_of_tz_database_time_zones | | TimeZoneId | America / Los_Angeles |\u8be5\u7f51\u7ad9\u7684\u65f6\u533aID\u6839\u636etz\u6570\u636e\u5e93\uff0cc.f\u3002\uff0chttps\uff1a//en.wikipedia.org/wiki/List_of_tz_database_time_zones | | UseCdn | false | Enable/disable the use of a CDN | | UseCdn | false |\u542f\u7528/\u7981\u7528CDN\u7684\u4f7f\u7528 Request \u8bf7\u6c42 Represents the current request. \u8868\u793a\u5f53\u524d\u8bf7\u6c42\u3002 The following properties are available on the Request object. \u201cRequest\u201d\u5bf9\u8c61\u4e0a\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Example | Description | |\u8d22\u4ea7|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | QueryString | ?sort=name&page=1 | The query string | | QueryString | \uff1fsort = name\uff06page = 1 |\u67e5\u8be2\u5b57\u7b26\u4e32| | ContentType | application/x-www-form-urlencoded; charset=UTF-8 | The Content-Type header | | ContentType | \u5e94\u7528\u7a0b\u5e8f/ x-WWW\u7a97\u4f53-urlencoded; charset = UTF-8 | Content-Type \u6807\u9898| | ContentLength | 600 | The Content-Length header | | ContentLength | 600 | Content-Length \u6807\u9898| | Cookies | Usage: Request.Cookies.orchauth_Default | The collection of cookies for this request | | Cookies |\u7528\u6cd5\uff1a Request.Cookies.orchauth_Default |\u6b64\u8bf7\u6c42\u7684cookie\u96c6\u5408| | Headers | Usage: Request.Headers.accept | The request headers | | \u6807\u9898 |\u7528\u6cd5\uff1a Request.Headers.accept |\u8bf7\u6c42\u6807\u5934| | Query | Usage: Request.Query.sort | The query value collection parsed from QueryString | | \u67e5\u8be2 |\u7528\u6cd5\uff1a Request.Query.sort |\u67e5\u8be2\u503c\u96c6\u5408\u4ece QueryString |\u89e3\u6790 | Form | Usage: Request.Form.value | The collection of form values | | Form |\u7528\u6cd5\uff1a Request.Form.value |\u8868\u5355\u503c\u7684\u96c6\u5408| | Protocol | https | The protocol of this request | | Protocol | https |\u6b64\u8bf7\u6c42\u7684\u534f\u8bae| | Path | /OrchardCore.ContentPreview/Preview/Render | The path of the request, unescaped | | Path | / OrchardCore.ContentPreview / Preview / Render |\u8bf7\u6c42\u7684\u8def\u5f84\uff0c\u672a\u8f6c\u4e49| | PathBase | /mytenant | The base path of the request, unescaped | | PathBase | / mytenant |\u8bf7\u6c42\u7684\u57fa\u672c\u8def\u5f84\uff0c\u672a\u8f6c\u4e49| | Host | localhost:44300 | The Host header. May contain the port | | \u4e3b\u6301\u4eba| localhost\uff1a44300 | Host`\u6807\u9898\u3002\u53ef\u80fd\u5305\u542b\u7aef\u53e3| | IsHttps | true | True if the scheme of the request is https | | IsHttps | true |\u5982\u679c\u8bf7\u6c42\u7684\u65b9\u6848\u662f\u201chttps\u201d|\uff0c\u5219\u4e3aTrue | Scheme | https | The scheme of the request | | Scheme | https |\u8bf7\u6c42\u7684\u65b9\u6848| | Method | GET | The HTTP method | | \u65b9\u6cd5 | GET | HTTP\u65b9\u6cd5| Culture \u6587\u5316 Represents the current culture. \u4ee3\u8868\u5f53\u524d\u7684\u6587\u5316\u3002 The following properties are available on the Culture object. Culture \u5bf9\u8c61\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Example | Description | |\u8d22\u4ea7|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Name | en-US | The requests's culture as an ISO language code | | \u59d3\u540d | en-US |\u8bf7\u6c42\u7684\u6587\u5316\u4f5c\u4e3aISO\u8bed\u8a00\u4ee3\u7801| | Dir | rtl | The text writing directionality | | Dir | rtl |\u6587\u5b57\u5199\u4f5c\u65b9\u5411\u6027| Shape Filters \u5f62\u72b6\u6ee4\u955c These filters let you create and filter shapes. \u4f7f\u7528\u8fd9\u4e9b\u8fc7\u6ee4\u5668\u53ef\u4ee5\u521b\u5efa\u548c\u8fc7\u6ee4\u5f62\u72b6\u3002 shape_new shape_new Returns a shape with the specified name as input. \u8fd4\u56de\u5177\u6709\u6307\u5b9a\u540d\u79f0\u4f5c\u4e3a\u8f93\u5165\u7684\u5f62\u72b6\u3002 Input \u8f93\u5165 {% assign date_time = \"DateTime\" | shape_new %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign date_time =\u201cDateTime\u201d| shape_new\uff05}</font> shape_render shape_render Renders a shape. \u6e32\u67d3\u5f62\u72b6\u3002 Input \u8f93\u5165 {{ Model.Content | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content | shape_render}}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> shape_stringify shape_stringify Converts a shape to its string representation. Contrary to shape_render the result of this filter will \u5c06\u5f62\u72b6\u8f6c\u6362\u4e3a\u5176\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u3002\u4e0e shape_render \u76f8\u53cd\uff0c\u6b64\u8fc7\u6ee4\u5668\u7684\u7ed3\u679c\u5c06\u662f be encoded if rendered in the output. \u5982\u679c\u5728\u8f93\u51fa\u4e2d\u5448\u73b0\uff0c\u5219\u8fdb\u884c\u7f16\u7801\u3002 Input \u8f93\u5165 {{ \"DateTime\" | shape_new | shape_stringify }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u201cDateTime\u201d| shape_new | shape_stringify}}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> Output \u4ea7\u91cf Monday, September 11, 2017 3:29:26 PM <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">2017\u5e749\u670811\u65e5\u661f\u671f\u4e00\u4e0b\u53483:29:26</font> Layout Tags \u5e03\u5c40\u6807\u7b7e layout \u5e03\u5c40 Sets the layout of a view. \u8bbe\u7f6e\u89c6\u56fe\u7684\u5e03\u5c40\u3002 Input \u8f93\u5165 {% layout \"CustomLayout\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05layout\u201cCustomLayout\u201d\uff05}</font> Internally an alternate is added to the current theme Layout shape. \u5728\u5185\u90e8\uff0c\u66ff\u4ee3\u54c1\u88ab\u6dfb\u52a0\u5230\u5f53\u524d\u4e3b\u9898\u201c\u5e03\u5c40\u201d\u5f62\u72b6\u4e2d\u3002 render_body render_body In a layout, renders the body of the current view. \u5728\u5e03\u5c40\u4e2d\uff0c\u5448\u73b0\u5f53\u524d\u89c6\u56fe\u7684\u4e3b\u4f53\u3002 Input \u8f93\u5165 {% render_body %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05render_body\uff05}</font> render_section render_section In a layout, renders the section with the specified name. \u5728\u5e03\u5c40\u4e2d\uff0c\u4f7f\u7528\u6307\u5b9a\u7684\u540d\u79f0\u5448\u73b0\u8282\u3002 Input \u8f93\u5165 {% render_section \"Header\", required: false %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05render_section\u201c\u6807\u9898\u201d\uff0c\u5fc5\u586b\uff1afalse\uff05}</font> page_title \u9875\u9762\u6807\u9898 Alters and renders the title of the current page. \u66f4\u6539\u5e76\u5448\u73b0\u5f53\u524d\u9875\u9762\u7684\u6807\u9898\u3002 Input \u8f93\u5165 {% page_title Site.SiteName, position: \"before\", separator: \" - \" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05page_title Site.SiteName\uff0cposition\uff1a\u201cbefore\u201d\uff0cseparator\uff1a\u201c - \u201d\uff05}</font> The default parameter is a text that is appended to the current value of the title. \u9ed8\u8ba4\u53c2\u6570\u662f\u9644\u52a0\u5230\u6807\u9898\u5f53\u524d\u503c\u7684\u6587\u672c\u3002 position is where the value is appended, in this example at the beginning. separator is a string that is used to separate all the fragments of the title. Shape Tags \u5f62\u72b6\u6807\u7b7e shape_clear_alternates shape_clear_alternates Removes any alternates from a shape. \u4ece\u5f62\u72b6\u4e2d\u5220\u9664\u4efb\u4f55\u66ff\u6362\u3002 Input \u8f93\u5165 {% shape_clear_alternates my_shape %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_clear_alternates my_shape\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> shape_add_alternates shape_add_alternates Adds alternates to a shape. \u6dfb\u52a0\u66ff\u4ee3\u5f62\u72b6\u3002 Input \u8f93\u5165 {% shape_add_alternates my_shape \"alternate1\", \"alternate2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_alternates my_shape\u201calternate1\u201d\uff0c\u201calternate2\u201d\uff05}</font> {% shape_add_alternates my_shape \"alternate1 alternate2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_alternates my_shape\u201calternate1 alternate2\u201d\uff05}</font> shape_clear_wrappers shape_clear_wrappers Removes any wrappers from a shape. \u4ece\u5f62\u72b6\u4e2d\u79fb\u9664\u4efb\u4f55\u5305\u88c5\u3002 Input \u8f93\u5165 {% shape_clear_wrappers my_shape %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_clear_wrappers my_shape\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> shape_add_wrappers shape_add_wrappers Adds wrappers to a shape. \u5c06\u5305\u88c5\u5668\u6dfb\u52a0\u5230\u5f62\u72b6\u3002 Input \u8f93\u5165 {% shape_add_wrappers my_shape \"wrapper1\", \"wrapper2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_wrappers my_shape\u201cwrapper1\u201d\uff0c\u201cwrapper2\u201d\uff05}</font> {% shape_add_wrappers my_shape \"wrapper1 wrapper2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_wrappers my_shape\u201cwrapper1 wrapper2\u201d\uff05}</font> shape_clear_classes shape_clear_classes Removes any classes from a shape. \u4ece\u5f62\u72b6\u4e2d\u5220\u9664\u4efb\u4f55\u7c7b\u3002 Input \u8f93\u5165 {% shape_clear_classes my_shape %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_clear_classes my_shape\uff05}</font> shape_add_classes shape_add_classes Adds classes to a shape. \u5c06\u7c7b\u6dfb\u52a0\u5230\u5f62\u72b6\u3002 Input \u8f93\u5165 {% shape_add_classes my_shape \"class1 class2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_classes my_shape\u201cclass1 class2\u201d\uff05}</font> {% shape_add_classes my_shape \"class1\", \"class2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_classes my_shape\u201cclass1\u201d\uff0c\u201cclass2\u201d\uff05}</font> shape_clear_attributes shape_clear_attributes Removes any attributes from a shape. \u4ece\u5f62\u72b6\u4e2d\u5220\u9664\u4efb\u4f55\u5c5e\u6027\u3002 Input \u8f93\u5165 {% shape_clear_attributes my_shape %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_clear_attributes my_shape\uff05}</font> shape_add_attributes shape_add_attributes Adds attributes to a shape. \u5c06\u5c5e\u6027\u6dfb\u52a0\u5230\u5f62\u72b6\u3002 Input \u8f93\u5165 {% shape_add_attributes my_shape attr_name1: \"value1\", attr_name2: \"value2\" ... %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_attributes my_shape attr_name1\uff1a\u201cvalue1\u201d\uff0cattr_name2\uff1a\u201cvalue2\u201d...\uff05}</font> shape_type SHAPE_TYPE Sets the type of a shape. \u8bbe\u7f6e\u5f62\u72b6\u7684\u7c7b\u578b\u3002 Input \u8f93\u5165 {% shape_type my_shape \"MyType\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_type my_shape\u201cMyType\u201d\uff05}</font> Whenever the type is changed, it is recommended to clear the shape alternates before using the shape_clear_alternates tag. \u6bcf\u5f53\u66f4\u6539\u7c7b\u578b\u65f6\uff0c\u5efa\u8bae\u5728\u4f7f\u7528 shape_clear_alternates \u6807\u8bb0\u4e4b\u524d\u4ea4\u66ff\u6e05\u9664\u5f62\u72b6\u3002 shape_display_type shape_display_type Sets the display type of a shape. \u8bbe\u7f6e\u5f62\u72b6\u7684\u663e\u793a\u7c7b\u578b\u3002 Input \u8f93\u5165 {% shape_display_type my_shape \"Summary\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_display_type my_shape\u201c\u6458\u8981\u201d\uff05}</font> Whenever the display type is changed, it is recommended to clear the shape alternates before. \u6bcf\u5f53\u66f4\u6539\u663e\u793a\u7c7b\u578b\u65f6\uff0c\u5efa\u8bae\u5148\u4ea4\u66ff\u6e05\u9664\u5f62\u72b6\u3002 shape_position shape_position Sets the position of a shape. \u8bbe\u7f6e\u5f62\u72b6\u7684\u4f4d\u7f6e\u3002 Input \u8f93\u5165 {% shape_position my_shape \"Content:before\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_position my_shape\u201c\u5185\u5bb9\uff1a\u5728\u201d\uff05}\u4e4b\u524d</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> shape_tab shape_tab Sets the tab of a shape. \u8bbe\u7f6e\u5f62\u72b6\u7684\u9009\u9879\u5361\u3002 Input \u8f93\u5165 {% shape_tab my_shape \"properties\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_tab my_shape\u201cproperties\u201d\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> shape_remove_item shape_remove_item Removes a shape by its name in a Zone. \u5728\u533a\u57df\u4e2d\u5220\u9664\u5176\u540d\u79f0\u7684\u5f62\u72b6\u3002 Input \u8f93\u5165 {% shape_remove_item Model.Content \"HtmlBodyPart\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_remove_item Model.Content\u201cHtmlBodyPart\u201d\uff05}</font> {{ Model.Content | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content | shape_render}}</font> In this example, the Model.Content property evaluates to a zone shape, typically from a Content Item shape template, which contains the HtmlBodyPart shape \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c Model.Content \u5c5e\u6027\u8ba1\u7b97\u4e3a\u533a\u57df\u5f62\u72b6\uff0c\u901a\u5e38\u6765\u81eaContent Item\u5f62\u72b6\u6a21\u677f\uff0c\u5176\u4e2d\u5305\u542b HtmlBodyPart \u5f62\u72b6 rendered for the Body Part element. This call will remove the specific shape named HtmlBodyPart . \u4e3aBody Part\u5143\u7d20\u6e32\u67d3\u3002\u6b64\u8c03\u7528\u5c06\u5220\u9664\u540d\u4e3a\u201cHtmlBodyPart\u201d\u7684\u7279\u5b9a\u5f62\u72b6\u3002 shape_pager shape_pager Replaces the properties of a Pager shape. \u66ff\u6362\u5bfb\u547c\u673a\u5f62\u72b6\u7684\u5c5e\u6027\u3002 Input \u8f93\u5165 {% shape_pager Model.Pager next_class: 'next', next_text: '>>' %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_pager Model.Pager next_class\uff1a'next'\uff0cnext_text\uff1a'>>'\uff05}</font> shape_build_display shape_build_display Creates the display shape for a content item. It can be used in conjunction with shape_render \u521b\u5efa\u5185\u5bb9\u9879\u7684\u663e\u793a\u5f62\u72b6\u3002\u5b83\u53ef\u4ee5\u4e0e shape_render \u4e00\u8d77\u4f7f\u7528 to render a content item. \u5448\u73b0\u5185\u5bb9\u9879\u3002 Input \u8f93\u5165 {{ mycontentitem | shape_build_display: \"Detail\" | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{mycontentitem | shape_build_display\uff1a\u201c\u7ec6\u8282\u201d| shape_render}}</font> shape \u5f62\u72b6 Renders a specific named tag with its properties \u4f7f\u7528\u5176\u5c5e\u6027\u5448\u73b0\u7279\u5b9a\u7684\u547d\u540d\u6807\u8bb0 Input \u8f93\u5165 {% shape \"menu\", alias: \"alias:main-menu\", cache_id: \"main-menu\", cache_expires_after: \"00:05:00\", cache_tag: \"alias:main-menu\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape\u201cmenu\u201d\uff0c\u522b\u540d\uff1a\u201calias\uff1amain-menu\u201d\uff0ccache_id\uff1a\u201cmain-menu\u201d\uff0ccache_expires_after\uff1a\u201c00\uff1a05\uff1a00\u201d\uff0ccache_tag\uff1a\u201calias\uff1amain-menu\u201d\uff05}</font> When using the shape tag a specific wrapper and / or alternate can be specified. \u4f7f\u7528\u5f62\u72b6\u6807\u8bb0\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u7279\u5b9a\u7684\u5305\u88c5\u548c/\u6216\u66ff\u6362\u3002 {% shape \"menu\", alias: \"alias:main-menu\", alternate: \"Menu_Footer\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape\u201cmenu\u201d\uff0c\u522b\u540d\uff1a\u201calias\uff1amain-menu\u201d\uff0calternate\uff1a\u201cMenu_Footer\u201d\uff05}</font> zone \u533a Renders some HTML content in the specified zone. \u5728\u6307\u5b9a\u533a\u57df\u4e2d\u5448\u73b0\u4e00\u4e9bHTML\u5185\u5bb9\u3002 Input \u8f93\u5165 {% zone \"Header\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05zone\u201c\u6807\u9898\u201d\uff05}</font> <!-- some content goes here --> {% endzone %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endzone\uff05}</font> The content of this block can then be reused from the Layout using the {{ Model.Header | shape_render }} code. \u7136\u540e\u53ef\u4ee5\u4f7f\u7528 {{Model.Header |\u3002 - \u4ece\u5e03\u5c40\u91cd\u7528\u8be5\u5757\u7684\u5185\u5bb9shape_render}} \u4ee3\u7801\u3002 Tag Helper tags Tag Helper\u6807\u7b7e ASP.NET Core MVC provides a set of tag helpers to render predefined HTML outputs. The Liquid module provides a way to call into these Tag Helpers using custom liquid tags. ASP.NET Core MVC\u63d0\u4f9b\u4e86\u4e00\u7ec4\u6807\u8bb0\u5e2e\u52a9\u5668\u6765\u5448\u73b0\u9884\u5b9a\u4e49\u7684HTML\u8f93\u51fa\u3002 Liquid\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u79cd\u4f7f\u7528\u81ea\u5b9a\u4e49\u6db2\u4f53\u6807\u7b7e\u8c03\u7528\u8fd9\u4e9bTag Helpers\u7684\u65b9\u6cd5\u3002 link \u94fe\u63a5 Invokes the link tag helper from the Orchard.ResourceManagement package. \u4ece Orchard.ResourceManagement \u5305\u8c03\u7528 link \u6807\u7b7e\u52a9\u624b\u3002 meta \u5143 Invokes the meta tag helper from the Orchard.ResourceManagement package. \u4ece Orchard.ResourceManagement \u5305\u8c03\u7528 meta \u6807\u7b7e\u5e2e\u52a9\u5668\u3002 resources \u8d44\u6e90 Invokes the resources tag helper from the Orchard.ResourceManagement package. \u4ece Orchard.ResourceManagement \u5305\u4e2d\u8c03\u7528 resources \u6807\u7b7e\u5e2e\u52a9\u5668\u3002 script \u811a\u672c Invokes the script tag helper from the Orchard.ResourceManagement package. \u4ece Orchard.ResourceManagement \u5305\u8c03\u7528 script \u6807\u7b7e\u5e2e\u52a9\u5668\u3002 style \u6837\u5f0f Invokes the style tag helper from the Orchard.ResourceManagement package. \u4ece Orchard.ResourceManagement \u5305\u4e2d\u8c03\u7528 style \u6807\u7b7e\u52a9\u624b\u3002 a \u4e00\u4e2a Invokes the a content link tag helper from the OrchardCore.Contents package. \u4ece OrchardCore.Contents \u5305\u4e2d\u8c03\u7528 a \u5185\u5bb9\u94fe\u63a5\u6807\u8bb0\u52a9\u624b\u3002 antiforgerytoken antiforgerytoken Renders a <hidden> element (antiforgery token) that will be validated when the containing <form> is submitted. \u5448\u73b0\u4e00\u4e2a <hidden> \u5143\u7d20\uff08\u9632\u4f2a\u6807\u8bb0\uff09\uff0c\u5f53\u63d0\u4ea4\u5305\u542b\u201c \u201d\u65f6\u5c06\u5bf9\u5176\u8fdb\u884c\u9a8c\u8bc1\u3002 Example \u4f8b {% antiforgerytoken %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05antiforgerytoken\uff05}</font> CREDITS \u5b66\u5206 Fluid \u6d41\u4f53 https://github.com/sebastienros/fluid https://github.com/sebastienros/fluid Copyright (c) 2017 Sebastien Ros \u7248\u6743\u6240\u6709\uff08c\uff092017 Sebastien Ros MIT License MIT\u8bb8\u53ef\u8bc1","title":"Liquid"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#liquid-orchardcoreliquid","text":"","title":"Liquid (OrchardCore.Liquid)"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#orchardcoreliquid","text":"This module provides a way to create templates securely from the admin site. \u6b64\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u79cd\u4ece\u7ba1\u7406\u7ad9\u70b9\u5b89\u5168\u5730\u521b\u5efa\u6a21\u677f\u7684\u65b9\u6cd5\u3002 For more information about the Liquid syntax, please refer to this site: https://shopify.github.io/liquid/ \u6709\u5173Liquid\u8bed\u6cd5\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6b64\u7ad9\u70b9\uff1a https://shopify.github.io/liquid/","title":"\u6db2\u4f53\uff08OrchardCore.Liquid\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#general-concepts","text":"","title":"General concepts"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_1","text":"","title":"\u4e00\u822c\u6982\u5ff5"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#html-escaping","text":"","title":"HTML escaping"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#html","text":"All outputs are encoded into HTML by default. \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u8f93\u51fa\u90fd\u7f16\u7801\u4e3aHTML\u3002 This means that any HTML reserved chars will be converted to the corresponding HTML entities. \u8fd9\u610f\u5473\u7740\u4efb\u4f55HTML\u4fdd\u7559\u7684\u5b57\u7b26\u90fd\u5c06\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684HTML\u5b9e\u4f53\u3002 If you need to render some raw HTML chars you can use the Raw filter. \u5982\u679c\u9700\u8981\u6e32\u67d3\u4e00\u4e9b\u539f\u59cbHTML\u5b57\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528 Raw \u8fc7\u6ee4\u5668\u3002","title":"HTML\u8f6c\u4e49"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#content-item-filters","text":"","title":"Content Item Filters"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_2","text":"All the default filters that are available in the standard Liquid syntax are available in OrchardCore. OrchardCore\u4e2d\u63d0\u4f9b\u4e86\u6807\u51c6Liquid\u8bed\u6cd5\u4e2d\u53ef\u7528\u7684\u6240\u6709\u9ed8\u8ba4\u8fc7\u6ee4\u5668\u3002 On top of that each Orchard module can provide custom filters for their own purpose. \u6700\u91cd\u8981\u7684\u662f\uff0c\u6bcf\u4e2aOrchard\u6a21\u5757\u90fd\u53ef\u4ee5\u4e3a\u81ea\u5df1\u7684\u76ee\u7684\u63d0\u4f9b\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u3002 Here is a list of common filters that apply to content items. \u4ee5\u4e0b\u662f\u9002\u7528\u4e8e\u5185\u5bb9\u9879\u7684\u5e38\u7528\u8fc7\u6ee4\u5668\u5217\u8868\u3002","title":"\u5185\u5bb9\u9879\u8fc7\u6ee4\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#display_url","text":"","title":"display_url"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#display_url_1","text":"Returns the URL of the content item \u8fd4\u56de\u5185\u5bb9\u9879\u7684URL Input \u8f93\u5165 {{ Model.ContentItem | display_url }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem | display_url}}</font> Output \u4ea7\u91cf /blog/my-blog-post <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">/\u535a\u5ba2/\u6211 - \u535a\u5ba2 - \u5c97\u4f4d</font>","title":"DISPLAY_URL"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#display_text","text":"","title":"display_text"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#display_text_1","text":"Returns the title of the content item \u8fd4\u56de\u5185\u5bb9\u9879\u7684\u6807\u9898 Input \u8f93\u5165 {{ Model.ContentItem | display_text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem | display_text}}</font> Output \u4ea7\u91cf My Blog Post <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u6211\u7684\u535a\u6587</font>","title":"DISPLAY_TEXT"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#slugify","text":"","title":"slugify"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#slugify_1","text":"Convert a text into a string that can be used in a URL. \u5c06\u6587\u672c\u8f6c\u6362\u4e3a\u53ef\u5728URL\u4e2d\u4f7f\u7528\u7684\u5b57\u7b26\u4e32\u3002 Input \u8f93\u5165 {{ \"This is some text\" | slugify }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u201c\u8fd9\u662f\u4e00\u4e9b\u6587\u5b57\u201d| slugify}}</font> Output \u4ea7\u91cf this-is-some-text <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u8fd9 - \u662f - \u4e00\u4e9b\u6587\u672c</font>","title":"slugify"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#container","text":"","title":"container"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_3","text":"Returns the container content item of another content item. \u8fd4\u56de\u53e6\u4e00\u4e2a\u5185\u5bb9\u9879\u7684\u5bb9\u5668\u5185\u5bb9\u9879\u3002 Input \u8f93\u5165 {{ Model.ContentItem | container | display_text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem |\u5bb9\u5668| display_text}}</font> In this example we assume ContentItem represents a blog post. \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5047\u8bbe ContentItem \u4ee3\u8868\u535a\u5ba2\u6587\u7ae0\u3002 Output \u4ea7\u91cf Blog <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u535a\u5ba2</font>","title":"\u5bb9\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#local","text":"","title":"local"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_4","text":"Converts a UTC date and time to the local date and time based on the site settings. \u6839\u636e\u7ad9\u70b9\u8bbe\u7f6e\u5c06UTC\u65e5\u671f\u548c\u65f6\u95f4\u8f6c\u6362\u4e3a\u672c\u5730\u65e5\u671f\u548c\u65f6\u95f4\u3002 Input \u8f93\u5165 {{ \"now\" | local | date: \"%c\" }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u201cnow\u201d|\u5f53\u5730\u7684|\u65e5\u671f\uff1a\u201c\uff05c\u201d}}</font> or \u8981\u4e48 {{ Model.ContentItem.CreatedUtc | local | date: \"%c\" }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem.CreatedUtc |\u5f53\u5730\u7684|\u65e5\u671f\uff1a\u201c\uff05c\u201d}}</font> Output \u4ea7\u91cf Wednesday, 02 August 2017 11:54:48 <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">2017\u5e748\u67082\u65e5\u661f\u671f\u4e0911:54:48</font>","title":"\u672c\u5730"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#t","text":"","title":"t"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#t_1","text":"Localizes a string using the current culture. \u4f7f\u7528\u5f53\u524d\u6587\u5316\u672c\u5730\u5316\u5b57\u7b26\u4e32\u3002 Input \u8f93\u5165 {{ \"Hello!\" | t }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{ \u201c\u4f60\u597d\uff01\u201d | t}}</font> Output \u4ea7\u91cf Bonjour! <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f60\u597d\uff01</font>","title":"\u0164"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#html_class","text":"","title":"html_class"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#html_class_1","text":"Converts a string into a friendly HTML class. \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u53cb\u597d\u7684HTML\u7c7b\u3002 Input \u8f93\u5165 {{ \"LandingPage\" | html_class }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u201cLandingPage\u201d| html_class}}</font> Output \u4ea7\u91cf landing-page <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u767b\u9646\u9875\u9762</font>","title":"html_class"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#markdownify","text":"","title":"Markdownify"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#markdownify_1","text":"Converts a Markdown string to HTML. \u5c06Markdown\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3aHTML\u3002 Input \u8f93\u5165 {{ \"### Services\" | markdownify }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u201c###\u670d\u52a1\u201d|\u964d\u4ef7}}</font> Output \u4ea7\u91cf <h3>Services</h3> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><H3>\u670d\u52a1</ H3></font>","title":"Markdownify"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#properties","text":"","title":"Properties"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_5","text":"By default the liquid templates have access to a common set of objects. \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6db2\u4f53\u6a21\u677f\u53ef\u4ee5\u8bbf\u95ee\u4e00\u7ec4\u516c\u5171\u5bf9\u8c61\u3002","title":"\u5c5e\u6027"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#modelcontent","text":"","title":"Model.Content"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#modelcontent_1","text":"When available, a zone shape that contains all the shapes generated by the content's parts and fields. \u53ef\u7528\u65f6\uff0c\u533a\u57df\u5f62\u72b6\u5305\u542b\u5185\u5bb9\u7684\u90e8\u4ef6\u548c\u5b57\u6bb5\u751f\u6210\u7684\u6240\u6709\u5f62\u72b6\u3002","title":"Model.Content"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#modelcontentitem","text":"","title":"Model.ContentItem"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#modelcontentitem_1","text":"When available, represents the current content item being rendered. \u53ef\u7528\u65f6\uff0c\u8868\u793a\u6b63\u5728\u5448\u73b0\u7684\u5f53\u524d\u5185\u5bb9\u9879\u3002 The following properties are available on the ContentItem object. ContentItem \u5bf9\u8c61\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Example | Description | |\u8d22\u4ea7|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Id | 12 | The id of the document in the database | | Id | 12 |\u6570\u636e\u5e93\u4e2d\u6587\u6863\u7684ID | | ContentItemId | 4qs7mv9xc4ttg5ktm61qj9dy5d | The common identifier of all versions of the content item | | ContentItemId | 4qs7mv9xc4ttg5ktm61qj9dy5d |\u5185\u5bb9\u9879\u7684\u6240\u6709\u7248\u672c\u7684\u516c\u5171\u6807\u8bc6\u7b26 | ContentItemVersionId | 4jp895achc3hj1qy7xq8f10nmv | The unique identifier of the content item version | | ContentItemVersionId | 4jp895achc3hj1qy7xq8f10nmv |\u5185\u5bb9\u9879\u7248\u672c\u7684\u552f\u4e00\u6807\u8bc6\u7b26 | Number | 6 | The version number | | Number | 6 |\u7248\u672c\u53f7| | Owner | admin | The username of the creator of this content item | | '\u6240\u6709\u8005'| admin |\u6b64\u5185\u5bb9\u9879\u7684\u521b\u5efa\u8005\u7684\u7528\u6237\u540d | Author | admin | The username of the editor of this version | | \u4f5c\u8005 | admin |\u6b64\u7248\u672c\u7684\u7f16\u8f91\u5668\u7684\u7528\u6237\u540d| | Published | true | Whether this content item version is published or not | | \u5df2\u53d1\u5e03 | true |\u662f\u5426\u53d1\u5e03\u6b64\u5185\u5bb9\u9879\u7248\u672c| | Latest | true | Whether this content item version is the latest of the content item | | Latest | true |\u6b64\u5185\u5bb9\u9879\u7248\u672c\u662f\u5426\u662f\u6700\u65b0\u7684\u5185\u5bb9\u9879| | ContentType | BlogPost | The content type | | ContentType | BlogPost |\u5185\u5bb9\u7c7b\u578b| | CreatedUtc | 2017-05-25 00:27:22.647 | When the content item was first created or first published | | CreatedUtc | 2017-05-25 00\uff1a27\uff1a22.647 |\u9996\u6b21\u521b\u5efa\u6216\u9996\u6b21\u53d1\u5e03\u5185\u5bb9\u9879\u65f6 | ModifiedUtc | 2017-05-25 00:27:22.647 | When the content item version was created | | ModifiedUtc | 2017-05-25 00\uff1a27\uff1a22.647 |\u521b\u5efa\u5185\u5bb9\u9879\u7248\u672c\u65f6| | PublishedUtc | 2017-05-25 00:27:22.647 | When the content item was last published | | PublishedUtc | 2017-05-25 00\uff1a27\uff1a22.647 |\u4e0a\u6b21\u53d1\u5e03\u5185\u5bb9\u9879\u65f6| | Content | { ... } | A document containing all the content properties. See specific documentation for usage .| | \u5185\u5bb9 | {...} |\u5305\u542b\u6240\u6709\u5185\u5bb9\u5c5e\u6027\u7684\u6587\u6863\u3002\u6709\u5173\u7528\u6cd5\uff0c\u8bf7\u53c2\u9605\u7279\u5b9a\u6587\u6863","title":"Model.ContentItem"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#content-property","text":"","title":"Content property"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_6","text":"The Content property of a content item exposes all its elements, like parts and fields. It is possible to \u5185\u5bb9\u9879\u7684\u201cContent\u201d\u5c5e\u6027\u516c\u5f00\u5176\u6240\u6709\u5143\u7d20\uff0c\u5982\u90e8\u5206\u548c\u5b57\u6bb5\u3002\u6709\u53ef\u80fd inspect all the available properties by evaluating Content directly. It will then render the full document. \u901a\u8fc7\u76f4\u63a5\u8bc4\u4f30 Content \u6765\u68c0\u67e5\u6240\u6709\u53ef\u7528\u7684\u5c5e\u6027\u3002\u7136\u540e\u5b83\u5c06\u5448\u73b0\u5b8c\u6574\u7684\u6587\u6863\u3002 The convention is that each Part is exposed by its name as the first level. \u60ef\u4f8b\u662f\u6bcf\u4e2aPart\u90fd\u4ee5\u5176\u540d\u79f0\u4f5c\u4e3a\u7b2c\u4e00\u7ea7\u516c\u5f00\u3002 If the content item has custom fields, they will be available under a part whose name will match the content type. \u5982\u679c\u5185\u5bb9\u9879\u5177\u6709\u81ea\u5b9a\u4e49\u5b57\u6bb5\uff0c\u5219\u5b83\u4eec\u5c06\u5728\u540d\u79f0\u4e0e\u5185\u5bb9\u7c7b\u578b\u5339\u914d\u7684\u90e8\u4ef6\u4e0b\u53ef\u7528\u3002 For example, assuming the type Product has a Text field named Size , access the value of this field for a \u4f8b\u5982\uff0c\u5047\u8bbe\u7c7b\u578b Product \u6709\u4e00\u4e2a\u540d\u4e3a Size \u7684\u6587\u672c\u5b57\u6bb5\uff0c\u8bf7\u8bbf\u95ee\u8be5\u5b57\u6bb5\u7684\u503c content item as follows: \u5185\u5bb9\u9879\u76ee\u5982\u4e0b\uff1a {{ Model.ContentItem.Content.Product.Size.Text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem.Content.Product.Size.Text}}</font> Similarly, if the content item has a Title part, we can access it like this: \u7c7b\u4f3c\u5730\uff0c\u5982\u679c\u5185\u5bb9\u9879\u5177\u6709\u201c\u6807\u9898\u201d\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u8fd9\u6837\u8bbf\u95ee\u5b83\uff1a {{ Model.ContentItem.Content.TitlePart.Title }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.ContentItem.Content.TitlePart.Title}}</font>","title":"\u5185\u5bb9\u5c5e\u6027"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#user","text":"","title":"User"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_7","text":"Represents the authenticated user for the current request. \u8868\u793a\u5f53\u524d\u8bf7\u6c42\u7684\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u3002 The following properties are available on the User object. \u201cUser\u201d\u5bf9\u8c61\u4e0a\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Example | Description | |\u8d22\u4ea7|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Identity.Name | admin | The name of the authenticated user | | Identity.Name | admin |\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u7684\u540d\u79f0","title":"\u7528\u6237"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#site","text":"","title":"Site"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_8","text":"Gives access to the current site settings, e.g Site.SiteName . \u63d0\u4f9b\u5bf9\u5f53\u524d\u7ad9\u70b9\u8bbe\u7f6e\u7684\u8bbf\u95ee\uff0c\u4f8b\u5982\u201cSite.SiteName\u201d\u3002 | Property | Example | Description | |\u8d22\u4ea7|\u793a\u4f8b|\u8bf4\u660e| | -------- | ------- |------------ | | -------- | ------- | ------------ | | BaseUrl | | The base URL of the site | | BaseUrl | |\u7ad9\u70b9\u7684\u57fa\u672cURL | | Calendar | | The site's calendar | | \u65e5\u5386 | |\u8be5\u7f51\u7ad9\u7684\u65e5\u5386| | Culture | en-us | The site's default culture as an ISO language code | | \u6587\u5316 | en-us |\u8be5\u7f51\u7ad9\u7684\u9ed8\u8ba4\u6587\u5316\u4e3aISO\u8bed\u8a00\u4ee3\u7801| | MaxPagedCount | 0 | The maximum number of pages that can be paged | | MaxPagedCount | 0 |\u53ef\u4ee5\u5206\u9875\u7684\u6700\u5927\u9875\u6570 | MaxPageSize | 100 | The maximum page size that can be set by a user | | MaxPageSize | 100 |\u7528\u6237\u53ef\u4ee5\u8bbe\u7f6e\u7684\u6700\u5927\u9875\u9762\u5927\u5c0f | PageSize | 10 | The default page size of lists | | PageSize | 10 |\u5217\u8868\u7684\u9ed8\u8ba4\u9875\u9762\u5927\u5c0f| | SiteName | My Site | The friendly name of the site | | SiteName | \u6211\u7684\u7f51\u7ad9 |\u7f51\u7ad9\u7684\u53cb\u597d\u540d\u79f0| | SuperUser | admin | The user name of the site's super user | | \u8d85\u7ea7\u7528\u6237 | admin |\u7ad9\u70b9\u7684\u8d85\u7ea7\u7528\u6237\u7684\u7528\u6237\u540d| | TimeZoneId | America/Los_Angeles | The site's time zone id as per the tz database, c.f., https://en.wikipedia.org/wiki/List_of_tz_database_time_zones | | TimeZoneId | America / Los_Angeles |\u8be5\u7f51\u7ad9\u7684\u65f6\u533aID\u6839\u636etz\u6570\u636e\u5e93\uff0cc.f\u3002\uff0chttps\uff1a//en.wikipedia.org/wiki/List_of_tz_database_time_zones | | UseCdn | false | Enable/disable the use of a CDN | | UseCdn | false |\u542f\u7528/\u7981\u7528CDN\u7684\u4f7f\u7528","title":"\u73b0\u573a"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#request","text":"","title":"Request"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_9","text":"Represents the current request. \u8868\u793a\u5f53\u524d\u8bf7\u6c42\u3002 The following properties are available on the Request object. \u201cRequest\u201d\u5bf9\u8c61\u4e0a\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Example | Description | |\u8d22\u4ea7|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | QueryString | ?sort=name&page=1 | The query string | | QueryString | \uff1fsort = name\uff06page = 1 |\u67e5\u8be2\u5b57\u7b26\u4e32| | ContentType | application/x-www-form-urlencoded; charset=UTF-8 | The Content-Type header | | ContentType | \u5e94\u7528\u7a0b\u5e8f/ x-WWW\u7a97\u4f53-urlencoded; charset = UTF-8 | Content-Type \u6807\u9898| | ContentLength | 600 | The Content-Length header | | ContentLength | 600 | Content-Length \u6807\u9898| | Cookies | Usage: Request.Cookies.orchauth_Default | The collection of cookies for this request | | Cookies |\u7528\u6cd5\uff1a Request.Cookies.orchauth_Default |\u6b64\u8bf7\u6c42\u7684cookie\u96c6\u5408| | Headers | Usage: Request.Headers.accept | The request headers | | \u6807\u9898 |\u7528\u6cd5\uff1a Request.Headers.accept |\u8bf7\u6c42\u6807\u5934| | Query | Usage: Request.Query.sort | The query value collection parsed from QueryString | | \u67e5\u8be2 |\u7528\u6cd5\uff1a Request.Query.sort |\u67e5\u8be2\u503c\u96c6\u5408\u4ece QueryString |\u89e3\u6790 | Form | Usage: Request.Form.value | The collection of form values | | Form |\u7528\u6cd5\uff1a Request.Form.value |\u8868\u5355\u503c\u7684\u96c6\u5408| | Protocol | https | The protocol of this request | | Protocol | https |\u6b64\u8bf7\u6c42\u7684\u534f\u8bae| | Path | /OrchardCore.ContentPreview/Preview/Render | The path of the request, unescaped | | Path | / OrchardCore.ContentPreview / Preview / Render |\u8bf7\u6c42\u7684\u8def\u5f84\uff0c\u672a\u8f6c\u4e49| | PathBase | /mytenant | The base path of the request, unescaped | | PathBase | / mytenant |\u8bf7\u6c42\u7684\u57fa\u672c\u8def\u5f84\uff0c\u672a\u8f6c\u4e49| | Host | localhost:44300 | The Host header. May contain the port | | \u4e3b\u6301\u4eba| localhost\uff1a44300 | Host`\u6807\u9898\u3002\u53ef\u80fd\u5305\u542b\u7aef\u53e3| | IsHttps | true | True if the scheme of the request is https | | IsHttps | true |\u5982\u679c\u8bf7\u6c42\u7684\u65b9\u6848\u662f\u201chttps\u201d|\uff0c\u5219\u4e3aTrue | Scheme | https | The scheme of the request | | Scheme | https |\u8bf7\u6c42\u7684\u65b9\u6848| | Method | GET | The HTTP method | | \u65b9\u6cd5 | GET | HTTP\u65b9\u6cd5|","title":"\u8bf7\u6c42"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#culture","text":"","title":"Culture"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_10","text":"Represents the current culture. \u4ee3\u8868\u5f53\u524d\u7684\u6587\u5316\u3002 The following properties are available on the Culture object. Culture \u5bf9\u8c61\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Example | Description | |\u8d22\u4ea7|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Name | en-US | The requests's culture as an ISO language code | | \u59d3\u540d | en-US |\u8bf7\u6c42\u7684\u6587\u5316\u4f5c\u4e3aISO\u8bed\u8a00\u4ee3\u7801| | Dir | rtl | The text writing directionality | | Dir | rtl |\u6587\u5b57\u5199\u4f5c\u65b9\u5411\u6027|","title":"\u6587\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape-filters","text":"","title":"Shape Filters"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_11","text":"These filters let you create and filter shapes. \u4f7f\u7528\u8fd9\u4e9b\u8fc7\u6ee4\u5668\u53ef\u4ee5\u521b\u5efa\u548c\u8fc7\u6ee4\u5f62\u72b6\u3002","title":"\u5f62\u72b6\u6ee4\u955c"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_new","text":"","title":"shape_new"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_new_1","text":"Returns a shape with the specified name as input. \u8fd4\u56de\u5177\u6709\u6307\u5b9a\u540d\u79f0\u4f5c\u4e3a\u8f93\u5165\u7684\u5f62\u72b6\u3002 Input \u8f93\u5165 {% assign date_time = \"DateTime\" | shape_new %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign date_time =\u201cDateTime\u201d| shape_new\uff05}</font>","title":"shape_new"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_render","text":"","title":"shape_render"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_render_1","text":"Renders a shape. \u6e32\u67d3\u5f62\u72b6\u3002 Input \u8f93\u5165 {{ Model.Content | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content | shape_render}}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font>","title":"shape_render"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_stringify","text":"","title":"shape_stringify"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_stringify_1","text":"Converts a shape to its string representation. Contrary to shape_render the result of this filter will \u5c06\u5f62\u72b6\u8f6c\u6362\u4e3a\u5176\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u3002\u4e0e shape_render \u76f8\u53cd\uff0c\u6b64\u8fc7\u6ee4\u5668\u7684\u7ed3\u679c\u5c06\u662f be encoded if rendered in the output. \u5982\u679c\u5728\u8f93\u51fa\u4e2d\u5448\u73b0\uff0c\u5219\u8fdb\u884c\u7f16\u7801\u3002 Input \u8f93\u5165 {{ \"DateTime\" | shape_new | shape_stringify }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u201cDateTime\u201d| shape_new | shape_stringify}}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> Output \u4ea7\u91cf Monday, September 11, 2017 3:29:26 PM <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">2017\u5e749\u670811\u65e5\u661f\u671f\u4e00\u4e0b\u53483:29:26</font>","title":"shape_stringify"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#layout-tags","text":"","title":"Layout Tags"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_12","text":"","title":"\u5e03\u5c40\u6807\u7b7e"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#layout","text":"","title":"layout"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_13","text":"Sets the layout of a view. \u8bbe\u7f6e\u89c6\u56fe\u7684\u5e03\u5c40\u3002 Input \u8f93\u5165 {% layout \"CustomLayout\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05layout\u201cCustomLayout\u201d\uff05}</font> Internally an alternate is added to the current theme Layout shape. \u5728\u5185\u90e8\uff0c\u66ff\u4ee3\u54c1\u88ab\u6dfb\u52a0\u5230\u5f53\u524d\u4e3b\u9898\u201c\u5e03\u5c40\u201d\u5f62\u72b6\u4e2d\u3002","title":"\u5e03\u5c40"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#render_body","text":"","title":"render_body"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#render_body_1","text":"In a layout, renders the body of the current view. \u5728\u5e03\u5c40\u4e2d\uff0c\u5448\u73b0\u5f53\u524d\u89c6\u56fe\u7684\u4e3b\u4f53\u3002 Input \u8f93\u5165 {% render_body %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05render_body\uff05}</font>","title":"render_body"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#render_section","text":"","title":"render_section"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#render_section_1","text":"In a layout, renders the section with the specified name. \u5728\u5e03\u5c40\u4e2d\uff0c\u4f7f\u7528\u6307\u5b9a\u7684\u540d\u79f0\u5448\u73b0\u8282\u3002 Input \u8f93\u5165 {% render_section \"Header\", required: false %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05render_section\u201c\u6807\u9898\u201d\uff0c\u5fc5\u586b\uff1afalse\uff05}</font>","title":"render_section"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#page_title","text":"","title":"page_title"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_14","text":"Alters and renders the title of the current page. \u66f4\u6539\u5e76\u5448\u73b0\u5f53\u524d\u9875\u9762\u7684\u6807\u9898\u3002 Input \u8f93\u5165 {% page_title Site.SiteName, position: \"before\", separator: \" - \" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05page_title Site.SiteName\uff0cposition\uff1a\u201cbefore\u201d\uff0cseparator\uff1a\u201c - \u201d\uff05}</font> The default parameter is a text that is appended to the current value of the title. \u9ed8\u8ba4\u53c2\u6570\u662f\u9644\u52a0\u5230\u6807\u9898\u5f53\u524d\u503c\u7684\u6587\u672c\u3002 position is where the value is appended, in this example at the beginning. separator is a string that is used to separate all the fragments of the title.","title":"\u9875\u9762\u6807\u9898"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape-tags","text":"","title":"Shape Tags"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_15","text":"","title":"\u5f62\u72b6\u6807\u7b7e"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_clear_alternates","text":"","title":"shape_clear_alternates"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_clear_alternates_1","text":"Removes any alternates from a shape. \u4ece\u5f62\u72b6\u4e2d\u5220\u9664\u4efb\u4f55\u66ff\u6362\u3002 Input \u8f93\u5165 {% shape_clear_alternates my_shape %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_clear_alternates my_shape\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font>","title":"shape_clear_alternates"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_add_alternates","text":"","title":"shape_add_alternates"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_add_alternates_1","text":"Adds alternates to a shape. \u6dfb\u52a0\u66ff\u4ee3\u5f62\u72b6\u3002 Input \u8f93\u5165 {% shape_add_alternates my_shape \"alternate1\", \"alternate2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_alternates my_shape\u201calternate1\u201d\uff0c\u201calternate2\u201d\uff05}</font> {% shape_add_alternates my_shape \"alternate1 alternate2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_alternates my_shape\u201calternate1 alternate2\u201d\uff05}</font>","title":"shape_add_alternates"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_clear_wrappers","text":"","title":"shape_clear_wrappers"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_clear_wrappers_1","text":"Removes any wrappers from a shape. \u4ece\u5f62\u72b6\u4e2d\u79fb\u9664\u4efb\u4f55\u5305\u88c5\u3002 Input \u8f93\u5165 {% shape_clear_wrappers my_shape %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_clear_wrappers my_shape\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font>","title":"shape_clear_wrappers"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_add_wrappers","text":"","title":"shape_add_wrappers"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_add_wrappers_1","text":"Adds wrappers to a shape. \u5c06\u5305\u88c5\u5668\u6dfb\u52a0\u5230\u5f62\u72b6\u3002 Input \u8f93\u5165 {% shape_add_wrappers my_shape \"wrapper1\", \"wrapper2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_wrappers my_shape\u201cwrapper1\u201d\uff0c\u201cwrapper2\u201d\uff05}</font> {% shape_add_wrappers my_shape \"wrapper1 wrapper2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_wrappers my_shape\u201cwrapper1 wrapper2\u201d\uff05}</font>","title":"shape_add_wrappers"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_clear_classes","text":"","title":"shape_clear_classes"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_clear_classes_1","text":"Removes any classes from a shape. \u4ece\u5f62\u72b6\u4e2d\u5220\u9664\u4efb\u4f55\u7c7b\u3002 Input \u8f93\u5165 {% shape_clear_classes my_shape %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_clear_classes my_shape\uff05}</font>","title":"shape_clear_classes"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_add_classes","text":"","title":"shape_add_classes"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_add_classes_1","text":"Adds classes to a shape. \u5c06\u7c7b\u6dfb\u52a0\u5230\u5f62\u72b6\u3002 Input \u8f93\u5165 {% shape_add_classes my_shape \"class1 class2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_classes my_shape\u201cclass1 class2\u201d\uff05}</font> {% shape_add_classes my_shape \"class1\", \"class2\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_classes my_shape\u201cclass1\u201d\uff0c\u201cclass2\u201d\uff05}</font>","title":"shape_add_classes"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_clear_attributes","text":"","title":"shape_clear_attributes"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_clear_attributes_1","text":"Removes any attributes from a shape. \u4ece\u5f62\u72b6\u4e2d\u5220\u9664\u4efb\u4f55\u5c5e\u6027\u3002 Input \u8f93\u5165 {% shape_clear_attributes my_shape %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_clear_attributes my_shape\uff05}</font>","title":"shape_clear_attributes"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_add_attributes","text":"","title":"shape_add_attributes"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_add_attributes_1","text":"Adds attributes to a shape. \u5c06\u5c5e\u6027\u6dfb\u52a0\u5230\u5f62\u72b6\u3002 Input \u8f93\u5165 {% shape_add_attributes my_shape attr_name1: \"value1\", attr_name2: \"value2\" ... %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_attributes my_shape attr_name1\uff1a\u201cvalue1\u201d\uff0cattr_name2\uff1a\u201cvalue2\u201d...\uff05}</font>","title":"shape_add_attributes"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_type","text":"","title":"shape_type"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_type_1","text":"Sets the type of a shape. \u8bbe\u7f6e\u5f62\u72b6\u7684\u7c7b\u578b\u3002 Input \u8f93\u5165 {% shape_type my_shape \"MyType\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_type my_shape\u201cMyType\u201d\uff05}</font> Whenever the type is changed, it is recommended to clear the shape alternates before using the shape_clear_alternates tag. \u6bcf\u5f53\u66f4\u6539\u7c7b\u578b\u65f6\uff0c\u5efa\u8bae\u5728\u4f7f\u7528 shape_clear_alternates \u6807\u8bb0\u4e4b\u524d\u4ea4\u66ff\u6e05\u9664\u5f62\u72b6\u3002","title":"SHAPE_TYPE"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_display_type","text":"","title":"shape_display_type"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_display_type_1","text":"Sets the display type of a shape. \u8bbe\u7f6e\u5f62\u72b6\u7684\u663e\u793a\u7c7b\u578b\u3002 Input \u8f93\u5165 {% shape_display_type my_shape \"Summary\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_display_type my_shape\u201c\u6458\u8981\u201d\uff05}</font> Whenever the display type is changed, it is recommended to clear the shape alternates before. \u6bcf\u5f53\u66f4\u6539\u663e\u793a\u7c7b\u578b\u65f6\uff0c\u5efa\u8bae\u5148\u4ea4\u66ff\u6e05\u9664\u5f62\u72b6\u3002","title":"shape_display_type"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_position","text":"","title":"shape_position"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_position_1","text":"Sets the position of a shape. \u8bbe\u7f6e\u5f62\u72b6\u7684\u4f4d\u7f6e\u3002 Input \u8f93\u5165 {% shape_position my_shape \"Content:before\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_position my_shape\u201c\u5185\u5bb9\uff1a\u5728\u201d\uff05}\u4e4b\u524d</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font>","title":"shape_position"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_tab","text":"","title":"shape_tab"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_tab_1","text":"Sets the tab of a shape. \u8bbe\u7f6e\u5f62\u72b6\u7684\u9009\u9879\u5361\u3002 Input \u8f93\u5165 {% shape_tab my_shape \"properties\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_tab my_shape\u201cproperties\u201d\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font>","title":"shape_tab"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_remove_item","text":"","title":"shape_remove_item"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_remove_item_1","text":"Removes a shape by its name in a Zone. \u5728\u533a\u57df\u4e2d\u5220\u9664\u5176\u540d\u79f0\u7684\u5f62\u72b6\u3002 Input \u8f93\u5165 {% shape_remove_item Model.Content \"HtmlBodyPart\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_remove_item Model.Content\u201cHtmlBodyPart\u201d\uff05}</font> {{ Model.Content | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content | shape_render}}</font> In this example, the Model.Content property evaluates to a zone shape, typically from a Content Item shape template, which contains the HtmlBodyPart shape \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c Model.Content \u5c5e\u6027\u8ba1\u7b97\u4e3a\u533a\u57df\u5f62\u72b6\uff0c\u901a\u5e38\u6765\u81eaContent Item\u5f62\u72b6\u6a21\u677f\uff0c\u5176\u4e2d\u5305\u542b HtmlBodyPart \u5f62\u72b6 rendered for the Body Part element. This call will remove the specific shape named HtmlBodyPart . \u4e3aBody Part\u5143\u7d20\u6e32\u67d3\u3002\u6b64\u8c03\u7528\u5c06\u5220\u9664\u540d\u4e3a\u201cHtmlBodyPart\u201d\u7684\u7279\u5b9a\u5f62\u72b6\u3002","title":"shape_remove_item"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_pager","text":"","title":"shape_pager"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_pager_1","text":"Replaces the properties of a Pager shape. \u66ff\u6362\u5bfb\u547c\u673a\u5f62\u72b6\u7684\u5c5e\u6027\u3002 Input \u8f93\u5165 {% shape_pager Model.Pager next_class: 'next', next_text: '>>' %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_pager Model.Pager next_class\uff1a'next'\uff0cnext_text\uff1a'>>'\uff05}</font>","title":"shape_pager"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_build_display","text":"","title":"shape_build_display"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape_build_display_1","text":"Creates the display shape for a content item. It can be used in conjunction with shape_render \u521b\u5efa\u5185\u5bb9\u9879\u7684\u663e\u793a\u5f62\u72b6\u3002\u5b83\u53ef\u4ee5\u4e0e shape_render \u4e00\u8d77\u4f7f\u7528 to render a content item. \u5448\u73b0\u5185\u5bb9\u9879\u3002 Input \u8f93\u5165 {{ mycontentitem | shape_build_display: \"Detail\" | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{mycontentitem | shape_build_display\uff1a\u201c\u7ec6\u8282\u201d| shape_render}}</font>","title":"shape_build_display"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#shape","text":"","title":"shape"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_16","text":"Renders a specific named tag with its properties \u4f7f\u7528\u5176\u5c5e\u6027\u5448\u73b0\u7279\u5b9a\u7684\u547d\u540d\u6807\u8bb0 Input \u8f93\u5165 {% shape \"menu\", alias: \"alias:main-menu\", cache_id: \"main-menu\", cache_expires_after: \"00:05:00\", cache_tag: \"alias:main-menu\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape\u201cmenu\u201d\uff0c\u522b\u540d\uff1a\u201calias\uff1amain-menu\u201d\uff0ccache_id\uff1a\u201cmain-menu\u201d\uff0ccache_expires_after\uff1a\u201c00\uff1a05\uff1a00\u201d\uff0ccache_tag\uff1a\u201calias\uff1amain-menu\u201d\uff05}</font> When using the shape tag a specific wrapper and / or alternate can be specified. \u4f7f\u7528\u5f62\u72b6\u6807\u8bb0\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u7279\u5b9a\u7684\u5305\u88c5\u548c/\u6216\u66ff\u6362\u3002 {% shape \"menu\", alias: \"alias:main-menu\", alternate: \"Menu_Footer\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape\u201cmenu\u201d\uff0c\u522b\u540d\uff1a\u201calias\uff1amain-menu\u201d\uff0calternate\uff1a\u201cMenu_Footer\u201d\uff05}</font>","title":"\u5f62\u72b6"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#zone","text":"","title":"zone"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_17","text":"Renders some HTML content in the specified zone. \u5728\u6307\u5b9a\u533a\u57df\u4e2d\u5448\u73b0\u4e00\u4e9bHTML\u5185\u5bb9\u3002 Input \u8f93\u5165 {% zone \"Header\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05zone\u201c\u6807\u9898\u201d\uff05}</font> <!-- some content goes here --> {% endzone %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endzone\uff05}</font> The content of this block can then be reused from the Layout using the {{ Model.Header | shape_render }} code. \u7136\u540e\u53ef\u4ee5\u4f7f\u7528 {{Model.Header |\u3002 - \u4ece\u5e03\u5c40\u91cd\u7528\u8be5\u5757\u7684\u5185\u5bb9shape_render}} \u4ee3\u7801\u3002","title":"\u533a"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#tag-helper-tags","text":"","title":"Tag Helper tags"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#tag-helper","text":"ASP.NET Core MVC provides a set of tag helpers to render predefined HTML outputs. The Liquid module provides a way to call into these Tag Helpers using custom liquid tags. ASP.NET Core MVC\u63d0\u4f9b\u4e86\u4e00\u7ec4\u6807\u8bb0\u5e2e\u52a9\u5668\u6765\u5448\u73b0\u9884\u5b9a\u4e49\u7684HTML\u8f93\u51fa\u3002 Liquid\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u79cd\u4f7f\u7528\u81ea\u5b9a\u4e49\u6db2\u4f53\u6807\u7b7e\u8c03\u7528\u8fd9\u4e9bTag Helpers\u7684\u65b9\u6cd5\u3002","title":"Tag Helper\u6807\u7b7e"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#link","text":"","title":"link"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_18","text":"Invokes the link tag helper from the Orchard.ResourceManagement package. \u4ece Orchard.ResourceManagement \u5305\u8c03\u7528 link \u6807\u7b7e\u52a9\u624b\u3002","title":"\u94fe\u63a5"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#meta","text":"","title":"meta"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_19","text":"Invokes the meta tag helper from the Orchard.ResourceManagement package. \u4ece Orchard.ResourceManagement \u5305\u8c03\u7528 meta \u6807\u7b7e\u5e2e\u52a9\u5668\u3002","title":"\u5143"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#resources","text":"","title":"resources"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_20","text":"Invokes the resources tag helper from the Orchard.ResourceManagement package. \u4ece Orchard.ResourceManagement \u5305\u4e2d\u8c03\u7528 resources \u6807\u7b7e\u5e2e\u52a9\u5668\u3002","title":"\u8d44\u6e90"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#script","text":"","title":"script"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_21","text":"Invokes the script tag helper from the Orchard.ResourceManagement package. \u4ece Orchard.ResourceManagement \u5305\u8c03\u7528 script \u6807\u7b7e\u5e2e\u52a9\u5668\u3002","title":"\u811a\u672c"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#style","text":"","title":"style"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_22","text":"Invokes the style tag helper from the Orchard.ResourceManagement package. \u4ece Orchard.ResourceManagement \u5305\u4e2d\u8c03\u7528 style \u6807\u7b7e\u52a9\u624b\u3002","title":"\u6837\u5f0f"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#a","text":"","title":"a"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_23","text":"Invokes the a content link tag helper from the OrchardCore.Contents package. \u4ece OrchardCore.Contents \u5305\u4e2d\u8c03\u7528 a \u5185\u5bb9\u94fe\u63a5\u6807\u8bb0\u52a9\u624b\u3002","title":"\u4e00\u4e2a"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#antiforgerytoken","text":"","title":"antiforgerytoken"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#antiforgerytoken_1","text":"Renders a <hidden> element (antiforgery token) that will be validated when the containing <form> is submitted. \u5448\u73b0\u4e00\u4e2a <hidden> \u5143\u7d20\uff08\u9632\u4f2a\u6807\u8bb0\uff09\uff0c\u5f53\u63d0\u4ea4\u5305\u542b\u201c \u201d\u65f6\u5c06\u5bf9\u5176\u8fdb\u884c\u9a8c\u8bc1\u3002 Example \u4f8b {% antiforgerytoken %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05antiforgerytoken\uff05}</font>","title":"antiforgerytoken"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#credits","text":"","title":"CREDITS"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_24","text":"","title":"\u5b66\u5206"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#fluid","text":"","title":"Fluid"},{"location":"OrchardCore.Modules/OrchardCore.Liquid/#_25","text":"https://github.com/sebastienros/fluid https://github.com/sebastienros/fluid Copyright (c) 2017 Sebastien Ros \u7248\u6743\u6240\u6709\uff08c\uff092017 Sebastien Ros MIT License MIT\u8bb8\u53ef\u8bc1","title":"\u6d41\u4f53"},{"location":"OrchardCore.Modules/OrchardCore.Lists/","text":"Lists (OrchardCore.Lists) \u5217\u8868\uff08OrchardCore.Lists\uff09 Theming \u4e3b\u9898\u5316 Shapes \u5f62\u72b6 These shapes are available for theming when a ListPart is attached to a content item. \u5f53\u201cListPart\u201d\u9644\u52a0\u5230\u5185\u5bb9\u9879\u65f6\uff0c\u8fd9\u4e9b\u5f62\u72b6\u53ef\u7528\u4e8e\u4e3b\u9898\u3002 | Name | Display Type | Default Location | Model Type | |\u540d\u79f0|\u663e\u793a\u7c7b\u578b|\u9ed8\u8ba4\u4f4d\u7f6e|\u578b\u53f7\u7c7b\u578b| | ------| ------------ |----------------- | ---------- | | ------ | ------------ | ----------------- | ---------- | | ListPart | Detail , DetailAdmin | Content:10 | ListPartViewModel | | ListPart | Detail \uff0c DetailAdmin | \u5185\u5bb9\uff1a10 | ListPartViewModel | ListPartViewModel ListPartViewModel The following properties are available on the ListPartViewModel class. ListPartViewModel \u7c7b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Type | Description | |\u8d22\u4ea7|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | ListPart | ListPart | The ListPart instance | | ListPart | ListPart | ListPart \u5b9e\u4f8b| | ContentItems | IEnumerable<ContentItem> | The content items the part is made of | | ContentItems | IEnumerable <ContentItem> |\u90e8\u4ef6\u7684\u5185\u5bb9\u9879\u7531|\u7ec4\u6210 | ContainedContentTypeDefinitions | IEnumerable<ContentTypeDefinition> | The content types the list accepts | | ContainedContentTypeDefinitions | IEnumerable <ContentTypeDefinition> |\u5217\u8868\u63a5\u53d7\u7684\u5185\u5bb9\u7c7b\u578b | Context | BuildPartDisplayContext | The current display context | | Context | BuildPartDisplayContext |\u5f53\u524d\u663e\u793a\u4e0a\u4e0b\u6587| | Pager | dynamic | The pager for the list | | \u5bfb\u547c\u673a | dynamic |\u5217\u8868\u7684\u5bfb\u547c\u673a| ListPart ListPart The following properties are available on the ListPart class. ListPart \u7c7b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Name | Type | Description | |\u540d\u79f0|\u8f93\u5165|\u8bf4\u660e| | -----| ---- |------------ | | ----- | ---- | ------------ | | Content | The raw content of the part | | \u5185\u5bb9 |\u90e8\u5206\u7684\u539f\u59cb\u5185\u5bb9| | ContentItem | The content item containing this part | | ContentItem |\u5305\u542b\u6b64\u90e8\u5206\u7684\u5185\u5bb9\u9879\u76ee Template \u6a21\u677f The following example is used to render the items of a ListPart and customize the pager. \u4ee5\u4e0b\u793a\u4f8b\u7528\u4e8e\u5448\u73b0 ListPart \u7684\u9879\u76ee\u5e76\u81ea\u5b9a\u4e49\u5bfb\u547c\u673a\u3002 For instance it can be set in a file named Blog-ListPart.liquid to override the Blog content type only. \u4f8b\u5982\uff0c\u5b83\u53ef\u4ee5\u5728\u540d\u4e3a Blog-ListPart.liquid \u7684\u6587\u4ef6\u4e2d\u8bbe\u7f6e\uff0c\u4ee5\u4ec5\u8986\u76d6 Blog \u5185\u5bb9\u7c7b\u578b\u3002 {% for item in Model.ContentItems %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05for Model.ContentItems\uff05}\u4e2d\u7684\u9879\u76ee</font> {{ item | shape_build_display: \"Summary\" | shape_render }} {% endfor %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endfor\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {% assign previousText = \"Newer Posts\" | t %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign previousText =\u201c\u8f83\u65b0\u7684\u5e16\u5b50\u201d| t\uff05}</font> {% assign nextText = \"Older Posts\" | t %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign nextText =\u201c\u8f83\u65e7\u7684\u5e16\u5b50\u201d| t\uff05}</font> {% assign previousClass = \"previous\" | t %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign previousClass =\u201cprevious\u201d| t\uff05}</font> {% assign nextClass = \"next\" | t %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign nextClass =\u201cnext\u201d| t\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {% shape_pager Model.Pager previous_text: previousText, next_text: nextText, <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_pager Model.Pager previous_text\uff1apreviousText\uff0cnext_text\uff1anextText\uff0c</font> previous_class: previousClass, next_class: nextClass %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {{ Model.Pager | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Pager | shape_render}}</font>","title":"Lists"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#lists-orchardcorelists","text":"","title":"Lists (OrchardCore.Lists)"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#orchardcorelists","text":"","title":"\u5217\u8868\uff08OrchardCore.Lists\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#theming","text":"","title":"Theming"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#_1","text":"","title":"\u4e3b\u9898\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#shapes","text":"","title":"Shapes"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#_2","text":"These shapes are available for theming when a ListPart is attached to a content item. \u5f53\u201cListPart\u201d\u9644\u52a0\u5230\u5185\u5bb9\u9879\u65f6\uff0c\u8fd9\u4e9b\u5f62\u72b6\u53ef\u7528\u4e8e\u4e3b\u9898\u3002 | Name | Display Type | Default Location | Model Type | |\u540d\u79f0|\u663e\u793a\u7c7b\u578b|\u9ed8\u8ba4\u4f4d\u7f6e|\u578b\u53f7\u7c7b\u578b| | ------| ------------ |----------------- | ---------- | | ------ | ------------ | ----------------- | ---------- | | ListPart | Detail , DetailAdmin | Content:10 | ListPartViewModel | | ListPart | Detail \uff0c DetailAdmin | \u5185\u5bb9\uff1a10 | ListPartViewModel |","title":"\u5f62\u72b6"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#listpartviewmodel","text":"","title":"ListPartViewModel"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#listpartviewmodel_1","text":"The following properties are available on the ListPartViewModel class. ListPartViewModel \u7c7b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Type | Description | |\u8d22\u4ea7|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | ListPart | ListPart | The ListPart instance | | ListPart | ListPart | ListPart \u5b9e\u4f8b| | ContentItems | IEnumerable<ContentItem> | The content items the part is made of | | ContentItems | IEnumerable <ContentItem> |\u90e8\u4ef6\u7684\u5185\u5bb9\u9879\u7531|\u7ec4\u6210 | ContainedContentTypeDefinitions | IEnumerable<ContentTypeDefinition> | The content types the list accepts | | ContainedContentTypeDefinitions | IEnumerable <ContentTypeDefinition> |\u5217\u8868\u63a5\u53d7\u7684\u5185\u5bb9\u7c7b\u578b | Context | BuildPartDisplayContext | The current display context | | Context | BuildPartDisplayContext |\u5f53\u524d\u663e\u793a\u4e0a\u4e0b\u6587| | Pager | dynamic | The pager for the list | | \u5bfb\u547c\u673a | dynamic |\u5217\u8868\u7684\u5bfb\u547c\u673a|","title":"ListPartViewModel"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#listpart","text":"","title":"ListPart"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#listpart_1","text":"The following properties are available on the ListPart class. ListPart \u7c7b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Name | Type | Description | |\u540d\u79f0|\u8f93\u5165|\u8bf4\u660e| | -----| ---- |------------ | | ----- | ---- | ------------ | | Content | The raw content of the part | | \u5185\u5bb9 |\u90e8\u5206\u7684\u539f\u59cb\u5185\u5bb9| | ContentItem | The content item containing this part | | ContentItem |\u5305\u542b\u6b64\u90e8\u5206\u7684\u5185\u5bb9\u9879\u76ee","title":"ListPart"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#template","text":"","title":"Template"},{"location":"OrchardCore.Modules/OrchardCore.Lists/#_3","text":"The following example is used to render the items of a ListPart and customize the pager. \u4ee5\u4e0b\u793a\u4f8b\u7528\u4e8e\u5448\u73b0 ListPart \u7684\u9879\u76ee\u5e76\u81ea\u5b9a\u4e49\u5bfb\u547c\u673a\u3002 For instance it can be set in a file named Blog-ListPart.liquid to override the Blog content type only. \u4f8b\u5982\uff0c\u5b83\u53ef\u4ee5\u5728\u540d\u4e3a Blog-ListPart.liquid \u7684\u6587\u4ef6\u4e2d\u8bbe\u7f6e\uff0c\u4ee5\u4ec5\u8986\u76d6 Blog \u5185\u5bb9\u7c7b\u578b\u3002 {% for item in Model.ContentItems %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05for Model.ContentItems\uff05}\u4e2d\u7684\u9879\u76ee</font> {{ item | shape_build_display: \"Summary\" | shape_render }} {% endfor %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endfor\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {% assign previousText = \"Newer Posts\" | t %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign previousText =\u201c\u8f83\u65b0\u7684\u5e16\u5b50\u201d| t\uff05}</font> {% assign nextText = \"Older Posts\" | t %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign nextText =\u201c\u8f83\u65e7\u7684\u5e16\u5b50\u201d| t\uff05}</font> {% assign previousClass = \"previous\" | t %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign previousClass =\u201cprevious\u201d| t\uff05}</font> {% assign nextClass = \"next\" | t %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign nextClass =\u201cnext\u201d| t\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {% shape_pager Model.Pager previous_text: previousText, next_text: nextText, <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_pager Model.Pager previous_text\uff1apreviousText\uff0cnext_text\uff1anextText\uff0c</font> previous_class: previousClass, next_class: nextClass %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {{ Model.Pager | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Pager | shape_render}}</font>","title":"\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Localization/","text":"Localization (OrchardCore.Localization) \u672c\u5730\u5316\uff08OrchardCore.Localization\uff09 This module provides the infrastructure necessary to support the PO (Portable Object) localization file format. \u6b64\u6a21\u5757\u63d0\u4f9b\u652f\u6301PO\uff08\u53ef\u79fb\u690d\u5bf9\u8c61\uff09\u672c\u5730\u5316\u6587\u4ef6\u683c\u5f0f\u6240\u9700\u7684\u57fa\u7840\u7ed3\u6784\u3002 It also supports plural forms. \u5b83\u8fd8\u652f\u6301\u590d\u6570\u5f62\u5f0f\u3002 PO files locations PO\u6587\u4ef6\u4f4d\u7f6e PO files are found via the following steps: PO\u6587\u4ef6\u53ef\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u627e\u5230\uff1a For each module and theme all files matching [ModuleLocation]/App_Data/Localization/[CultureName].po \u5bf9\u4e8e\u6bcf\u4e2a\u6a21\u5757\u548c\u4e3b\u9898\uff0c\u6240\u6709\u6587\u4ef6\u90fd\u5339\u914d [ModuleLocation] / App_Data / Localization / [CultureName] .po Then all files matching /App_Data/Localization/[CultureName].po \u7136\u540e\u6240\u6709\u6587\u4ef6\u5339\u914d / App_Data / Localization / [CultureName] .po For each tenant all files matching /App_Data/Sites/[TenantName]/Localization/[CultureName].po \u5bf9\u4e8e\u6bcf\u4e2a\u79df\u6237\u6240\u6709\u5339\u914d / App_Data / Sites / [TenantName] / Localization / [CultureName] .po \u7684\u6587\u4ef6 File format \u6587\u4ef6\u683c\u5f0f This article explains how PO files are organized, including plural forms. \u672c\u6587\u4ecb\u7ecd\u4e86PO\u6587\u4ef6\u7684\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u5305\u62ec\u590d\u6570\u5f62\u5f0f\u3002 https://www.gnu.org/software/gettext/manual/html_node/PO-Files.html https://www.gnu.org/software/gettext/manual/html_node/PO-Files.html Translation contexts \u7ffb\u8bd1\u80cc\u666f To prevent different PO files entries from overriding each other, entries define a context for each translation string. \u4e3a\u4e86\u9632\u6b62\u4e0d\u540c\u7684PO\u6587\u4ef6\u6761\u76ee\u76f8\u4e92\u8986\u76d6\uff0c\u6761\u76ee\u4e3a\u6bcf\u4e2a\u7ffb\u8bd1\u5b57\u7b26\u4e32\u5b9a\u4e49\u4e0a\u4e0b\u6587\u3002 For instance two views could use the string named Hello but they might have different translation. It's then necessary to \u4f8b\u5982\uff0c\u4e24\u4e2a\u89c6\u56fe\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a\u201cHello\u201d\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u5b83\u4eec\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u8f6c\u6362\u3002\u7136\u540e\u6709\u5fc5\u8981 provide two entries and specify which context is associated with each translation. In this case each view name is a context. \u63d0\u4f9b\u4e24\u4e2a\u6761\u76ee\u5e76\u6307\u5b9a\u54ea\u4e2a_context_\u4e0e\u6bcf\u4e2a\u7ffb\u8bd1\u76f8\u5173\u8054\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u89c6\u56fe\u540d\u79f0\u90fd\u662f\u4e0a\u4e0b\u6587\u3002 From a View \u4ece\u4e00\u4e2a\u89c6\u56fe The context string must match the view location up to the module folder. \u4e0a\u4e0b\u6587\u5b57\u7b26\u4e32\u5fc5\u987b\u4e0e\u89c6\u56fe\u4f4d\u7f6e\u5339\u914d\uff0c\u76f4\u5230\u6a21\u5757\u6587\u4ef6\u5939\u3002 View \u89c6\u56fe Assuming the view's path is TheAdmin\\Views\\Layout.cshtml . \u5047\u8bbe\u89c6\u56fe\u7684\u8def\u5f84\u662f TheAdmin \\\\ Views \\\\ Layout.cshtml \u3002 PO File PO\u6587\u4ef6 msgctxt \"TheAdmin.Views.Layout\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgctxt\u201cTheAdmin.Views.Layout\u201d</font> msgid \"Hello\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr\u201c\u4f60\u597d\u201d</font> msgstr \"Bonjour\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr\u201cBonjour\u201d</font> From a Service \u6765\u81ea\u670d\u52a1 The context string must match the full name of the type the localizer is injecting in. \u4e0a\u4e0b\u6587\u5b57\u7b26\u4e32\u5fc5\u987b\u4e0e\u672c\u5730\u5316\u7a0b\u5e8f\u6240\u6ce8\u5165\u7684\u7c7b\u578b\u7684\u5168\u540d\u76f8\u5339\u914d\u3002 Source \u8d44\u6e90 namespace MyNamespace <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u540d\u79f0\u7a7a\u95f4MyNamespace</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> public class MyService : IMyService { public IStringLocalizer T { get; set; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public MyService(IStringLocalizer<MyService> localizer) { T = localizer; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public void DoSomething() { Console.WriteLine(T[\"Hello\"]); } } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> PO file PO\u6587\u4ef6 msgctxt \"MyNamespace.MyService\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgctxt\u201cMyNamespace.MyService\u201d</font> msgid \"Hello\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr\u201c\u4f60\u597d\u201d</font> msgstr \"Bonjour\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr\u201cBonjour\u201d</font> Pluralization \u591a\u5143\u5316 This module also provides support for pluralization. \u8be5\u6a21\u5757\u8fd8\u652f\u6301\u591a\u5143\u5316\u3002 It is necessary to reference the OrchardCore.Localization.Abstractions package in order to be able to use it. \u6709\u5fc5\u8981\u5f15\u7528 OrchardCore.Localization.Abstractions \u5305\u4ee5\u4fbf\u80fd\u591f\u4f7f\u7528\u5b83\u3002 Sample PO file \u793a\u4f8bPO\u6587\u4ef6 msgctxt \"TheAdmin.Views.Layout\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgctxt\u201cTheAdmin.Views.Layout\u201d</font> msgid \"1 book\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr\u201c1\u672c\u4e66\u201d</font> msgid_plural \"{0} books\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgid_plural\u201c{0}\u4e66\u7c4d\u201d</font> msgstr[0] \"[1 livre]\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr [0]\u201c[1 livre]\u201d</font> msgstr[1] \"[{0} livres]\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr [1]\u201c[{0} livres]\u201d</font> Usage \u7528\u6cd5 Import the using Microsoft.Extensions.Localization namespace. \u5bfc\u5165 using Microsoft.Extensions.Localization \u547d\u540d\u7a7a\u95f4\u3002 Inject an instance of IStringLocalizer or IViewLocalizer (represented as the T variable in the following example). \u6ce8\u5165\u4e00\u4e2a IStringLocalizer \u6216 IViewLocalizer \u7684\u5b9e\u4f8b\uff08\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u8868\u793a\u4e3a T \u53d8\u91cf\uff09\u3002 T.Plural(count, \"1 book\", \"{0} books\") <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">T.Plural\uff08\u4f2f\u7235\uff0c\u201c1\u672c\u4e66\u201d\uff0c\u201c{0}\u4e66\u201d\uff09</font>","title":"Localization"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#localization-orchardcorelocalization","text":"","title":"Localization (OrchardCore.Localization)"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#orchardcorelocalization","text":"This module provides the infrastructure necessary to support the PO (Portable Object) localization file format. \u6b64\u6a21\u5757\u63d0\u4f9b\u652f\u6301PO\uff08\u53ef\u79fb\u690d\u5bf9\u8c61\uff09\u672c\u5730\u5316\u6587\u4ef6\u683c\u5f0f\u6240\u9700\u7684\u57fa\u7840\u7ed3\u6784\u3002 It also supports plural forms. \u5b83\u8fd8\u652f\u6301\u590d\u6570\u5f62\u5f0f\u3002","title":"\u672c\u5730\u5316\uff08OrchardCore.Localization\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#po-files-locations","text":"","title":"PO files locations"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#po","text":"PO files are found via the following steps: PO\u6587\u4ef6\u53ef\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u627e\u5230\uff1a For each module and theme all files matching [ModuleLocation]/App_Data/Localization/[CultureName].po \u5bf9\u4e8e\u6bcf\u4e2a\u6a21\u5757\u548c\u4e3b\u9898\uff0c\u6240\u6709\u6587\u4ef6\u90fd\u5339\u914d [ModuleLocation] / App_Data / Localization / [CultureName] .po Then all files matching /App_Data/Localization/[CultureName].po \u7136\u540e\u6240\u6709\u6587\u4ef6\u5339\u914d / App_Data / Localization / [CultureName] .po For each tenant all files matching /App_Data/Sites/[TenantName]/Localization/[CultureName].po \u5bf9\u4e8e\u6bcf\u4e2a\u79df\u6237\u6240\u6709\u5339\u914d / App_Data / Sites / [TenantName] / Localization / [CultureName] .po \u7684\u6587\u4ef6","title":"PO\u6587\u4ef6\u4f4d\u7f6e"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#file-format","text":"","title":"File format"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#_1","text":"This article explains how PO files are organized, including plural forms. \u672c\u6587\u4ecb\u7ecd\u4e86PO\u6587\u4ef6\u7684\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u5305\u62ec\u590d\u6570\u5f62\u5f0f\u3002 https://www.gnu.org/software/gettext/manual/html_node/PO-Files.html https://www.gnu.org/software/gettext/manual/html_node/PO-Files.html","title":"\u6587\u4ef6\u683c\u5f0f"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#translation-contexts","text":"","title":"Translation contexts"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#_2","text":"To prevent different PO files entries from overriding each other, entries define a context for each translation string. \u4e3a\u4e86\u9632\u6b62\u4e0d\u540c\u7684PO\u6587\u4ef6\u6761\u76ee\u76f8\u4e92\u8986\u76d6\uff0c\u6761\u76ee\u4e3a\u6bcf\u4e2a\u7ffb\u8bd1\u5b57\u7b26\u4e32\u5b9a\u4e49\u4e0a\u4e0b\u6587\u3002 For instance two views could use the string named Hello but they might have different translation. It's then necessary to \u4f8b\u5982\uff0c\u4e24\u4e2a\u89c6\u56fe\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a\u201cHello\u201d\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u5b83\u4eec\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u8f6c\u6362\u3002\u7136\u540e\u6709\u5fc5\u8981 provide two entries and specify which context is associated with each translation. In this case each view name is a context. \u63d0\u4f9b\u4e24\u4e2a\u6761\u76ee\u5e76\u6307\u5b9a\u54ea\u4e2a_context_\u4e0e\u6bcf\u4e2a\u7ffb\u8bd1\u76f8\u5173\u8054\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u89c6\u56fe\u540d\u79f0\u90fd\u662f\u4e0a\u4e0b\u6587\u3002","title":"\u7ffb\u8bd1\u80cc\u666f"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#from-a-view","text":"","title":"From a View"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#_3","text":"The context string must match the view location up to the module folder. \u4e0a\u4e0b\u6587\u5b57\u7b26\u4e32\u5fc5\u987b\u4e0e\u89c6\u56fe\u4f4d\u7f6e\u5339\u914d\uff0c\u76f4\u5230\u6a21\u5757\u6587\u4ef6\u5939\u3002","title":"\u4ece\u4e00\u4e2a\u89c6\u56fe"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#view","text":"","title":"View"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#_4","text":"Assuming the view's path is TheAdmin\\Views\\Layout.cshtml . \u5047\u8bbe\u89c6\u56fe\u7684\u8def\u5f84\u662f TheAdmin \\\\ Views \\\\ Layout.cshtml \u3002","title":"\u89c6\u56fe"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#po-file","text":"","title":"PO File"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#po_1","text":"msgctxt \"TheAdmin.Views.Layout\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgctxt\u201cTheAdmin.Views.Layout\u201d</font> msgid \"Hello\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr\u201c\u4f60\u597d\u201d</font> msgstr \"Bonjour\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr\u201cBonjour\u201d</font>","title":"PO\u6587\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#from-a-service","text":"","title":"From a Service"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#_5","text":"The context string must match the full name of the type the localizer is injecting in. \u4e0a\u4e0b\u6587\u5b57\u7b26\u4e32\u5fc5\u987b\u4e0e\u672c\u5730\u5316\u7a0b\u5e8f\u6240\u6ce8\u5165\u7684\u7c7b\u578b\u7684\u5168\u540d\u76f8\u5339\u914d\u3002","title":"\u6765\u81ea\u670d\u52a1"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#source","text":"","title":"Source"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#_6","text":"namespace MyNamespace <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u540d\u79f0\u7a7a\u95f4MyNamespace</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> public class MyService : IMyService { public IStringLocalizer T { get; set; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public MyService(IStringLocalizer<MyService> localizer) { T = localizer; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public void DoSomething() { Console.WriteLine(T[\"Hello\"]); } } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u8d44\u6e90"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#po-file_1","text":"","title":"PO file"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#po_2","text":"msgctxt \"MyNamespace.MyService\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgctxt\u201cMyNamespace.MyService\u201d</font> msgid \"Hello\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr\u201c\u4f60\u597d\u201d</font> msgstr \"Bonjour\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr\u201cBonjour\u201d</font>","title":"PO\u6587\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#pluralization","text":"","title":"Pluralization"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#_7","text":"This module also provides support for pluralization. \u8be5\u6a21\u5757\u8fd8\u652f\u6301\u591a\u5143\u5316\u3002 It is necessary to reference the OrchardCore.Localization.Abstractions package in order to be able to use it. \u6709\u5fc5\u8981\u5f15\u7528 OrchardCore.Localization.Abstractions \u5305\u4ee5\u4fbf\u80fd\u591f\u4f7f\u7528\u5b83\u3002","title":"\u591a\u5143\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#sample-po-file","text":"","title":"Sample PO file"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#po_3","text":"msgctxt \"TheAdmin.Views.Layout\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgctxt\u201cTheAdmin.Views.Layout\u201d</font> msgid \"1 book\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr\u201c1\u672c\u4e66\u201d</font> msgid_plural \"{0} books\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgid_plural\u201c{0}\u4e66\u7c4d\u201d</font> msgstr[0] \"[1 livre]\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr [0]\u201c[1 livre]\u201d</font> msgstr[1] \"[{0} livres]\" <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">msgstr [1]\u201c[{0} livres]\u201d</font>","title":"\u793a\u4f8bPO\u6587\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#usage","text":"","title":"Usage"},{"location":"OrchardCore.Modules/OrchardCore.Localization/#_8","text":"Import the using Microsoft.Extensions.Localization namespace. \u5bfc\u5165 using Microsoft.Extensions.Localization \u547d\u540d\u7a7a\u95f4\u3002 Inject an instance of IStringLocalizer or IViewLocalizer (represented as the T variable in the following example). \u6ce8\u5165\u4e00\u4e2a IStringLocalizer \u6216 IViewLocalizer \u7684\u5b9e\u4f8b\uff08\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u8868\u793a\u4e3a T \u53d8\u91cf\uff09\u3002 T.Plural(count, \"1 book\", \"{0} books\") <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">T.Plural\uff08\u4f2f\u7235\uff0c\u201c1\u672c\u4e66\u201d\uff0c\u201c{0}\u4e66\u201d\uff09</font>","title":"\u7528\u6cd5"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/","text":"Lucene (OrchardCore.Lucene) Lucene\uff08OrchardCore.Lucene\uff09 The Lucene module allows to manage Lucene indices. Lucene\u6a21\u5757\u5141\u8bb8\u7ba1\u7406Lucene\u7d22\u5f15\u3002 Recipe step \u98df\u8c31\u6b65\u9aa4 Lucene indices can be created during recipe execution using the lucene-index step. \u53ef\u4ee5\u4f7f\u7528 lucene-index \u6b65\u9aa4\u5728\u914d\u65b9\u6267\u884c\u671f\u95f4\u521b\u5efaLucene\u7d22\u5f15\u3002 Here is a sample step: \u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u6b65\u9aa4\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"lucene-index\", \"Indices\": \"Indices\": [ \"Search\" ] } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Queries recipe step \u67e5\u8be2\u914d\u65b9\u6b65\u9aa4 Here is an example for creating a Lucene query from a Queries recipe step: \u4ee5\u4e0b\u662f\u4ece\u67e5\u8be2\u914d\u65b9\u6b65\u9aa4\u521b\u5efaLucene\u67e5\u8be2\u7684\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"Source\": \"Lucene\", \"Name\": \"RecentBlogPosts\", \"Index\": \"Search\", \"Template\": \"...\", // json encoded query template \"ReturnContentItems\": true } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Web APIs Web API api/lucene/content API / Lucene\u7684/\u5185\u5bb9 Executes a query with the specified name and returns the corresponding content items. \u6267\u884c\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u67e5\u8be2\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u5185\u5bb9\u9879\u3002 Verbs: POST and GET \u52a8\u8bcd\uff1a POST \u548c GET | Parameter | Example | Description | |\u53c2\u6570|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | indexName | search | The name of the index to query | | indexName | search |\u8981\u67e5\u8be2\u7684\u7d22\u5f15\u7684\u540d\u79f0 | query | { \"query\": { \"match_all\": {} } } | A Json object representing the query | | query | {\u201cquery\u201d\uff1a{\u201cmatch_all\u201d\uff1a{}}} |\u8868\u793a\u67e5\u8be2\u7684Json\u5bf9\u8c61 | parameters | { size: 3} | A Json object representing the parameters of the query | | parameters | {size\uff1a3} |\u4e00\u4e2aJson\u5bf9\u8c61\uff0c\u8868\u793a\u67e5\u8be2\u7684\u53c2\u6570 api/lucene/documents API / Lucene\u7684/\u6587\u4ef6 Executes a query with the specified name and returns the corresponding Lucene documents. \u6267\u884c\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u67e5\u8be2\u5e76\u8fd4\u56de\u76f8\u5e94\u7684Lucene\u6587\u6863\u3002 Only the stored fields are returned. \u4ec5\u8fd4\u56de\u5b58\u50a8\u7684\u5b57\u6bb5\u3002 Verbs: POST and GET \u52a8\u8bcd\uff1a POST \u548c GET | Parameter | Example | Description | |\u53c2\u6570|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | indexName | search | The name of the index to query | | indexName | search |\u8981\u67e5\u8be2\u7684\u7d22\u5f15\u7684\u540d\u79f0 | query | { \"query\": { \"match_all\": {} } } | A Json object representing the query | | query | {\u201cquery\u201d\uff1a{\u201cmatch_all\u201d\uff1a{}}} |\u8868\u793a\u67e5\u8be2\u7684Json\u5bf9\u8c61 | parameters | { size: 3} | A Json object representing the parameters of the query | | parameters | {size\uff1a3} |\u4e00\u4e2aJson\u5bf9\u8c61\uff0c\u8868\u793a\u67e5\u8be2\u7684\u53c2\u6570 Lucene Worker (OrchardCore.Lucene.Worker) Lucene Worker\uff08OrchardCore.Lucene.Worker\uff09 This feature creates a background task that will keep the local file system index synchronized with \u6b64\u529f\u80fd\u521b\u5efa\u4e00\u4e2a\u540e\u53f0\u4efb\u52a1\uff0c\u4ee5\u4fdd\u6301\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u7d22\u5f15\u4e0e\u4e4b\u540c\u6b65 other instances that could have their own local index. It is recommended to use it only if you are \u5176\u4ed6\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684\u672c\u5730\u7d22\u5f15\u7684\u5b9e\u4f8b\u3002\u5efa\u8bae\u4ec5\u5728\u60a8\u4f7f\u7528\u65f6\u4f7f\u7528\u5b83 running the same tenant on multiple instances (farm) and are using a Lucene file system index. \u5728\u591a\u4e2a\u5b9e\u4f8b\uff08\u670d\u52a1\u5668\u573a\uff09\u4e0a\u8fd0\u884c\u76f8\u540c\u7684\u79df\u6237\u5e76\u4f7f\u7528Lucene\u6587\u4ef6\u7cfb\u7edf\u7d22\u5f15\u3002 If you are running on Azure App Services or if you are using Elasticsearch, then you don't need this \u5982\u679c\u60a8\u5728Azure App Services\u4e0a\u8fd0\u884c\uff0c\u6216\u8005\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fElasticsearch\uff0c\u5219\u4e0d\u9700\u8981\u6b64\u64cd\u4f5c feature. \u7279\u5f81\u3002 CREDITS \u5b66\u5206 Lucene.net Lucene.net http://lucenenet.apache.org/index.html http://lucenenet.apache.org/index.html Copyright 2013 The Apache Software Foundation \u7248\u6743\u6240\u67092013 The Apache Software Foundation Licensed under the Apache License, Version 2.0. \u6839\u636eApache\u8bb8\u53ef\u8bc12.0\u7248\u83b7\u5f97\u8bb8\u53ef\u3002","title":"Lucene"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#lucene-orchardcorelucene","text":"","title":"Lucene (OrchardCore.Lucene)"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#luceneorchardcorelucene","text":"The Lucene module allows to manage Lucene indices. Lucene\u6a21\u5757\u5141\u8bb8\u7ba1\u7406Lucene\u7d22\u5f15\u3002","title":"Lucene\uff08OrchardCore.Lucene\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#recipe-step","text":"","title":"Recipe step"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#_1","text":"Lucene indices can be created during recipe execution using the lucene-index step. \u53ef\u4ee5\u4f7f\u7528 lucene-index \u6b65\u9aa4\u5728\u914d\u65b9\u6267\u884c\u671f\u95f4\u521b\u5efaLucene\u7d22\u5f15\u3002 Here is a sample step: \u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u6b65\u9aa4\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"lucene-index\", \"Indices\": \"Indices\": [ \"Search\" ] } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u98df\u8c31\u6b65\u9aa4"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#queries-recipe-step","text":"","title":"Queries recipe step"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#_2","text":"Here is an example for creating a Lucene query from a Queries recipe step: \u4ee5\u4e0b\u662f\u4ece\u67e5\u8be2\u914d\u65b9\u6b65\u9aa4\u521b\u5efaLucene\u67e5\u8be2\u7684\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"Source\": \"Lucene\", \"Name\": \"RecentBlogPosts\", \"Index\": \"Search\", \"Template\": \"...\", // json encoded query template \"ReturnContentItems\": true } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u67e5\u8be2\u914d\u65b9\u6b65\u9aa4"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#web-apis","text":"","title":"Web APIs"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#web-api","text":"","title":"Web API"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#apilucenecontent","text":"","title":"api/lucene/content"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#api-lucene","text":"Executes a query with the specified name and returns the corresponding content items. \u6267\u884c\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u67e5\u8be2\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u5185\u5bb9\u9879\u3002 Verbs: POST and GET \u52a8\u8bcd\uff1a POST \u548c GET | Parameter | Example | Description | |\u53c2\u6570|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | indexName | search | The name of the index to query | | indexName | search |\u8981\u67e5\u8be2\u7684\u7d22\u5f15\u7684\u540d\u79f0 | query | { \"query\": { \"match_all\": {} } } | A Json object representing the query | | query | {\u201cquery\u201d\uff1a{\u201cmatch_all\u201d\uff1a{}}} |\u8868\u793a\u67e5\u8be2\u7684Json\u5bf9\u8c61 | parameters | { size: 3} | A Json object representing the parameters of the query | | parameters | {size\uff1a3} |\u4e00\u4e2aJson\u5bf9\u8c61\uff0c\u8868\u793a\u67e5\u8be2\u7684\u53c2\u6570","title":"API / Lucene\u7684/\u5185\u5bb9"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#apilucenedocuments","text":"","title":"api/lucene/documents"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#api-lucene_1","text":"Executes a query with the specified name and returns the corresponding Lucene documents. \u6267\u884c\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u67e5\u8be2\u5e76\u8fd4\u56de\u76f8\u5e94\u7684Lucene\u6587\u6863\u3002 Only the stored fields are returned. \u4ec5\u8fd4\u56de\u5b58\u50a8\u7684\u5b57\u6bb5\u3002 Verbs: POST and GET \u52a8\u8bcd\uff1a POST \u548c GET | Parameter | Example | Description | |\u53c2\u6570|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | indexName | search | The name of the index to query | | indexName | search |\u8981\u67e5\u8be2\u7684\u7d22\u5f15\u7684\u540d\u79f0 | query | { \"query\": { \"match_all\": {} } } | A Json object representing the query | | query | {\u201cquery\u201d\uff1a{\u201cmatch_all\u201d\uff1a{}}} |\u8868\u793a\u67e5\u8be2\u7684Json\u5bf9\u8c61 | parameters | { size: 3} | A Json object representing the parameters of the query | | parameters | {size\uff1a3} |\u4e00\u4e2aJson\u5bf9\u8c61\uff0c\u8868\u793a\u67e5\u8be2\u7684\u53c2\u6570","title":"API / Lucene\u7684/\u6587\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#lucene-worker-orchardcoreluceneworker","text":"","title":"Lucene Worker (OrchardCore.Lucene.Worker)"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#lucene-workerorchardcoreluceneworker","text":"This feature creates a background task that will keep the local file system index synchronized with \u6b64\u529f\u80fd\u521b\u5efa\u4e00\u4e2a\u540e\u53f0\u4efb\u52a1\uff0c\u4ee5\u4fdd\u6301\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u7d22\u5f15\u4e0e\u4e4b\u540c\u6b65 other instances that could have their own local index. It is recommended to use it only if you are \u5176\u4ed6\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684\u672c\u5730\u7d22\u5f15\u7684\u5b9e\u4f8b\u3002\u5efa\u8bae\u4ec5\u5728\u60a8\u4f7f\u7528\u65f6\u4f7f\u7528\u5b83 running the same tenant on multiple instances (farm) and are using a Lucene file system index. \u5728\u591a\u4e2a\u5b9e\u4f8b\uff08\u670d\u52a1\u5668\u573a\uff09\u4e0a\u8fd0\u884c\u76f8\u540c\u7684\u79df\u6237\u5e76\u4f7f\u7528Lucene\u6587\u4ef6\u7cfb\u7edf\u7d22\u5f15\u3002 If you are running on Azure App Services or if you are using Elasticsearch, then you don't need this \u5982\u679c\u60a8\u5728Azure App Services\u4e0a\u8fd0\u884c\uff0c\u6216\u8005\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fElasticsearch\uff0c\u5219\u4e0d\u9700\u8981\u6b64\u64cd\u4f5c feature. \u7279\u5f81\u3002","title":"Lucene Worker\uff08OrchardCore.Lucene.Worker\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#credits","text":"","title":"CREDITS"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#_3","text":"","title":"\u5b66\u5206"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#lucenenet","text":"","title":"Lucene.net"},{"location":"OrchardCore.Modules/OrchardCore.Lucene/#lucenenet_1","text":"http://lucenenet.apache.org/index.html http://lucenenet.apache.org/index.html Copyright 2013 The Apache Software Foundation \u7248\u6743\u6240\u67092013 The Apache Software Foundation Licensed under the Apache License, Version 2.0. \u6839\u636eApache\u8bb8\u53ef\u8bc12.0\u7248\u83b7\u5f97\u8bb8\u53ef\u3002","title":"Lucene.net"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/","text":"Markdown (OrchardCore.Markdown) Markdown\uff08OrchardCore.Markdown\uff09 Theming \u4e3b\u9898\u5316 Shapes \u5f62\u72b6 The following shapes are rendered when the BodyPMarkdownBodyPartart is attached to a content type \u5f53 BodyPMarkdownBodyPartart \u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u65f6\uff0c\u5c06\u5448\u73b0\u4ee5\u4e0b\u5f62\u72b6 | Name | Display Type | Default Location | Model Type | |\u540d\u79f0|\u663e\u793a\u7c7b\u578b|\u9ed8\u8ba4\u4f4d\u7f6e|\u578b\u53f7\u7c7b\u578b| | ------| ------------ |----------------- | ---------- | | ------ | ------------ | ----------------- | ---------- | | MarkdownBodyPart | Detail | Content:5 | MarkdownBodyPartViewModel | | MarkdownBodyPart | \u7ec6\u8282 | \u5185\u5bb9\uff1a5 | MarkdownBodyPartViewModel | | MarkdownBodyPart | Summary | Content:10 | MarkdownBodyPartViewModel | | MarkdownBodyPart | \u6458\u8981 | \u5185\u5bb9\uff1a10 | MarkdownBodyPartViewModel | BodyPartViewModel BodyPartViewModel The following properties are available on the MarkdownBodyPartViewModel class. MarkdownBodyPartViewModel \u7c7b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Type | Description | |\u8d22\u4ea7|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Markdown | string | The Markdown value after all tokens have been processed | | Markdown | string |\u5904\u7406\u5b8c\u6240\u6709\u4ee4\u724c\u540e\u7684Markdown\u503c | Html | string | The HTML content resulting from the Markdown source | | Html | string | Markdown\u6e90\u4ee3\u7801\u751f\u6210\u7684HTML\u5185\u5bb9 | ContentItem | ContentItem | The content item of the part | | ContentItem | ContentItem |\u90e8\u5206\u7684\u5185\u5bb9\u9879\u76ee | MarkdownBodyPart | MarkdownBodyPart | The MarkdownBodyPart instance| | MarkdownBodyPart | MarkdownBodyPart | MarkdownBodyPart \u5b9e\u4f8b| | TypePartSettings | MarkdownBodyPartSettings | The settings of the part | | TypePartSettings | MarkdownBodyPartSettings |\u90e8\u5206\u7684\u8bbe\u7f6e| MarkdownBodyPart MarkdownBodyPart The following properties are available on MarkdownBodyPart MarkdownBodyPart \u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027 | Name | Type | Description | |\u540d\u79f0|\u8f93\u5165|\u8bf4\u660e| | -----| ---- |------------ | | ----- | ---- | ------------ | | Markdown | The Markdown content. It can contain Liquid tags so using it directly might result in unexpected results. Prefer rendering the MarkdownBodyPart shape instead | | Markdown | Markdown\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u5305\u542bLiquid\u6807\u7b7e\uff0c\u56e0\u6b64\u76f4\u63a5\u4f7f\u7528\u5b83\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u7ed3\u679c\u3002\u66f4\u559c\u6b22\u6e32\u67d3 MarkdownBodyPart \u5f62\u72b6 | Content | The raw content of the part | | \u5185\u5bb9 |\u90e8\u5206\u7684\u539f\u59cb\u5185\u5bb9| | ContentItem | The content item containing this part | | ContentItem |\u5305\u542b\u6b64\u90e8\u5206\u7684\u5185\u5bb9\u9879\u76ee MarkdownField MarkdownField This shape is rendered when a MarkdownField is attached to a content part. \u5f53\u201cMarkdownField\u201d\u9644\u52a0\u5230\u5185\u5bb9\u90e8\u5206\u65f6\uff0c\u5c06\u5448\u73b0\u6b64\u5f62\u72b6\u3002 The shape base class is of type MarkdownFieldViewModel . \u5f62\u72b6\u57fa\u7c7b\u7684\u7c7b\u578b\u4e3a\u201cMarkdownFieldViewModel\u201d\u3002 The following properties are available on the MarkdownFieldViewModel class. MarkdownFieldViewModel \u7c7b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Type | Description | |\u8d22\u4ea7|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Markdown | string | The Markdown value once all tokens have been processed | | Markdown | string |\u5904\u7406\u5b8c\u6240\u6709\u4ee4\u724c\u540e\u7684Markdown\u503c| | Html | string | The HTML content resulting from the Markdown source | | Html | string | Markdown\u6e90\u4ee3\u7801\u751f\u6210\u7684HTML\u5185\u5bb9 | Field | MarkdownField | The MarkdownField instance| | Field | MarkdownField | MarkdownField \u5b9e\u4f8b| | Part | ContentPart | The part this field attached to | | Part | ContentPart |\u6b64\u5b57\u6bb5\u9644\u52a0\u5230|\u7684\u90e8\u5206 | PartFieldDefinition | ContentPartFieldDefinition | The part field definition | | PartFieldDefinition | ContentPartFieldDefinition |\u96f6\u4ef6\u5b57\u6bb5\u5b9a\u4e49| Editors \u7f16\u8005 The Markdown Part editor can be different for each content type. In the Markdown Part settings of a \u6bcf\u4e2a\u5185\u5bb9\u7c7b\u578b\u7684__Markdown Part__\u7f16\u8f91\u5668\u53ef\u4ee5\u4e0d\u540c\u3002\u5728a\u7684__Markdown Part__\u8bbe\u7f6e\u4e2d content type, just select the one that needs to be used. \u5185\u5bb9\u7c7b\u578b\uff0c\u53ea\u9700\u9009\u62e9\u9700\u8981\u4f7f\u7528\u7684\u5185\u5bb9\u3002 There are two predefined editor names: \u6709\u4e24\u4e2a\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668\u540d\u79f0\uff1a Default is the editor that is used by default Default \u662f\u9ed8\u8ba4\u4f7f\u7528\u7684\u7f16\u8f91\u5668 Wysiwyg is the editor that provides a WYSIWYG experience Wysiwyg \u662f\u63d0\u4f9bWYSIWYG\u4f53\u9a8c\u7684\u7f16\u8f91\u5668 Custom Editors \u81ea\u5b9a\u4e49\u7f16\u8f91\u5668 Customizing the editor can mean to replace the predefined one with different experiences, or to provide \u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\u53ef\u80fd\u610f\u5473\u7740\u7528\u4e0d\u540c\u7684\u4f53\u9a8c\u66ff\u6362\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668\uff0c\u6216\u8005\u63d0\u4f9b new options for the user to choose from. \u7528\u6237\u53ef\u4f9b\u9009\u62e9\u7684\u65b0\u9009\u9879\u3002 To create a new custom editor, it is required to provide two shape templates, one to provide \u8981\u521b\u5efa\u65b0\u7684\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\uff0c\u9700\u8981\u63d0\u4f9b\u4e24\u4e2a\u5f62\u72b6\u6a21\u677f\uff0c\u4e00\u4e2a\u7528\u4e8e\u63d0\u4f9b the name of the editor (optional if you want to override an existing one), and a shape to \u7f16\u8f91\u5668\u7684\u540d\u79f0\uff08\u5982\u679c\u8981\u8986\u76d6\u73b0\u6709\u7f16\u8f91\u5668\uff0c\u5219\u4e3a\u53ef\u9009\u9879\uff09\u548c\u5f62\u72b6 render the actual HTML for the editor. \u5448\u73b0\u7f16\u8f91\u5668\u7684\u5b9e\u9645HTML\u3002 Declaration \u5ba3\u8a00 To declare a new editor, create a shape named Markdown_Option__{Name} where {Name} is a value \u8981\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u7f16\u8f91\u5668\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Markdown_Option __ {Name} \u7684\u5f62\u72b6\uff0c\u5176\u4e2d {Name} \u662f\u4e00\u4e2a\u503c of your choosing. This will be represented by a file named Markdown-{Name}.Option.cshtml . \u4f60\u9009\u62e9\u7684\u3002\u8fd9\u5c06\u7531\u540d\u4e3a Markdown- {Name} .Option.cshtml \u7684\u6587\u4ef6\u8868\u793a\u3002 Sample content: \u793a\u4f8b\u5185\u5bb9\uff1a @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> string currentEditor = Model.Editor; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <option value=\"Wysiwyg\" selected=\"@(currentEditor == \"Wysiwyg\")\">@T[\"Wysiwyg editor\"]</option> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><option value =\u201cWysiwyg\u201dselected =\u201c@\uff08currentEditor ==\u201dWysiwyg\u201c\uff09\u201d> @ T [\u201cWysiwyg\u7f16\u8f91\u201d] </ option></font> HTML Editor HTML\u7f16\u8f91\u5668 To define what HTML to render when the editor is selected from the settings, a shape named \u8981\u5b9a\u4e49\u4ece\u8bbe\u7f6e\u4e2d\u9009\u62e9\u7f16\u8f91\u5668\u65f6\u8981\u5448\u73b0\u7684HTML\uff0c\u8bf7\u4f7f\u7528\u540d\u4e3a\u7684\u5f62\u72b6 Markdown_Editor__{Name} corresponding to a file Markdown-{Name}.Editor.cshtml can be created. Sample content: \u793a\u4f8b\u5185\u5bb9\uff1a @using OrchardCore.Markdown.ViewModels; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@using OrchardCore.Markdown.ViewModels;</font> @model MarkdownBodyPartViewModel <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@model MarkdownBodyPartViewModel</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> <fieldset class=\"form-group\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><fieldset class =\u201cform-group\u201d></font> <label asp-for=\"Markdown\">@T[\"Markdown\"]</label> <textarea asp-for=\"Markdown\" rows=\"5\" class=\"form-control\"></textarea> <span class=\"hint\">@T[\"The markdown of the content item.\"]</span> </fieldset> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></\u5b57\u6bb5\u96c6></font> Overriding the predefined editors \u8986\u76d6\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668 You can override the HTML editor for the Default editor by creating a shape file named \u60a8\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u540d\u4e3a\u7684\u5f62\u72b6\u6587\u4ef6\u6765\u8986\u76d6\u201cDefault\u201d\u7f16\u8f91\u5668\u7684HTML\u7f16\u8f91\u5668 Markdown.Editor.cshtml . The Wysiwyg editor is defined by using the file named Markdown-Wysiwyg.Editor.cshtml . CREDITS \u5b66\u5206 Markdig Markdig https://github.com/lunet-io/markdig https://github.com/lunet-io/markdig Copyright (c) 2016, Alexandre Mutel \u7248\u6743\u6240\u6709\uff08c\uff092016\uff0cAlexandre Mutel BSD-2 BSD-2 SimpleMDE SimpleMDE https://github.com/NextStepWebs/simplemde-markdown-editor https://github.com/NextStepWebs/simplemde-markdown-editor Copyright (c) 2015 Next Step Webs, Inc. \u7248\u6743\u6240\u6709\uff08c\uff092015 Next Step Webs\uff0cInc\u3002 MIT MIT","title":"Markdown"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#markdown-orchardcoremarkdown","text":"","title":"Markdown (OrchardCore.Markdown)"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#markdownorchardcoremarkdown","text":"","title":"Markdown\uff08OrchardCore.Markdown\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#theming","text":"","title":"Theming"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#_1","text":"","title":"\u4e3b\u9898\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#shapes","text":"","title":"Shapes"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#_2","text":"The following shapes are rendered when the BodyPMarkdownBodyPartart is attached to a content type \u5f53 BodyPMarkdownBodyPartart \u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u65f6\uff0c\u5c06\u5448\u73b0\u4ee5\u4e0b\u5f62\u72b6 | Name | Display Type | Default Location | Model Type | |\u540d\u79f0|\u663e\u793a\u7c7b\u578b|\u9ed8\u8ba4\u4f4d\u7f6e|\u578b\u53f7\u7c7b\u578b| | ------| ------------ |----------------- | ---------- | | ------ | ------------ | ----------------- | ---------- | | MarkdownBodyPart | Detail | Content:5 | MarkdownBodyPartViewModel | | MarkdownBodyPart | \u7ec6\u8282 | \u5185\u5bb9\uff1a5 | MarkdownBodyPartViewModel | | MarkdownBodyPart | Summary | Content:10 | MarkdownBodyPartViewModel | | MarkdownBodyPart | \u6458\u8981 | \u5185\u5bb9\uff1a10 | MarkdownBodyPartViewModel |","title":"\u5f62\u72b6"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#bodypartviewmodel","text":"","title":"BodyPartViewModel"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#bodypartviewmodel_1","text":"The following properties are available on the MarkdownBodyPartViewModel class. MarkdownBodyPartViewModel \u7c7b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Type | Description | |\u8d22\u4ea7|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Markdown | string | The Markdown value after all tokens have been processed | | Markdown | string |\u5904\u7406\u5b8c\u6240\u6709\u4ee4\u724c\u540e\u7684Markdown\u503c | Html | string | The HTML content resulting from the Markdown source | | Html | string | Markdown\u6e90\u4ee3\u7801\u751f\u6210\u7684HTML\u5185\u5bb9 | ContentItem | ContentItem | The content item of the part | | ContentItem | ContentItem |\u90e8\u5206\u7684\u5185\u5bb9\u9879\u76ee | MarkdownBodyPart | MarkdownBodyPart | The MarkdownBodyPart instance| | MarkdownBodyPart | MarkdownBodyPart | MarkdownBodyPart \u5b9e\u4f8b| | TypePartSettings | MarkdownBodyPartSettings | The settings of the part | | TypePartSettings | MarkdownBodyPartSettings |\u90e8\u5206\u7684\u8bbe\u7f6e|","title":"BodyPartViewModel"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#markdownbodypart","text":"","title":"MarkdownBodyPart"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#markdownbodypart_1","text":"The following properties are available on MarkdownBodyPart MarkdownBodyPart \u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027 | Name | Type | Description | |\u540d\u79f0|\u8f93\u5165|\u8bf4\u660e| | -----| ---- |------------ | | ----- | ---- | ------------ | | Markdown | The Markdown content. It can contain Liquid tags so using it directly might result in unexpected results. Prefer rendering the MarkdownBodyPart shape instead | | Markdown | Markdown\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u5305\u542bLiquid\u6807\u7b7e\uff0c\u56e0\u6b64\u76f4\u63a5\u4f7f\u7528\u5b83\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u7ed3\u679c\u3002\u66f4\u559c\u6b22\u6e32\u67d3 MarkdownBodyPart \u5f62\u72b6 | Content | The raw content of the part | | \u5185\u5bb9 |\u90e8\u5206\u7684\u539f\u59cb\u5185\u5bb9| | ContentItem | The content item containing this part | | ContentItem |\u5305\u542b\u6b64\u90e8\u5206\u7684\u5185\u5bb9\u9879\u76ee","title":"MarkdownBodyPart"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#markdownfield","text":"","title":"MarkdownField"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#markdownfield_1","text":"This shape is rendered when a MarkdownField is attached to a content part. \u5f53\u201cMarkdownField\u201d\u9644\u52a0\u5230\u5185\u5bb9\u90e8\u5206\u65f6\uff0c\u5c06\u5448\u73b0\u6b64\u5f62\u72b6\u3002 The shape base class is of type MarkdownFieldViewModel . \u5f62\u72b6\u57fa\u7c7b\u7684\u7c7b\u578b\u4e3a\u201cMarkdownFieldViewModel\u201d\u3002 The following properties are available on the MarkdownFieldViewModel class. MarkdownFieldViewModel \u7c7b\u63d0\u4f9b\u4ee5\u4e0b\u5c5e\u6027\u3002 | Property | Type | Description | |\u8d22\u4ea7|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Markdown | string | The Markdown value once all tokens have been processed | | Markdown | string |\u5904\u7406\u5b8c\u6240\u6709\u4ee4\u724c\u540e\u7684Markdown\u503c| | Html | string | The HTML content resulting from the Markdown source | | Html | string | Markdown\u6e90\u4ee3\u7801\u751f\u6210\u7684HTML\u5185\u5bb9 | Field | MarkdownField | The MarkdownField instance| | Field | MarkdownField | MarkdownField \u5b9e\u4f8b| | Part | ContentPart | The part this field attached to | | Part | ContentPart |\u6b64\u5b57\u6bb5\u9644\u52a0\u5230|\u7684\u90e8\u5206 | PartFieldDefinition | ContentPartFieldDefinition | The part field definition | | PartFieldDefinition | ContentPartFieldDefinition |\u96f6\u4ef6\u5b57\u6bb5\u5b9a\u4e49|","title":"MarkdownField"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#editors","text":"","title":"Editors"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#_3","text":"The Markdown Part editor can be different for each content type. In the Markdown Part settings of a \u6bcf\u4e2a\u5185\u5bb9\u7c7b\u578b\u7684__Markdown Part__\u7f16\u8f91\u5668\u53ef\u4ee5\u4e0d\u540c\u3002\u5728a\u7684__Markdown Part__\u8bbe\u7f6e\u4e2d content type, just select the one that needs to be used. \u5185\u5bb9\u7c7b\u578b\uff0c\u53ea\u9700\u9009\u62e9\u9700\u8981\u4f7f\u7528\u7684\u5185\u5bb9\u3002 There are two predefined editor names: \u6709\u4e24\u4e2a\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668\u540d\u79f0\uff1a Default is the editor that is used by default Default \u662f\u9ed8\u8ba4\u4f7f\u7528\u7684\u7f16\u8f91\u5668 Wysiwyg is the editor that provides a WYSIWYG experience Wysiwyg \u662f\u63d0\u4f9bWYSIWYG\u4f53\u9a8c\u7684\u7f16\u8f91\u5668","title":"\u7f16\u8005"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#custom-editors","text":"","title":"Custom Editors"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#_4","text":"Customizing the editor can mean to replace the predefined one with different experiences, or to provide \u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\u53ef\u80fd\u610f\u5473\u7740\u7528\u4e0d\u540c\u7684\u4f53\u9a8c\u66ff\u6362\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668\uff0c\u6216\u8005\u63d0\u4f9b new options for the user to choose from. \u7528\u6237\u53ef\u4f9b\u9009\u62e9\u7684\u65b0\u9009\u9879\u3002 To create a new custom editor, it is required to provide two shape templates, one to provide \u8981\u521b\u5efa\u65b0\u7684\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668\uff0c\u9700\u8981\u63d0\u4f9b\u4e24\u4e2a\u5f62\u72b6\u6a21\u677f\uff0c\u4e00\u4e2a\u7528\u4e8e\u63d0\u4f9b the name of the editor (optional if you want to override an existing one), and a shape to \u7f16\u8f91\u5668\u7684\u540d\u79f0\uff08\u5982\u679c\u8981\u8986\u76d6\u73b0\u6709\u7f16\u8f91\u5668\uff0c\u5219\u4e3a\u53ef\u9009\u9879\uff09\u548c\u5f62\u72b6 render the actual HTML for the editor. \u5448\u73b0\u7f16\u8f91\u5668\u7684\u5b9e\u9645HTML\u3002","title":"\u81ea\u5b9a\u4e49\u7f16\u8f91\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#declaration","text":"","title":"Declaration"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#_5","text":"To declare a new editor, create a shape named Markdown_Option__{Name} where {Name} is a value \u8981\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u7f16\u8f91\u5668\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Markdown_Option __ {Name} \u7684\u5f62\u72b6\uff0c\u5176\u4e2d {Name} \u662f\u4e00\u4e2a\u503c of your choosing. This will be represented by a file named Markdown-{Name}.Option.cshtml . \u4f60\u9009\u62e9\u7684\u3002\u8fd9\u5c06\u7531\u540d\u4e3a Markdown- {Name} .Option.cshtml \u7684\u6587\u4ef6\u8868\u793a\u3002 Sample content: \u793a\u4f8b\u5185\u5bb9\uff1a @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> string currentEditor = Model.Editor; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <option value=\"Wysiwyg\" selected=\"@(currentEditor == \"Wysiwyg\")\">@T[\"Wysiwyg editor\"]</option> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><option value =\u201cWysiwyg\u201dselected =\u201c@\uff08currentEditor ==\u201dWysiwyg\u201c\uff09\u201d> @ T [\u201cWysiwyg\u7f16\u8f91\u201d] </ option></font>","title":"\u5ba3\u8a00"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#html-editor","text":"","title":"HTML Editor"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#html","text":"To define what HTML to render when the editor is selected from the settings, a shape named \u8981\u5b9a\u4e49\u4ece\u8bbe\u7f6e\u4e2d\u9009\u62e9\u7f16\u8f91\u5668\u65f6\u8981\u5448\u73b0\u7684HTML\uff0c\u8bf7\u4f7f\u7528\u540d\u4e3a\u7684\u5f62\u72b6 Markdown_Editor__{Name} corresponding to a file Markdown-{Name}.Editor.cshtml can be created. Sample content: \u793a\u4f8b\u5185\u5bb9\uff1a @using OrchardCore.Markdown.ViewModels; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@using OrchardCore.Markdown.ViewModels;</font> @model MarkdownBodyPartViewModel <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@model MarkdownBodyPartViewModel</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> <fieldset class=\"form-group\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><fieldset class =\u201cform-group\u201d></font> <label asp-for=\"Markdown\">@T[\"Markdown\"]</label> <textarea asp-for=\"Markdown\" rows=\"5\" class=\"form-control\"></textarea> <span class=\"hint\">@T[\"The markdown of the content item.\"]</span> </fieldset> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></\u5b57\u6bb5\u96c6></font>","title":"HTML\u7f16\u8f91\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#overriding-the-predefined-editors","text":"","title":"Overriding the predefined editors"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#_6","text":"You can override the HTML editor for the Default editor by creating a shape file named \u60a8\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u540d\u4e3a\u7684\u5f62\u72b6\u6587\u4ef6\u6765\u8986\u76d6\u201cDefault\u201d\u7f16\u8f91\u5668\u7684HTML\u7f16\u8f91\u5668 Markdown.Editor.cshtml . The Wysiwyg editor is defined by using the file named Markdown-Wysiwyg.Editor.cshtml .","title":"\u8986\u76d6\u9884\u5b9a\u4e49\u7684\u7f16\u8f91\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#credits","text":"","title":"CREDITS"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#_7","text":"","title":"\u5b66\u5206"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#markdig","text":"","title":"Markdig"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#markdig_1","text":"https://github.com/lunet-io/markdig https://github.com/lunet-io/markdig Copyright (c) 2016, Alexandre Mutel \u7248\u6743\u6240\u6709\uff08c\uff092016\uff0cAlexandre Mutel BSD-2 BSD-2","title":"Markdig"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#simplemde","text":"","title":"SimpleMDE"},{"location":"OrchardCore.Modules/OrchardCore.Markdown/#simplemde_1","text":"https://github.com/NextStepWebs/simplemde-markdown-editor https://github.com/NextStepWebs/simplemde-markdown-editor Copyright (c) 2015 Next Step Webs, Inc. \u7248\u6743\u6240\u6709\uff08c\uff092015 Next Step Webs\uff0cInc\u3002 MIT MIT","title":"SimpleMDE"},{"location":"OrchardCore.Modules/OrchardCore.Media/","text":"Media (OrchardCore.Media) \u5a92\u4f53\uff08OrchardCore.Media\uff09 The Media modules provides a UI to upload and organize binary files that can be used while creating content. \u5a92\u4f53\u6a21\u5757\u63d0\u4f9b\u7528\u4e8e\u4e0a\u8f7d\u548c\u7ec4\u7ec7\u53ef\u5728\u521b\u5efa\u5185\u5bb9\u65f6\u4f7f\u7528\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684UI\u3002 The media processing liquid filters can also create custom sized images. \u5a92\u4f53\u5904\u7406\u6db2\u4f53\u8fc7\u6ee4\u5668\u8fd8\u53ef\u4ee5\u521b\u5efa\u5b9a\u5236\u5c3a\u5bf8\u7684\u56fe\u50cf\u3002 HTML filters HTML\u8fc7\u6ee4\u5668 The following filters allow for media manipulation: \u4ee5\u4e0b\u8fc7\u6ee4\u5668\u5141\u8bb8\u5a92\u4f53\u64cd\u4f5c\uff1a asset_url ASSET_URL Returns the URL of a media based on its location in the media library. \u6839\u636e\u5a92\u4f53\u5e93\u4e2d\u5a92\u4f53\u5e93\u7684\u4f4d\u7f6e\u8fd4\u56de\u5a92\u4f53\u7684URL\u3002 Input \u8f93\u5165 {{ 'animals/kittens.jpg' | asset_url }} or when using your added content \u6216\u4f7f\u7528\u6dfb\u52a0\u7684\u5185\u5bb9\u65f6 {{ Model.ContentItem.Content.YourContentType.YourMediaField.Paths.first | asset_url }} Output \u4ea7\u91cf /media/animals/kittens.jpg img_tag img_tag Renders an <img src /> HTML tag. \u5448\u73b0\u4e00\u4e2a <img src /> HTML\u6807\u8bb0\u3002 Input \u8f93\u5165 {{ 'animals/kittens.jpg' | asset_url | img_tag }} Output \u4ea7\u91cf <img src=\"/media/animals/kittens.jpg\" /> Options \u9009\u9879 alt (Default) alt\uff08\u9ed8\u8ba4\uff09 The alternate text attribute value \u5907\u7528\u6587\u672c\u5c5e\u6027\u503c Image resizing filters \u56fe\u50cf\u8c03\u6574\u5927\u5c0f\u8fc7\u6ee4\u5668 resize_url resize_url Convert the input URL to create a dynamic image with the specified size arguments. \u8f6c\u6362\u8f93\u5165URL\u4ee5\u4f7f\u7528\u6307\u5b9a\u7684\u5927\u5c0f\u53c2\u6570\u521b\u5efa\u52a8\u6001\u56fe\u50cf\u3002 Input \u8f93\u5165 {{ 'animals/kittens.jpg' | asset_url | resize_url: width:100, height:240 | img_tag }} Output \u4ea7\u91cf <img src=\"/media/animals/kittens.jpg?width=100&height=240\" /> Arguments \u53c2\u6570 The width and height arguments are limited to a specific list of values to prevent width \u548c height \u53c2\u6570\u4ec5\u9650\u4e8e\u8981\u9632\u6b62\u7684\u7279\u5b9a\u503c\u5217\u8868 malicious clients from creating too many variations of the same image. The values can be \u6076\u610f\u5ba2\u6237\u7aef\u65e0\u6cd5\u521b\u5efa\u540c\u4e00\u56fe\u50cf\u7684\u592a\u591a\u53d8\u4f53\u3002\u4ef7\u503c\u89c2\u53ef\u4ee5\u662f 16 , 32 , 50 , 100 , 160 , 240 , 480 , 600 , 1024 , 2048 . width (or first argument) \u5bbd\u5ea6\uff08\u6216\u7b2c\u4e00\u4e2a\u53c2\u6570\uff09 The width of the new image. One of the allowed values. \u65b0\u56fe\u50cf\u7684\u5bbd\u5ea6\u3002\u5176\u4e2d\u4e00\u4e2a\u5141\u8bb8\u7684\u503c\u3002 height (or second argument) \u9ad8\u5ea6\uff08\u6216\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff09 The height of the new image. One of the allowed values. \u65b0\u56fe\u50cf\u7684\u9ad8\u5ea6\u3002\u5176\u4e2d\u4e00\u4e2a\u5141\u8bb8\u7684\u503c\u3002 mode (or third argument) \u6a21\u5f0f\uff08\u6216\u7b2c\u4e09\u4e2a\u53c2\u6570\uff09 The resize mode. \u8c03\u6574\u5927\u5c0f\u6a21\u5f0f\u3002 pad \u57ab Pads the resized image to fit the bounds of its container. \u5c06\u8c03\u6574\u5927\u5c0f\u7684\u56fe\u50cf\u586b\u5145\u4ee5\u9002\u5408\u5176\u5bb9\u5668\u7684\u8fb9\u754c\u3002 If only one dimension is passed, the original aspect ratio will be maintained. \u5982\u679c\u53ea\u4f20\u9012\u4e00\u4e2a\u5c3a\u5bf8\uff0c\u5219\u5c06\u4fdd\u6301\u539f\u59cb\u5bbd\u9ad8\u6bd4\u3002 boxpad boxpad Pads the image to fit the bounds of the container without resizing the original source. \u5c06\u56fe\u50cf\u586b\u5145\u4ee5\u9002\u5408\u5bb9\u5668\u7684\u8fb9\u754c\uff0c\u800c\u65e0\u9700\u8c03\u6574\u539f\u59cb\u6e90\u7684\u5927\u5c0f\u3002 When downscaling, performs the same functionality as pad . \u7f29\u5c0f\u65f6\uff0c\u6267\u884c\u4e0e\u201cpad\u201d\u76f8\u540c\u7684\u529f\u80fd\u3002 max (Default) \u6700\u5927\uff08\u9ed8\u8ba4\uff09 Constrains the resized image to fit the bounds of its container maintaining the original aspect ratio. \u7ea6\u675f\u8c03\u6574\u5927\u5c0f\u7684\u56fe\u50cf\u4ee5\u9002\u5e94\u5176\u5bb9\u5668\u7684\u8fb9\u754c\uff0c\u4fdd\u6301\u539f\u59cb\u9ad8\u5bbd\u6bd4\u3002 min \u5206 Resizes the image until the shortest side reaches the given dimension. Upscaling is disabled in this mode and the original image will be returned if attempted. \u8c03\u6574\u56fe\u50cf\u5927\u5c0f\uff0c\u76f4\u5230\u6700\u77ed\u8fb9\u5230\u8fbe\u7ed9\u5b9a\u5c3a\u5bf8\u3002\u5728\u6b64\u6a21\u5f0f\u4e0b\u7981\u7528\u5347\u7ea7\uff0c\u5982\u679c\u5c1d\u8bd5\uff0c\u5c06\u8fd4\u56de\u539f\u59cb\u56fe\u50cf\u3002 stretch \u4f38\u5c55 Stretches the resized image to fit the bounds of its container. \u62c9\u4f38\u5df2\u8c03\u6574\u5927\u5c0f\u7684\u56fe\u50cf\u4ee5\u9002\u5408\u5176\u5bb9\u5668\u7684\u8fb9\u754c\u3002 Input \u8f93\u5165 {{ 'animals/kittens.jpg' | asset_url | resize_url: width:100, height:240, mode:'crop' }} Output \u4ea7\u91cf <img src=\"/media/animals/kittens.jpg?width=100&height=240&rmode=crop\" /> Razor Helpers \u5243\u5200\u52a9\u624b To obtain the correct URL for an asset, use the AssetUrl helper extension method on the view's base Orchard property, e.g.: \u8981\u83b7\u53d6\u8d44\u4ea7\u7684\u6b63\u786eURL\uff0c\u8bf7\u5728\u89c6\u56fe\u7684\u57fa\u7840 Orchard \u5c5e\u6027\u4e0a\u4f7f\u7528 AssetUrl \u5e2e\u52a9\u6269\u5c55\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a @Orchard.AssetUrl(Model.Field.Paths[0]) To obtain the correct URL for a resized asset use AssetUrl with the optional width, height and resizeMode parameters, e.g.: \u8981\u83b7\u5f97\u8c03\u6574\u5927\u5c0f\u7684\u8d44\u4ea7\u7684\u6b63\u786eURL\uff0c\u8bf7\u4f7f\u7528\u5e26\u6709\u53ef\u9009width\uff0cheight\u548cresizeMode\u53c2\u6570\u7684 AssetUrl \uff0c\u4f8b\u5982\uff1a @Orchard.AssetUrl(Model.Field.Paths[0], width: 100 , height: 240, resizeMode: ResizeMode.Crop) Razor image resizing tag helpers Razor\u56fe\u50cf\u8c03\u6574\u5927\u5c0f\u6807\u7b7e\u52a9\u624b To use the image tag helpers add @addTagHelper *, OrchardCore.Media to _ViewImports. asset-src is used to obtain the correct URL for the asset and set the src attribute. Width, height and resize mode can be set using img-width , img-height and img-resize-mode respectively. e.g.: \u8981\u4f7f\u7528\u56fe\u50cf\u6807\u8bb0\u5e2e\u52a9\u7a0b\u5e8f\uff0c\u8bf7\u5c06\u201c@addTagHelper *\uff0cOrchardCore.Media\u201d\u6dfb\u52a0\u5230_ViewImports\u3002 asset-src \u7528\u4e8e\u83b7\u53d6\u8d44\u4ea7\u7684\u6b63\u786eURL\u5e76\u8bbe\u7f6e src \u5c5e\u6027\u3002\u53ef\u4ee5\u5206\u522b\u4f7f\u7528 img-width \uff0c img-height \u548c img-resize-mode \u8bbe\u7f6e\u5bbd\u5ea6\uff0c\u9ad8\u5ea6\u548c\u8c03\u6574\u5927\u5c0f\u6a21\u5f0f\u3002\u4f8b\u5982\u3002\uff1a <img asset-src=\"Model.Field.Paths[0]\" alt=\"...\" img-width=\"100\" img-height=\"240\" img-resize-mode=\"Crop\" /> Alternatively the Asset Url can be resolved independently and the src attribute used: \u6216\u8005\uff0c\u53ef\u4ee5\u5355\u72ec\u89e3\u6790Asset Url\u5e76\u4f7f\u7528 src \u5c5e\u6027\uff1a <img src=\"@Orchard.AssetUrl(Model.Field.Paths[0])\" alt=\"...\" img-width=\"100\" img-height=\"240\" img-resize-mode=\"Crop\" /> The Razor Helper is accessible on the Orchard property if the view is using Orchard Core's Razor base class, or by injecting OrchardCore.IOrchardHelper in all other cases. \u5982\u679c\u89c6\u56fe\u4f7f\u7528Orchard Core\u7684Razor\u57fa\u7c7b\uff0c\u6216\u8005\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\u6ce8\u5165 OrchardCore.IOrchardHelper \uff0c\u5219\u53ef\u4ee5\u5728 Orchard \u5c5e\u6027\u8bbf\u95eeRazor Helper\u3002 CREDITS \u5b66\u5206 ImageSharp ImageSharp https://sixlabors.com/projects/imagesharp/ https://sixlabors.com/projects/imagesharp/ Copyright 2012 James South \u7248\u6743\u6240\u67092012 James South Licensed under the Apache License, Version 2.0 \u6839\u636eApache\u8bb8\u53ef\u8bc12.0\u7248\u83b7\u5f97\u8bb8\u53ef","title":"Media"},{"location":"OrchardCore.Modules/OrchardCore.Media/#media-orchardcoremedia","text":"","title":"Media (OrchardCore.Media)"},{"location":"OrchardCore.Modules/OrchardCore.Media/#orchardcoremedia","text":"The Media modules provides a UI to upload and organize binary files that can be used while creating content. \u5a92\u4f53\u6a21\u5757\u63d0\u4f9b\u7528\u4e8e\u4e0a\u8f7d\u548c\u7ec4\u7ec7\u53ef\u5728\u521b\u5efa\u5185\u5bb9\u65f6\u4f7f\u7528\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684UI\u3002 The media processing liquid filters can also create custom sized images. \u5a92\u4f53\u5904\u7406\u6db2\u4f53\u8fc7\u6ee4\u5668\u8fd8\u53ef\u4ee5\u521b\u5efa\u5b9a\u5236\u5c3a\u5bf8\u7684\u56fe\u50cf\u3002","title":"\u5a92\u4f53\uff08OrchardCore.Media\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Media/#html-filters","text":"","title":"HTML filters"},{"location":"OrchardCore.Modules/OrchardCore.Media/#html","text":"The following filters allow for media manipulation: \u4ee5\u4e0b\u8fc7\u6ee4\u5668\u5141\u8bb8\u5a92\u4f53\u64cd\u4f5c\uff1a","title":"HTML\u8fc7\u6ee4\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Media/#asset_url","text":"","title":"asset_url"},{"location":"OrchardCore.Modules/OrchardCore.Media/#asset_url_1","text":"Returns the URL of a media based on its location in the media library. \u6839\u636e\u5a92\u4f53\u5e93\u4e2d\u5a92\u4f53\u5e93\u7684\u4f4d\u7f6e\u8fd4\u56de\u5a92\u4f53\u7684URL\u3002","title":"ASSET_URL"},{"location":"OrchardCore.Modules/OrchardCore.Media/#input","text":"","title":"Input"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_1","text":"{{ 'animals/kittens.jpg' | asset_url }} or when using your added content \u6216\u4f7f\u7528\u6dfb\u52a0\u7684\u5185\u5bb9\u65f6 {{ Model.ContentItem.Content.YourContentType.YourMediaField.Paths.first | asset_url }}","title":"\u8f93\u5165"},{"location":"OrchardCore.Modules/OrchardCore.Media/#output","text":"","title":"Output"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_2","text":"/media/animals/kittens.jpg","title":"\u4ea7\u91cf"},{"location":"OrchardCore.Modules/OrchardCore.Media/#img_tag","text":"","title":"img_tag"},{"location":"OrchardCore.Modules/OrchardCore.Media/#img_tag_1","text":"Renders an <img src /> HTML tag. \u5448\u73b0\u4e00\u4e2a <img src /> HTML\u6807\u8bb0\u3002","title":"img_tag"},{"location":"OrchardCore.Modules/OrchardCore.Media/#input_1","text":"","title":"Input"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_3","text":"{{ 'animals/kittens.jpg' | asset_url | img_tag }}","title":"\u8f93\u5165"},{"location":"OrchardCore.Modules/OrchardCore.Media/#output_1","text":"","title":"Output"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_4","text":"<img src=\"/media/animals/kittens.jpg\" />","title":"\u4ea7\u91cf"},{"location":"OrchardCore.Modules/OrchardCore.Media/#options","text":"","title":"Options"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_5","text":"","title":"\u9009\u9879"},{"location":"OrchardCore.Modules/OrchardCore.Media/#alt-default","text":"","title":"alt (Default)"},{"location":"OrchardCore.Modules/OrchardCore.Media/#alt","text":"The alternate text attribute value \u5907\u7528\u6587\u672c\u5c5e\u6027\u503c","title":"alt\uff08\u9ed8\u8ba4\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Media/#image-resizing-filters","text":"","title":"Image resizing filters"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_6","text":"","title":"\u56fe\u50cf\u8c03\u6574\u5927\u5c0f\u8fc7\u6ee4\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Media/#resize_url","text":"","title":"resize_url"},{"location":"OrchardCore.Modules/OrchardCore.Media/#resize_url_1","text":"Convert the input URL to create a dynamic image with the specified size arguments. \u8f6c\u6362\u8f93\u5165URL\u4ee5\u4f7f\u7528\u6307\u5b9a\u7684\u5927\u5c0f\u53c2\u6570\u521b\u5efa\u52a8\u6001\u56fe\u50cf\u3002","title":"resize_url"},{"location":"OrchardCore.Modules/OrchardCore.Media/#input_2","text":"","title":"Input"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_7","text":"{{ 'animals/kittens.jpg' | asset_url | resize_url: width:100, height:240 | img_tag }}","title":"\u8f93\u5165"},{"location":"OrchardCore.Modules/OrchardCore.Media/#output_2","text":"","title":"Output"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_8","text":"<img src=\"/media/animals/kittens.jpg?width=100&height=240\" />","title":"\u4ea7\u91cf"},{"location":"OrchardCore.Modules/OrchardCore.Media/#arguments","text":"","title":"Arguments"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_9","text":"The width and height arguments are limited to a specific list of values to prevent width \u548c height \u53c2\u6570\u4ec5\u9650\u4e8e\u8981\u9632\u6b62\u7684\u7279\u5b9a\u503c\u5217\u8868 malicious clients from creating too many variations of the same image. The values can be \u6076\u610f\u5ba2\u6237\u7aef\u65e0\u6cd5\u521b\u5efa\u540c\u4e00\u56fe\u50cf\u7684\u592a\u591a\u53d8\u4f53\u3002\u4ef7\u503c\u89c2\u53ef\u4ee5\u662f 16 , 32 , 50 , 100 , 160 , 240 , 480 , 600 , 1024 , 2048 .","title":"\u53c2\u6570"},{"location":"OrchardCore.Modules/OrchardCore.Media/#width-or-first-argument","text":"","title":"width (or first argument)"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_10","text":"The width of the new image. One of the allowed values. \u65b0\u56fe\u50cf\u7684\u5bbd\u5ea6\u3002\u5176\u4e2d\u4e00\u4e2a\u5141\u8bb8\u7684\u503c\u3002","title":"\u5bbd\u5ea6\uff08\u6216\u7b2c\u4e00\u4e2a\u53c2\u6570\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Media/#height-or-second-argument","text":"","title":"height (or second argument)"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_11","text":"The height of the new image. One of the allowed values. \u65b0\u56fe\u50cf\u7684\u9ad8\u5ea6\u3002\u5176\u4e2d\u4e00\u4e2a\u5141\u8bb8\u7684\u503c\u3002","title":"\u9ad8\u5ea6\uff08\u6216\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Media/#mode-or-third-argument","text":"","title":"mode (or third argument)"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_12","text":"The resize mode. \u8c03\u6574\u5927\u5c0f\u6a21\u5f0f\u3002","title":"\u6a21\u5f0f\uff08\u6216\u7b2c\u4e09\u4e2a\u53c2\u6570\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Media/#pad","text":"","title":"pad"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_13","text":"Pads the resized image to fit the bounds of its container. \u5c06\u8c03\u6574\u5927\u5c0f\u7684\u56fe\u50cf\u586b\u5145\u4ee5\u9002\u5408\u5176\u5bb9\u5668\u7684\u8fb9\u754c\u3002 If only one dimension is passed, the original aspect ratio will be maintained. \u5982\u679c\u53ea\u4f20\u9012\u4e00\u4e2a\u5c3a\u5bf8\uff0c\u5219\u5c06\u4fdd\u6301\u539f\u59cb\u5bbd\u9ad8\u6bd4\u3002","title":"\u57ab"},{"location":"OrchardCore.Modules/OrchardCore.Media/#boxpad","text":"","title":"boxpad"},{"location":"OrchardCore.Modules/OrchardCore.Media/#boxpad_1","text":"Pads the image to fit the bounds of the container without resizing the original source. \u5c06\u56fe\u50cf\u586b\u5145\u4ee5\u9002\u5408\u5bb9\u5668\u7684\u8fb9\u754c\uff0c\u800c\u65e0\u9700\u8c03\u6574\u539f\u59cb\u6e90\u7684\u5927\u5c0f\u3002 When downscaling, performs the same functionality as pad . \u7f29\u5c0f\u65f6\uff0c\u6267\u884c\u4e0e\u201cpad\u201d\u76f8\u540c\u7684\u529f\u80fd\u3002","title":"boxpad"},{"location":"OrchardCore.Modules/OrchardCore.Media/#max-default","text":"","title":"max (Default)"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_14","text":"Constrains the resized image to fit the bounds of its container maintaining the original aspect ratio. \u7ea6\u675f\u8c03\u6574\u5927\u5c0f\u7684\u56fe\u50cf\u4ee5\u9002\u5e94\u5176\u5bb9\u5668\u7684\u8fb9\u754c\uff0c\u4fdd\u6301\u539f\u59cb\u9ad8\u5bbd\u6bd4\u3002","title":"\u6700\u5927\uff08\u9ed8\u8ba4\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Media/#min","text":"","title":"min"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_15","text":"Resizes the image until the shortest side reaches the given dimension. Upscaling is disabled in this mode and the original image will be returned if attempted. \u8c03\u6574\u56fe\u50cf\u5927\u5c0f\uff0c\u76f4\u5230\u6700\u77ed\u8fb9\u5230\u8fbe\u7ed9\u5b9a\u5c3a\u5bf8\u3002\u5728\u6b64\u6a21\u5f0f\u4e0b\u7981\u7528\u5347\u7ea7\uff0c\u5982\u679c\u5c1d\u8bd5\uff0c\u5c06\u8fd4\u56de\u539f\u59cb\u56fe\u50cf\u3002","title":"\u5206"},{"location":"OrchardCore.Modules/OrchardCore.Media/#stretch","text":"","title":"stretch"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_16","text":"Stretches the resized image to fit the bounds of its container. \u62c9\u4f38\u5df2\u8c03\u6574\u5927\u5c0f\u7684\u56fe\u50cf\u4ee5\u9002\u5408\u5176\u5bb9\u5668\u7684\u8fb9\u754c\u3002","title":"\u4f38\u5c55"},{"location":"OrchardCore.Modules/OrchardCore.Media/#input_3","text":"","title":"Input"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_17","text":"{{ 'animals/kittens.jpg' | asset_url | resize_url: width:100, height:240, mode:'crop' }}","title":"\u8f93\u5165"},{"location":"OrchardCore.Modules/OrchardCore.Media/#output_3","text":"","title":"Output"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_18","text":"<img src=\"/media/animals/kittens.jpg?width=100&height=240&rmode=crop\" />","title":"\u4ea7\u91cf"},{"location":"OrchardCore.Modules/OrchardCore.Media/#razor-helpers","text":"","title":"Razor Helpers"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_19","text":"To obtain the correct URL for an asset, use the AssetUrl helper extension method on the view's base Orchard property, e.g.: \u8981\u83b7\u53d6\u8d44\u4ea7\u7684\u6b63\u786eURL\uff0c\u8bf7\u5728\u89c6\u56fe\u7684\u57fa\u7840 Orchard \u5c5e\u6027\u4e0a\u4f7f\u7528 AssetUrl \u5e2e\u52a9\u6269\u5c55\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a @Orchard.AssetUrl(Model.Field.Paths[0]) To obtain the correct URL for a resized asset use AssetUrl with the optional width, height and resizeMode parameters, e.g.: \u8981\u83b7\u5f97\u8c03\u6574\u5927\u5c0f\u7684\u8d44\u4ea7\u7684\u6b63\u786eURL\uff0c\u8bf7\u4f7f\u7528\u5e26\u6709\u53ef\u9009width\uff0cheight\u548cresizeMode\u53c2\u6570\u7684 AssetUrl \uff0c\u4f8b\u5982\uff1a @Orchard.AssetUrl(Model.Field.Paths[0], width: 100 , height: 240, resizeMode: ResizeMode.Crop)","title":"\u5243\u5200\u52a9\u624b"},{"location":"OrchardCore.Modules/OrchardCore.Media/#razor-image-resizing-tag-helpers","text":"","title":"Razor image resizing tag helpers"},{"location":"OrchardCore.Modules/OrchardCore.Media/#razor","text":"To use the image tag helpers add @addTagHelper *, OrchardCore.Media to _ViewImports. asset-src is used to obtain the correct URL for the asset and set the src attribute. Width, height and resize mode can be set using img-width , img-height and img-resize-mode respectively. e.g.: \u8981\u4f7f\u7528\u56fe\u50cf\u6807\u8bb0\u5e2e\u52a9\u7a0b\u5e8f\uff0c\u8bf7\u5c06\u201c@addTagHelper *\uff0cOrchardCore.Media\u201d\u6dfb\u52a0\u5230_ViewImports\u3002 asset-src \u7528\u4e8e\u83b7\u53d6\u8d44\u4ea7\u7684\u6b63\u786eURL\u5e76\u8bbe\u7f6e src \u5c5e\u6027\u3002\u53ef\u4ee5\u5206\u522b\u4f7f\u7528 img-width \uff0c img-height \u548c img-resize-mode \u8bbe\u7f6e\u5bbd\u5ea6\uff0c\u9ad8\u5ea6\u548c\u8c03\u6574\u5927\u5c0f\u6a21\u5f0f\u3002\u4f8b\u5982\u3002\uff1a <img asset-src=\"Model.Field.Paths[0]\" alt=\"...\" img-width=\"100\" img-height=\"240\" img-resize-mode=\"Crop\" /> Alternatively the Asset Url can be resolved independently and the src attribute used: \u6216\u8005\uff0c\u53ef\u4ee5\u5355\u72ec\u89e3\u6790Asset Url\u5e76\u4f7f\u7528 src \u5c5e\u6027\uff1a <img src=\"@Orchard.AssetUrl(Model.Field.Paths[0])\" alt=\"...\" img-width=\"100\" img-height=\"240\" img-resize-mode=\"Crop\" /> The Razor Helper is accessible on the Orchard property if the view is using Orchard Core's Razor base class, or by injecting OrchardCore.IOrchardHelper in all other cases. \u5982\u679c\u89c6\u56fe\u4f7f\u7528Orchard Core\u7684Razor\u57fa\u7c7b\uff0c\u6216\u8005\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\u6ce8\u5165 OrchardCore.IOrchardHelper \uff0c\u5219\u53ef\u4ee5\u5728 Orchard \u5c5e\u6027\u8bbf\u95eeRazor Helper\u3002","title":"Razor\u56fe\u50cf\u8c03\u6574\u5927\u5c0f\u6807\u7b7e\u52a9\u624b"},{"location":"OrchardCore.Modules/OrchardCore.Media/#credits","text":"","title":"CREDITS"},{"location":"OrchardCore.Modules/OrchardCore.Media/#_20","text":"","title":"\u5b66\u5206"},{"location":"OrchardCore.Modules/OrchardCore.Media/#imagesharp","text":"","title":"ImageSharp"},{"location":"OrchardCore.Modules/OrchardCore.Media/#imagesharp_1","text":"https://sixlabors.com/projects/imagesharp/ https://sixlabors.com/projects/imagesharp/ Copyright 2012 James South \u7248\u6743\u6240\u67092012 James South Licensed under the Apache License, Version 2.0 \u6839\u636eApache\u8bb8\u53ef\u8bc12.0\u7248\u83b7\u5f97\u8bb8\u53ef","title":"ImageSharp"},{"location":"OrchardCore.Modules/OrchardCore.Media.Azure/","text":"Azure (OrchardCore.Azure) Azure\uff08OrchardCore.Azure\uff09 TBD TBD","title":"Azure (OrchardCore.Azure)"},{"location":"OrchardCore.Modules/OrchardCore.Media.Azure/#azure-orchardcoreazure","text":"","title":"Azure (OrchardCore.Azure)"},{"location":"OrchardCore.Modules/OrchardCore.Media.Azure/#azureorchardcoreazure","text":"TBD TBD","title":"Azure\uff08OrchardCore.Azure\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Menu/","text":"Menu (OrchardCore.Menu) \u83dc\u5355\uff08OrchardCore.Menu\uff09 Shapes \u5f62\u72b6 Menu Menu The Menu shape is used to render a Menu. \u201cMenu\u201d\u5f62\u72b6\u7528\u4e8e\u6e32\u67d3\u83dc\u5355\u3002 | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.ContentItemId | If defined, contains the content item identifier of the menu to render. | | Model.ContentItemId |\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u5305\u542b\u8981\u5448\u73b0\u7684\u83dc\u5355\u7684\u5185\u5bb9\u9879\u6807\u8bc6\u7b26\u3002 | | Model.Items | The list of menu items shapes for the menu. These are shapes of type MenuItem . | | Model.Items |\u83dc\u5355\u7684\u83dc\u5355\u9879\u5f62\u72b6\u5217\u8868\u3002\u8fd9\u4e9b\u662f MenuItem \u7c7b\u578b\u7684\u5f62\u72b6\u3002 | | Model.Differentiator | If defined, contains the formatted name of the menu. For instance MainMenu . | | Model.Differentiator |\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u5305\u542b\u83dc\u5355\u7684\u683c\u5f0f\u5316\u540d\u79f0\u3002\u4f8b\u5982 MainMenu \u3002 | Menu Alternates \u83dc\u5355\u66ff\u4ee3 | Definition | Template | Filename| |\u5b9a\u4e49|\u6a21\u677f|\u6587\u4ef6\u540d| | ---------- | --------- | ------------ | | ---------- | --------- | ------------ | | Menu__[Differentiator] | Menu__MainMenu | Menu-MainMenu.cshtml | | \u83dc\u5355__ [\u5fae\u5206\u5668] | Menu__MainMenu | Menu-MainMenu.cshtml | Menu Example \u83dc\u5355\u793a\u4f8b <nav> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><NAV></font> <ul class=\"nav navbar-nav {{ Model.Classes | join: \" \" }}\"> {% for item in Model.Items %} {{ item | shape_render }} {% endfor %} </ul> </nav> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ NAV></font> @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> TagBuilder tag = Tag(Model, \"ul\"); tag.AddCssClass(\"nav navbar-nav\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> foreach (var item in Model.Items) { tag.InnerHtml.AppendHtml(await DisplayAsync(item)); } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @tag <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@\u6807\u7b7e</font> MenuItem MenuItem The MenuItem shape is used to render a menu item. MenuItem \u5f62\u72b6\u7528\u4e8e\u6e32\u67d3\u83dc\u5355\u9879\u3002 | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.Menu | The Menu shape owning this item. | | Model.Menu |\u62e5\u6709\u6b64\u9879\u76ee\u7684\u201c\u83dc\u5355\u201d\u5f62\u72b6\u3002 | | Model.ContentItem | The content item representing this menu item. | | Model.ContentItem |\u8868\u793a\u6b64\u83dc\u5355\u9879\u7684\u5185\u5bb9\u9879\u3002 | | Model.Level | The level of the menu item. 0 for top level menu items. | | Model.Level |\u83dc\u5355\u9879\u7684\u7ea7\u522b\u3002\u9876\u7ea7\u83dc\u5355\u9879\u7684\u201c0\u201d\u3002 | | Model.Items | The list of sub menu items shapes. These are shapes of type MenuItem . | | Model.Items |\u5b50\u83dc\u5355\u9879\u7684\u5f62\u72b6\u5217\u8868\u3002\u8fd9\u4e9b\u662f MenuItem \u7c7b\u578b\u7684\u5f62\u72b6\u3002 | | Model.Differentiator | If defined, contains the formatted name of the menu. For instance MainMenu . | | Model.Differentiator |\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u5305\u542b\u83dc\u5355\u7684\u683c\u5f0f\u5316\u540d\u79f0\u3002\u4f8b\u5982 MainMenu \u3002 | MenuItem Alternates MenuItem\u66ff\u4ee3 | Definition | Template | Filename| |\u5b9a\u4e49|\u6a21\u677f|\u6587\u4ef6\u540d| | ---------- | --------- | ------------ | | ---------- | --------- | ------------ | | MenuItem__level__[level] | MenuItem__level__2 | MenuItem-level-2.cshtml | | MenuItem__level __ [level] | MenuItem__level__2 | MenuItem-level-2.cshtml | | MenuItem__[ContentType] | MenuItem__HtmlMenuItem | MenuItem-HtmlMenuItem.cshtml | | MenuItem __ [ContentType] | MenuItem__HtmlMenuItem | MenuItem-HtmlMenuItem.cshtml | | MenuItem__[ContentType]__level__[level] | MenuItem__HtmlMenuItem__level__2 | MenuItem-HtmlMenuItem-level-2.cshtml | | MenuItem __ [ContentType] __ level __ [level] | MenuItem__HtmlMenuItem__level__2 | MenuItem-HtmlMenuItem-level-2.cshtml | | MenuItem__[MenuName] | MenuItem__MainMenu | MenuItem-MainMenu.cshtml | | MenuItem __ [MenuName] | MenuItem__MainMenu | MenuItem-MainMenu.cshtml | | MenuItem__[MenuName]__level__[level] | MenuItem__MainMenu__level__2 | MenuItem-MainMenu-level-2.cshtml | | MenuItem __ [MenuName] __ level __ [level] | MenuItem__MainMenu__level _2 | MenuItem-MainMenu-level-2.cshtml | | MenuItem__[MenuName]__[ContentType] | MenuItem__MainMenu__HtmlMenuItem | MenuItem-MainMenu-HtmlMenuItem.cshtml | | MenuItem __ [MenuName] __ [ContentType] | MenuItem__MainMenu__HtmlMenuItem | MenuItem-MainMenu-HtmlMenuItem.cshtml | | MenuItem__[MenuName]__[ContentType]__level__[level] | MenuItem__MainMenu__HtmlMenuItem__level__2 | MenuItem-MainMenu-HtmlMenuItem-level-2.cshtml | | MenuItem __ [MenuName] __ [ContentType] __ level __ [level] | MenuItem__MainMenu__HtmlMenuItem__level__2 | MenuItem-MainMenu-HtmlMenuItem-level-2.cshtml | MenuItem Example MenuItem\u793a\u4f8b <li class=\"nav-item{% if Model.HasItems %} dropdown{% endif %}\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><li class =\u201cnav-item {\uff05if Model.HasItems\uff05} dropdown {\uff05endif\uff05}\u201d></font> {% shape_clear_alternates Model %} {% shape_type Model \"MenuItemLink\" %} {{ Model | shape_render }} {% if Model.HasItems %} <div class=\"dropdown-menu\"> {% for item in Model.Items %} {{ item | shape_render }} {% endfor %} </div> {% endif %} </li> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ LI></font> @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> TagBuilder tag = Tag(Model, \"li\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> if ((bool)Model.HasItems) { tag.AddCssClass(\"dropdown\"); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // Morphing the shape to keep Model untouched Model.Metadata.Alternates.Clear(); Model.Metadata.Type = \"MenuItemLink\"; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> tag.InnerHtml.AppendHtml(await DisplayAsync(Model)); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> if ((bool)(Model.HasItems)) { TagBuilder parentTag = Tag(Model, \"div\"); parentTag.AddCssClass(\"dropdown-menu\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> foreach (var item in Model.Items) { item.ParentTag = parentTag; parentTag.InnerHtml.AppendHtml(await DisplayAsync(item)); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> tag.InnerHtml.AppendHtml(parentTag); } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @tag <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@\u6807\u7b7e</font> MenuItemLink MenuItemLink The MenuItemLink shape is used to render a menu item link. MenuItemLink \u5f62\u72b6\u7528\u4e8e\u5448\u73b0\u83dc\u5355\u9879\u94fe\u63a5\u3002 This shape is created by morphing a MenuItem shape into a MenuItemLink . Hence all the properties \u8fd9\u79cd\u5f62\u72b6\u662f\u901a\u8fc7\u5c06 MenuItem \u5f62\u72b6\u53d8\u5f62\u4e3a MenuItemLink \u800c\u521b\u5efa\u7684\u3002\u56e0\u6b64\u6240\u6709\u7684\u5c5e\u6027 available on the MenuItem shape are still available. 'MenuItem`\u5f62\u72b6\u4e0a\u53ef\u7528\u7684\u5f62\u72b6\u4ecd\u7136\u53ef\u7528\u3002 | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.Menu | The Menu shape owning this item. | | Model.Menu |\u62e5\u6709\u6b64\u9879\u76ee\u7684\u201c\u83dc\u5355\u201d\u5f62\u72b6\u3002 | | Model.ContentItem | The content item representing this menu item. | | Model.ContentItem |\u8868\u793a\u6b64\u83dc\u5355\u9879\u7684\u5185\u5bb9\u9879\u3002 | | Model.Level | The level of the menu item. 0 for top level menu items. | | Model.Level |\u83dc\u5355\u9879\u7684\u7ea7\u522b\u3002\u9876\u7ea7\u83dc\u5355\u9879\u7684\u201c0\u201d\u3002 | | Model.Items | The list of sub menu items shapes. These are shapes of type MenuItem . | | Model.Items |\u5b50\u83dc\u5355\u9879\u7684\u5f62\u72b6\u5217\u8868\u3002\u8fd9\u4e9b\u662f MenuItem \u7c7b\u578b\u7684\u5f62\u72b6\u3002 | | Model.Differentiator | If defined, contains the formatted name of the menu. For instance MainMenu . | | Model.Differentiator |\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u5305\u542b\u83dc\u5355\u7684\u683c\u5f0f\u5316\u540d\u79f0\u3002\u4f8b\u5982 MainMenu \u3002 | MenuItemLink Alternates MenuItemLink\u66ff\u4ee3 | Definition | Template | Filename| |\u5b9a\u4e49|\u6a21\u677f|\u6587\u4ef6\u540d| | ---------- | --------- | ------------ | | ---------- | --------- | ------------ | | MenuItemLink__level__[level] | MenuItemLink__level__2 | MenuItemLink-level-2.cshtml | | MenuItemLink__level __ [level] | MenuItemLink__level__2 | MenuItemLink-level-2.cshtml | | MenuItemLink__[ContentType] | MenuItemLink__HtmlMenuItem | MenuItemLink-HtmlMenuItem.cshtml | | MenuItemLink __ [ContentType] | MenuItemLink__HtmlMenuItem | MenuItemLink-HtmlMenuItem.cshtml | | MenuItemLink__[ContentType]__level__[level] | MenuItemLink__HtmlMenuItem__level__2 | MenuItemLink-HtmlMenuItem-level-2.cshtml | | MenuItemLink __ [ContentType] __ level __ [level] | MenuItemLink__HtmlMenuItem__level__2 | MenuItemLink-HtmlMenuItem-level-2.cshtml | | MenuItemLink__[MenuName] | MenuItemLink__MainMenu | MenuItemLink-MainMenu.cshtml | | MenuItemLink __ [MenuName] | MenuItemLink__MainMenu | MenuItemLink-MainMenu.cshtml | | MenuItemLink__[MenuName]__level__[level] | MenuItemLink__MainMenu__level__2 | MenuItemLink-MainMenu-level-2.cshtml | | MenuItemLink __ [MenuName] __ level __ [level] | MenuItemLink__MainMenu__level__2 | MenuItemLink-MainMenu-level-2.cshtml | | MenuItemLink__[MenuName]__[ContentType] | MenuItemLink__MainMenu__HtmlMenuItem | MenuItemLink-MainMenu-HtmlMenuItem.cshtml | | MenuItemLink __ [MenuName] __ [ContentType] | MenuItemLink__MainMenu__HtmlMenuItem | MenuItemLink-MainMenu-HtmlMenuItem.cshtml | | MenuItemLink__[MenuName]__[ContentType]__level__[level] | MenuItemLink__MainMenu__HtmlMenuItem__level__2 | MenuItemLink-MainMenu-HtmlMenuItem-level-2.cshtml | | MenuItemLink __ [MenuName] __ [ContentType] __ level __ [level] | MenuItemLink__MainMenu__HtmlMenuItem__level__2 | MenuItemLink-MainMenu-HtmlMenuItem-level-2.cshtml | MenuItemLink Example MenuItemLink\u793a\u4f8b {% assign link = Model.ContentItem.Content.LinkMenuItemPart %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign link = Model.ContentItem.Content.LinkMenuItemPart\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {% if Model.HasItems %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05if Model.HasItems\uff05}</font> <a href=\"{{ link.Url | href }}\" class=\"nav-link dropdown-toggle\">{{ link.Name }}<b class=\"caret\"></b></a> {% else %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05else\uff05}</font> <a href=\"{{ link.Url | href }}\" class=\"nav-link\">{{ link.Name }}</a> {% endif %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05 \u4e07\u4e00 \uff05}</font> @using OrchardCore.ContentManagement <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@using OrchardCore.ContentManagement</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> ContentItem contentItem = Model.ContentItem; var link = contentItem.Content[\"LinkMenuItemPart\"]; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> if ((bool)(Model.HasItems)) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">if\uff08\uff08bool\uff09\uff08Model.HasItems\uff09\uff09</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"@Url.Content((string)link.Url)\">@link.Name<b class=\"caret\"></b></a> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> else <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u5176\u4ed6</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> <a class=\"nav-link\" href=\"@Url.Content((string)link.Url)\">@link.Name</a> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> CREDITS \u5b66\u5206 nestedSortable jQuery plugin nestedSortable jQuery\u63d2\u4ef6 https://github.com/ilikenwf/nestedSortable https://github.com/ilikenwf/nestedSortable License: MIT \u6267\u7167\uff1a\u9ebb\u7701\u7406\u5de5\u5b66\u9662","title":"Menu"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menu-orchardcoremenu","text":"","title":"Menu (OrchardCore.Menu)"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#orchardcoremenu","text":"","title":"\u83dc\u5355\uff08OrchardCore.Menu\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#shapes","text":"","title":"Shapes"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#_1","text":"","title":"\u5f62\u72b6"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menu","text":"","title":"Menu"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menu_1","text":"The Menu shape is used to render a Menu. \u201cMenu\u201d\u5f62\u72b6\u7528\u4e8e\u6e32\u67d3\u83dc\u5355\u3002 | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.ContentItemId | If defined, contains the content item identifier of the menu to render. | | Model.ContentItemId |\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u5305\u542b\u8981\u5448\u73b0\u7684\u83dc\u5355\u7684\u5185\u5bb9\u9879\u6807\u8bc6\u7b26\u3002 | | Model.Items | The list of menu items shapes for the menu. These are shapes of type MenuItem . | | Model.Items |\u83dc\u5355\u7684\u83dc\u5355\u9879\u5f62\u72b6\u5217\u8868\u3002\u8fd9\u4e9b\u662f MenuItem \u7c7b\u578b\u7684\u5f62\u72b6\u3002 | | Model.Differentiator | If defined, contains the formatted name of the menu. For instance MainMenu . | | Model.Differentiator |\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u5305\u542b\u83dc\u5355\u7684\u683c\u5f0f\u5316\u540d\u79f0\u3002\u4f8b\u5982 MainMenu \u3002 |","title":"Menu"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menu-alternates","text":"","title":"Menu Alternates"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#_2","text":"| Definition | Template | Filename| |\u5b9a\u4e49|\u6a21\u677f|\u6587\u4ef6\u540d| | ---------- | --------- | ------------ | | ---------- | --------- | ------------ | | Menu__[Differentiator] | Menu__MainMenu | Menu-MainMenu.cshtml | | \u83dc\u5355__ [\u5fae\u5206\u5668] | Menu__MainMenu | Menu-MainMenu.cshtml |","title":"\u83dc\u5355\u66ff\u4ee3"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menu-example","text":"","title":"Menu Example"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#_3","text":"<nav> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><NAV></font> <ul class=\"nav navbar-nav {{ Model.Classes | join: \" \" }}\"> {% for item in Model.Items %} {{ item | shape_render }} {% endfor %} </ul> </nav> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ NAV></font> @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> TagBuilder tag = Tag(Model, \"ul\"); tag.AddCssClass(\"nav navbar-nav\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> foreach (var item in Model.Items) { tag.InnerHtml.AppendHtml(await DisplayAsync(item)); } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @tag <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@\u6807\u7b7e</font>","title":"\u83dc\u5355\u793a\u4f8b"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitem","text":"","title":"MenuItem"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitem_1","text":"The MenuItem shape is used to render a menu item. MenuItem \u5f62\u72b6\u7528\u4e8e\u6e32\u67d3\u83dc\u5355\u9879\u3002 | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.Menu | The Menu shape owning this item. | | Model.Menu |\u62e5\u6709\u6b64\u9879\u76ee\u7684\u201c\u83dc\u5355\u201d\u5f62\u72b6\u3002 | | Model.ContentItem | The content item representing this menu item. | | Model.ContentItem |\u8868\u793a\u6b64\u83dc\u5355\u9879\u7684\u5185\u5bb9\u9879\u3002 | | Model.Level | The level of the menu item. 0 for top level menu items. | | Model.Level |\u83dc\u5355\u9879\u7684\u7ea7\u522b\u3002\u9876\u7ea7\u83dc\u5355\u9879\u7684\u201c0\u201d\u3002 | | Model.Items | The list of sub menu items shapes. These are shapes of type MenuItem . | | Model.Items |\u5b50\u83dc\u5355\u9879\u7684\u5f62\u72b6\u5217\u8868\u3002\u8fd9\u4e9b\u662f MenuItem \u7c7b\u578b\u7684\u5f62\u72b6\u3002 | | Model.Differentiator | If defined, contains the formatted name of the menu. For instance MainMenu . | | Model.Differentiator |\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u5305\u542b\u83dc\u5355\u7684\u683c\u5f0f\u5316\u540d\u79f0\u3002\u4f8b\u5982 MainMenu \u3002 |","title":"MenuItem"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitem-alternates","text":"","title":"MenuItem Alternates"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitem_2","text":"| Definition | Template | Filename| |\u5b9a\u4e49|\u6a21\u677f|\u6587\u4ef6\u540d| | ---------- | --------- | ------------ | | ---------- | --------- | ------------ | | MenuItem__level__[level] | MenuItem__level__2 | MenuItem-level-2.cshtml | | MenuItem__level __ [level] | MenuItem__level__2 | MenuItem-level-2.cshtml | | MenuItem__[ContentType] | MenuItem__HtmlMenuItem | MenuItem-HtmlMenuItem.cshtml | | MenuItem __ [ContentType] | MenuItem__HtmlMenuItem | MenuItem-HtmlMenuItem.cshtml | | MenuItem__[ContentType]__level__[level] | MenuItem__HtmlMenuItem__level__2 | MenuItem-HtmlMenuItem-level-2.cshtml | | MenuItem __ [ContentType] __ level __ [level] | MenuItem__HtmlMenuItem__level__2 | MenuItem-HtmlMenuItem-level-2.cshtml | | MenuItem__[MenuName] | MenuItem__MainMenu | MenuItem-MainMenu.cshtml | | MenuItem __ [MenuName] | MenuItem__MainMenu | MenuItem-MainMenu.cshtml | | MenuItem__[MenuName]__level__[level] | MenuItem__MainMenu__level__2 | MenuItem-MainMenu-level-2.cshtml | | MenuItem __ [MenuName] __ level __ [level] | MenuItem__MainMenu__level _2 | MenuItem-MainMenu-level-2.cshtml | | MenuItem__[MenuName]__[ContentType] | MenuItem__MainMenu__HtmlMenuItem | MenuItem-MainMenu-HtmlMenuItem.cshtml | | MenuItem __ [MenuName] __ [ContentType] | MenuItem__MainMenu__HtmlMenuItem | MenuItem-MainMenu-HtmlMenuItem.cshtml | | MenuItem__[MenuName]__[ContentType]__level__[level] | MenuItem__MainMenu__HtmlMenuItem__level__2 | MenuItem-MainMenu-HtmlMenuItem-level-2.cshtml | | MenuItem __ [MenuName] __ [ContentType] __ level __ [level] | MenuItem__MainMenu__HtmlMenuItem__level__2 | MenuItem-MainMenu-HtmlMenuItem-level-2.cshtml |","title":"MenuItem\u66ff\u4ee3"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitem-example","text":"","title":"MenuItem Example"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitem_3","text":"<li class=\"nav-item{% if Model.HasItems %} dropdown{% endif %}\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><li class =\u201cnav-item {\uff05if Model.HasItems\uff05} dropdown {\uff05endif\uff05}\u201d></font> {% shape_clear_alternates Model %} {% shape_type Model \"MenuItemLink\" %} {{ Model | shape_render }} {% if Model.HasItems %} <div class=\"dropdown-menu\"> {% for item in Model.Items %} {{ item | shape_render }} {% endfor %} </div> {% endif %} </li> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ LI></font> @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> TagBuilder tag = Tag(Model, \"li\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> if ((bool)Model.HasItems) { tag.AddCssClass(\"dropdown\"); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // Morphing the shape to keep Model untouched Model.Metadata.Alternates.Clear(); Model.Metadata.Type = \"MenuItemLink\"; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> tag.InnerHtml.AppendHtml(await DisplayAsync(Model)); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> if ((bool)(Model.HasItems)) { TagBuilder parentTag = Tag(Model, \"div\"); parentTag.AddCssClass(\"dropdown-menu\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> foreach (var item in Model.Items) { item.ParentTag = parentTag; parentTag.InnerHtml.AppendHtml(await DisplayAsync(item)); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> tag.InnerHtml.AppendHtml(parentTag); } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @tag <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@\u6807\u7b7e</font>","title":"MenuItem\u793a\u4f8b"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitemlink","text":"","title":"MenuItemLink"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitemlink_1","text":"The MenuItemLink shape is used to render a menu item link. MenuItemLink \u5f62\u72b6\u7528\u4e8e\u5448\u73b0\u83dc\u5355\u9879\u94fe\u63a5\u3002 This shape is created by morphing a MenuItem shape into a MenuItemLink . Hence all the properties \u8fd9\u79cd\u5f62\u72b6\u662f\u901a\u8fc7\u5c06 MenuItem \u5f62\u72b6\u53d8\u5f62\u4e3a MenuItemLink \u800c\u521b\u5efa\u7684\u3002\u56e0\u6b64\u6240\u6709\u7684\u5c5e\u6027 available on the MenuItem shape are still available. 'MenuItem`\u5f62\u72b6\u4e0a\u53ef\u7528\u7684\u5f62\u72b6\u4ecd\u7136\u53ef\u7528\u3002 | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.Menu | The Menu shape owning this item. | | Model.Menu |\u62e5\u6709\u6b64\u9879\u76ee\u7684\u201c\u83dc\u5355\u201d\u5f62\u72b6\u3002 | | Model.ContentItem | The content item representing this menu item. | | Model.ContentItem |\u8868\u793a\u6b64\u83dc\u5355\u9879\u7684\u5185\u5bb9\u9879\u3002 | | Model.Level | The level of the menu item. 0 for top level menu items. | | Model.Level |\u83dc\u5355\u9879\u7684\u7ea7\u522b\u3002\u9876\u7ea7\u83dc\u5355\u9879\u7684\u201c0\u201d\u3002 | | Model.Items | The list of sub menu items shapes. These are shapes of type MenuItem . | | Model.Items |\u5b50\u83dc\u5355\u9879\u7684\u5f62\u72b6\u5217\u8868\u3002\u8fd9\u4e9b\u662f MenuItem \u7c7b\u578b\u7684\u5f62\u72b6\u3002 | | Model.Differentiator | If defined, contains the formatted name of the menu. For instance MainMenu . | | Model.Differentiator |\u5982\u679c\u5df2\u5b9a\u4e49\uff0c\u5219\u5305\u542b\u83dc\u5355\u7684\u683c\u5f0f\u5316\u540d\u79f0\u3002\u4f8b\u5982 MainMenu \u3002 |","title":"MenuItemLink"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitemlink-alternates","text":"","title":"MenuItemLink Alternates"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitemlink_2","text":"| Definition | Template | Filename| |\u5b9a\u4e49|\u6a21\u677f|\u6587\u4ef6\u540d| | ---------- | --------- | ------------ | | ---------- | --------- | ------------ | | MenuItemLink__level__[level] | MenuItemLink__level__2 | MenuItemLink-level-2.cshtml | | MenuItemLink__level __ [level] | MenuItemLink__level__2 | MenuItemLink-level-2.cshtml | | MenuItemLink__[ContentType] | MenuItemLink__HtmlMenuItem | MenuItemLink-HtmlMenuItem.cshtml | | MenuItemLink __ [ContentType] | MenuItemLink__HtmlMenuItem | MenuItemLink-HtmlMenuItem.cshtml | | MenuItemLink__[ContentType]__level__[level] | MenuItemLink__HtmlMenuItem__level__2 | MenuItemLink-HtmlMenuItem-level-2.cshtml | | MenuItemLink __ [ContentType] __ level __ [level] | MenuItemLink__HtmlMenuItem__level__2 | MenuItemLink-HtmlMenuItem-level-2.cshtml | | MenuItemLink__[MenuName] | MenuItemLink__MainMenu | MenuItemLink-MainMenu.cshtml | | MenuItemLink __ [MenuName] | MenuItemLink__MainMenu | MenuItemLink-MainMenu.cshtml | | MenuItemLink__[MenuName]__level__[level] | MenuItemLink__MainMenu__level__2 | MenuItemLink-MainMenu-level-2.cshtml | | MenuItemLink __ [MenuName] __ level __ [level] | MenuItemLink__MainMenu__level__2 | MenuItemLink-MainMenu-level-2.cshtml | | MenuItemLink__[MenuName]__[ContentType] | MenuItemLink__MainMenu__HtmlMenuItem | MenuItemLink-MainMenu-HtmlMenuItem.cshtml | | MenuItemLink __ [MenuName] __ [ContentType] | MenuItemLink__MainMenu__HtmlMenuItem | MenuItemLink-MainMenu-HtmlMenuItem.cshtml | | MenuItemLink__[MenuName]__[ContentType]__level__[level] | MenuItemLink__MainMenu__HtmlMenuItem__level__2 | MenuItemLink-MainMenu-HtmlMenuItem-level-2.cshtml | | MenuItemLink __ [MenuName] __ [ContentType] __ level __ [level] | MenuItemLink__MainMenu__HtmlMenuItem__level__2 | MenuItemLink-MainMenu-HtmlMenuItem-level-2.cshtml |","title":"MenuItemLink\u66ff\u4ee3"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitemlink-example","text":"","title":"MenuItemLink Example"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#menuitemlink_3","text":"{% assign link = Model.ContentItem.Content.LinkMenuItemPart %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign link = Model.ContentItem.Content.LinkMenuItemPart\uff05}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {% if Model.HasItems %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05if Model.HasItems\uff05}</font> <a href=\"{{ link.Url | href }}\" class=\"nav-link dropdown-toggle\">{{ link.Name }}<b class=\"caret\"></b></a> {% else %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05else\uff05}</font> <a href=\"{{ link.Url | href }}\" class=\"nav-link\">{{ link.Name }}</a> {% endif %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05 \u4e07\u4e00 \uff05}</font> @using OrchardCore.ContentManagement <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@using OrchardCore.ContentManagement</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @{ <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@ {</font> ContentItem contentItem = Model.ContentItem; var link = contentItem.Content[\"LinkMenuItemPart\"]; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> if ((bool)(Model.HasItems)) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">if\uff08\uff08bool\uff09\uff08Model.HasItems\uff09\uff09</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"@Url.Content((string)link.Url)\">@link.Name<b class=\"caret\"></b></a> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> else <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u5176\u4ed6</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> <a class=\"nav-link\" href=\"@Url.Content((string)link.Url)\">@link.Name</a> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"MenuItemLink\u793a\u4f8b"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#credits","text":"","title":"CREDITS"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#_4","text":"","title":"\u5b66\u5206"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#nestedsortable-jquery-plugin","text":"","title":"nestedSortable jQuery plugin"},{"location":"OrchardCore.Modules/OrchardCore.Menu/#nestedsortable-jquery","text":"https://github.com/ilikenwf/nestedSortable https://github.com/ilikenwf/nestedSortable License: MIT \u6267\u7167\uff1a\u9ebb\u7701\u7406\u5de5\u5b66\u9662","title":"nestedSortable jQuery\u63d2\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/","text":"Navigation (OrchardCore.Navigation) \u5bfc\u822a\uff08OrchardCore.Navigation\uff09 Purpose \u76ee\u7684 Provides the Navigation , Pager and PagerSlim shapes. \u63d0\u4f9b Navigation \uff0c Pager \u548c PagerSlim \u5f62\u72b6\u3002 Theming \u4e3b\u9898\u5316 Navigation can be themed by adding the appropriate partial view files to your theme's views folder. \u53ef\u4ee5\u901a\u8fc7\u5c06\u9002\u5f53\u7684\u90e8\u5206\u89c6\u56fe\u6587\u4ef6\u6dfb\u52a0\u5230\u4e3b\u9898\u7684\u89c6\u56fe\u6587\u4ef6\u5939\u4e2d\u6765\u8fdb\u884c\u5bfc\u822a\u3002 A good example can be found in the TheAdmin theme project . \u53ef\u4ee5\u5728[TheAdmin\u4e3b\u9898\u9879\u76ee]\uff08https://github.com/OrchardCMS/OrchardCore/tree/dev/src/OrchardCore.Themes/TheAdmin\uff09\u4e2d\u627e\u5230\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002 That theme creates the standard, vertical navigation menu that is found on the admin dashboard of any OrchardCore application. \u8be5\u4e3b\u9898\u521b\u5efa\u4e86\u6807\u51c6\u7684\u5782\u76f4\u5bfc\u822a\u83dc\u5355\uff0c\u53ef\u5728\u4efb\u4f55OrchardCore\u5e94\u7528\u7a0b\u5e8f\u7684\u7ba1\u7406\u4eea\u8868\u677f\u4e0a\u627e\u5230\u3002 The TheAdmin theme provides the following alternates to the default ones provided in the Navigation module: TheAdmin\u4e3b\u9898\u63d0\u4f9b\u4ee5\u4e0b\u66ff\u4ee3\u5bfc\u822a\u6a21\u5757\u4e2d\u63d0\u4f9b\u7684\u9ed8\u8ba4\u503c\uff1a Navigation-admin.cshtml NavigationItem-admin.cshtml NavigationItemLink-admin.cshtml The theme developer has full control over how and where navigation is displayed on their OrchardCore application. \u4e3b\u9898\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u5bfc\u822a\u5728OrchardCore\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u663e\u793a\u65b9\u5f0f\u548c\u4f4d\u7f6e\u3002 Pager \u547c\u53eb\u5668 This is a multi-purpose pagination component that renders links to specific page numbers. \u8fd9\u662f\u4e00\u4e2a\u591a\u7528\u9014\u5206\u9875\u7ec4\u4ef6\uff0c\u7528\u4e8e\u5448\u73b0\u6307\u5411\u7279\u5b9a\u9875\u7801\u7684\u94fe\u63a5\u3002 It can optionally render First and Last links. \u5b83\u53ef\u4ee5\u9009\u62e9\u5448\u73b0_First_\u548c_Last_\u94fe\u63a5\u3002 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Page | int | Active page number | | Page | int |\u6d3b\u52a8\u9875\u7801| | PageSize | int | Number of items per page | | PageSize | int |\u6bcf\u9875\u7684\u9879\u76ee\u6570| | TotalItemCount | double | Total number of items (used to calculate the number of the last page) | | TotalItemCount | double |\u9879\u76ee\u603b\u6570\uff08\u7528\u4e8e\u8ba1\u7b97\u6700\u540e\u4e00\u9875\u7684\u7f16\u53f7\uff09| | Quantity | int? | Number of pages to show, 7 if not specified | | \u6570\u91cf | int\uff1f |\u8981\u663e\u793a\u7684\u9875\u6570\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5219\u4e3a7 | FirstText | object | Text of the \"First\" link, default: T[\"<<\"] | | FirstText | object | \u201cFirst\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\uff1a T [\u201c<<\u201d] | | PreviousText | object | Text of the \"Previous\" link, default: T[\"<\"] | PreviousText | object | \u201c\u4e0a\u4e00\u9875\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\uff1a T [\u201c<\u201d] | NextText | object | Text of the \"Next\" link, default: T[\">\"] | | NextText | object | \u201c\u4e0b\u4e00\u6b65\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\u4e3a\uff1a T [\u201c>\u201d] | | LastText | object | Text of the \"Last\" link, default: T[\">>\"] | | LastText | object | \u201cLast\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\u4e3a\uff1a T [\u201c>>\u201d] | | GapText | object | Text of the \"Gap\" element, default: T[\"...\"] | | GapText | object | \u201cGap\u201d\u5143\u7d20\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\uff1a T [\u201c...\u201d] | | PagerId | string | An identifier for the pager. Used to create alternate like Pager__[PagerId] | | PagerId | string |\u5bfb\u547c\u673a\u7684\u6807\u8bc6\u7b26\u3002\u7528\u4e8e\u521b\u5efa\u50cfPager __ [PagerId]`|\u7684\u66ff\u4ee3 | ShowNext | bool | If true, the \"Next\" link is always displayed | | ShowNext | bool |\u5982\u679c\u4e3atrue\uff0c\u5219\u59cb\u7ec8\u663e\u793a\u201cNext\u201d\u94fe\u63a5 Properties inherited from the List shape \u5c5e\u6027\u4ece List \u5f62\u72b6\u7ee7\u627f\u800c\u6765 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Id | string | The HTML id used for the pager, default: none | | Id | string |\u7528\u4e8e\u5bfb\u547c\u673a\u7684HTML ID\uff0c\u9ed8\u8ba4\u503c\uff1a none | | Tag | string | The HTML tag used for the pager, default: ul | | \u6807\u7b7e | string |\u7528\u4e8e\u5bfb\u547c\u673a\u7684HTML\u6807\u7b7e\uff0c\u9ed8\u8ba4\uff1a ul | | ItemTag | string | The HTML tag used for the pages, default: li | | ItemTag | string |\u7528\u4e8e\u9875\u9762\u7684HTML\u6807\u8bb0\uff0c\u9ed8\u8ba4\u4e3a\uff1a li | | FirstClass | string | The HTML class used for the first page, default: first | | FirstClass | string |\u7528\u4e8e\u7b2c\u4e00\u9875\u7684HTML\u7c7b\uff0c\u9ed8\u8ba4\uff1a first | | LastClass | string | The HTML tag used for last page, default: last | | LastClass | string |\u7528\u4e8e\u6700\u540e\u4e00\u9875\u7684HTML\u6807\u8bb0\uff0c\u9ed8\u8ba4\u4e3a\uff1a last | | ItemClasses | List<string> | Classes that are assigned to the pages, default: none | | ItemClasses | List <string> |\u5206\u914d\u7ed9\u9875\u9762\u7684\u7c7b\uff0c\u9ed8\u8ba4\u503c\uff1a none | | ItemAttributes | Dictionary<string, string> | Attributes that are assigned to the pages | | ItemAttributes | Dictionary <string\uff0cstring> |\u5206\u914d\u7ed9\u9875\u9762\u7684\u5c5e\u6027 The PagerId property is used to create templates for specific instances. For instance, assigning PagerId \u5c5e\u6027\u7528\u4e8e\u4e3a\u7279\u5b9a\u5b9e\u4f8b\u521b\u5efa\u6a21\u677f\u3002\u4f8b\u5982\uff0c\u5206\u914d the value MainBlog to PagerId and then rendering the pager will look for a template named \u5c06\u503c\u201cMainBlog\u201d\u6539\u4e3a\u201cPagerId\u201d\u7136\u540e\u5448\u73b0\u5bfb\u547c\u673a\u5c06\u67e5\u627e\u540d\u4e3a\u7684\u6a21\u677f Pager-MainBlog.cshtml . A pager can be further customized by defining templates for the following shapes: \u901a\u8fc7\u5b9a\u4e49\u4ee5\u4e0b\u5f62\u72b6\u7684\u6a21\u677f\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b9a\u5236\u5bfb\u547c\u673a\uff1a Pager_Gap Pager_Gap Pager_First Pager_First Pager_Previous Pager_Previous Pager_Next Pager_Next Pager_Last Pager_Last Pager_CurrentPage Pager_CurrentPage Each of these shapes are ultimately morphed into Pager_Link \u8fd9\u4e9b\u5f62\u72b6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6700\u7ec8\u90fd\u53d8\u6210\u4e86\u201cPager_Link\u201d Alternates for each of these shapes are created using the PagerId like Pager_Previous__[PagerId] which \u6bcf\u4e2a\u5f62\u72b6\u7684\u66ff\u4ee3\u90fd\u662f\u4f7f\u7528_PagerId_\u521b\u5efa\u7684\uff0c\u5982 Pager_Previous __ [PagerId] would in turn look for the template Pager-MainBlog.Previous.cshtml . \u53cd\u8fc7\u6765\u4f1a\u5bfb\u627e\u6a21\u677f Pager-MainBlog.Previous.cshtml \u3002 PagerSlim PagerSlim This shape renders a pager that is comprised of two links: Previous and Next . \u6b64\u5f62\u72b6\u5448\u73b0\u7531\u4e24\u4e2a\u94fe\u63a5\u7ec4\u6210\u7684\u5bfb\u547c\u673a\uff1a Previous_\u548c_Next \u3002 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | PreviousClass | string | The HTML class used for the Previous link, default: none | | PreviousClass | string |\u7528\u4e8e_Previous_\u94fe\u63a5\u7684HTML\u7c7b\uff0c\u9ed8\u8ba4\u4e3a\uff1a none | | NextClass | string | The HTML class used for the Next link, default: none | | NextClass | string |\u7528\u4e8e_Next_\u94fe\u63a5\u7684HTML\u7c7b\uff0c\u9ed8\u8ba4\u503c\u4e3a\uff1a none | | PreviousText | object | Text of the \"Previous\" link, default: T[\"<\"] | PreviousText | object | \u201c\u4e0a\u4e00\u9875\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\uff1a T [\u201c<\u201d] | NextText | object | Text of the \"Next\" link, default: T[\">\"] | | NextText | object | \u201c\u4e0b\u4e00\u6b65\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\u4e3a\uff1a T [\u201c>\u201d] | Properties inherited from the List shape \u5c5e\u6027\u4ece List \u5f62\u72b6\u7ee7\u627f\u800c\u6765 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Id | string | The HTML id used for the pager, default: none | | Id | string |\u7528\u4e8e\u5bfb\u547c\u673a\u7684HTML ID\uff0c\u9ed8\u8ba4\u503c\uff1a none | | Tag | string | The HTML tag used for the pager, default: ul | | \u6807\u7b7e | string |\u7528\u4e8e\u5bfb\u547c\u673a\u7684HTML\u6807\u7b7e\uff0c\u9ed8\u8ba4\uff1a ul | | ItemTag | string | The HTML tag used for the pages, default: li | | ItemTag | string |\u7528\u4e8e\u9875\u9762\u7684HTML\u6807\u8bb0\uff0c\u9ed8\u8ba4\u4e3a\uff1a li | | FirstClass | string | The HTML class used for the first page, default: first | | FirstClass | string |\u7528\u4e8e\u7b2c\u4e00\u9875\u7684HTML\u7c7b\uff0c\u9ed8\u8ba4\uff1a first | | LastClass | string | The HTML tag used for last page, default: last | | LastClass | string |\u7528\u4e8e\u6700\u540e\u4e00\u9875\u7684HTML\u6807\u8bb0\uff0c\u9ed8\u8ba4\u4e3a\uff1a last | | ItemClasses | List<string> | Classes that are assigned to the pages, default: none | | ItemClasses | List <string> |\u5206\u914d\u7ed9\u9875\u9762\u7684\u7c7b\uff0c\u9ed8\u8ba4\u503c\uff1a none | | ItemAttributes | Dictionary<string, string> | Attributes that are assigned to the pages | | ItemAttributes | Dictionary <string\uff0cstring> |\u5206\u914d\u7ed9\u9875\u9762\u7684\u5c5e\u6027 A slim pager can be further customized by defining templates for the following shapes: \u901a\u8fc7\u5b9a\u4e49\u4ee5\u4e0b\u5f62\u72b6\u7684\u6a21\u677f\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b9a\u5236\u8d85\u8584\u5bfb\u547c\u673a\uff1a Pager_Previous Pager_Previous Pager_Next Pager_Next Examples of Liquid alternates or templates for Pager_Next and Pager_Previous : \u201cPager_Next\u201d\u548c\u201cPager_Previous\u201d\u7684Liquid\u66ff\u6362\u6216\u6a21\u677f\u793a\u4f8b\uff1a {% shape_clear_alternates Model %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_clear_alternates\u578b\u53f7\uff05}</font> {% shape_type Model \"Pager_Link\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_type\u578b\u53f7\u201cPager_Link\u201d\uff05}</font> {% shape_add_classes Model \"page-link\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_classes\u6a21\u578b\u201c\u9875\u9762\u94fe\u63a5\u201d\uff05}</font> {{ Model | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u578b\u53f7| shape_render}}</font> Each of these shapes are ultimately morphed into Pager_Link \u8fd9\u4e9b\u5f62\u72b6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6700\u7ec8\u90fd\u53d8\u6210\u4e86\u201cPager_Link\u201d Alternates for each of these shapes are created using the PagerId like Pager_Previous__[PagerId] which \u6bcf\u4e2a\u5f62\u72b6\u7684\u66ff\u4ee3\u90fd\u662f\u4f7f\u7528_PagerId_\u521b\u5efa\u7684\uff0c\u5982 Pager_Previous __ [PagerId] would in turn look for the template Pager-MainBlog.Previous.cshtml . \u53cd\u8fc7\u6765\u4f1a\u5bfb\u627e\u6a21\u677f Pager-MainBlog.Previous.cshtml \u3002 Extending Navigation \u6269\u5c55\u5bfc\u822a Navigation can be extended, through code, by implementing INavigationProvider and registering it in the extending module (or theme) Startup.cs file. \u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u6269\u5c55\u5bfc\u822a\uff0c\u5b9e\u73b0 INavigationProvider \u5e76\u5c06\u5176\u6ce8\u518c\u5230\u6269\u5c55\u6a21\u5757\uff08\u6216\u4e3b\u9898\uff09 Startup.cs \u6587\u4ef6\u4e2d\u3002 Below is a sample implementation of an INavigationProvider used to extend the \"main\" navigation section of the site. \u4e0b\u9762\u662f\u7528\u4e8e\u6269\u5c55\u7ad9\u70b9\u201c\u4e3b\u201d\u5bfc\u822a\u90e8\u5206\u7684 INavigationProvider \u7684\u793a\u4f8b\u5b9e\u73b0\u3002 public class MainMenu : INavigationProvider <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u7c7bMainMenu\uff1aINavigationProvider</font> { public MainMenu(IStringLocalizer<MainMenu> localizer) { T = localizer; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public IStringLocalizer T { get; set; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public async Task BuildNavigation(string name, NavigationBuilder builder) { //Only interact with the \"main\" navigation menu here. if (!String.Equals(name, \"main\", StringComparison.OrdinalIgnoreCase)) { return; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> builder .Add(T[\"Notifications\"], T[\"Notifications\"], layers => layers .Action(\"Index\", \"Template\", new { area = \"CRT.Client.OrchardModules.CommunicationTemplates\", groupId = 1 }) .LocalNav() ); } } This provider will be called as long as the site is using a theme that includes a line similar to the following, which causes the navigation menu to be rendered by your theme at the location specified: \u53ea\u8981\u7ad9\u70b9\u4f7f\u7528\u5305\u542b\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u7684\u4e3b\u9898\u7684\u4e3b\u9898\uff0c\u5c31\u4f1a\u8c03\u7528\u6b64\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5bfc\u822a\u83dc\u5355\u7531\u4e3b\u9898\u5728\u6307\u5b9a\u7684\u4f4d\u7f6e\u5448\u73b0\uff1a @await DisplayAsync(await New.Navigation(MenuName: \"main\", RouteData: @ViewContext.RouteData)) Examples of extending the admin navigation can be found in various OrchardCore modules. Searching the repository for \"AdminMenu\" will locate various settings. Below is a partial list: \u6269\u5c55\u7ba1\u7406\u5bfc\u822a\u7684\u793a\u4f8b\u53ef\u4ee5\u5728\u5404\u79cdOrchardCore\u6a21\u5757\u4e2d\u627e\u5230\u3002\u5728\u5b58\u50a8\u5e93\u4e2d\u641c\u7d22\u201cAdminMenu\u201d\u5c06\u627e\u5230\u5404\u79cd\u8bbe\u7f6e\u3002\u4ee5\u4e0b\u662f\u90e8\u5206\u6e05\u5355\uff1a OrchardCore.Modules/OrchardCore.Admin/AdminFilter.cs OrchardCore.Modules/OrchardCore.Media/AdminMenu.cs At this time, the Admin Menu is the only navigation with code dynamically adding items in the OrchardCore git repository. However, as the example above shows, the pattern can be used to control any named navigation. \u6b64\u65f6\uff0cAdmin Menu\u662f\u552f\u4e00\u4e00\u4e2a\u5728OrchardCore git\u5b58\u50a8\u5e93\u4e2d\u52a8\u6001\u6dfb\u52a0\u9879\u76ee\u7684\u4ee3\u7801\u5bfc\u822a\u3002\u4f46\u662f\uff0c\u5982\u4e0a\u9762\u7684\u793a\u4f8b\u6240\u793a\uff0c\u8be5\u6a21\u5f0f\u53ef\u7528\u4e8e\u63a7\u5236\u4efb\u4f55\u547d\u540d\u7684\u5bfc\u822a\u3002","title":"Navigation"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#navigation-orchardcorenavigation","text":"","title":"Navigation (OrchardCore.Navigation)"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#orchardcorenavigation","text":"","title":"\u5bfc\u822a\uff08OrchardCore.Navigation\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#purpose","text":"","title":"Purpose"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#_1","text":"Provides the Navigation , Pager and PagerSlim shapes. \u63d0\u4f9b Navigation \uff0c Pager \u548c PagerSlim \u5f62\u72b6\u3002","title":"\u76ee\u7684"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#theming","text":"","title":"Theming"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#_2","text":"Navigation can be themed by adding the appropriate partial view files to your theme's views folder. \u53ef\u4ee5\u901a\u8fc7\u5c06\u9002\u5f53\u7684\u90e8\u5206\u89c6\u56fe\u6587\u4ef6\u6dfb\u52a0\u5230\u4e3b\u9898\u7684\u89c6\u56fe\u6587\u4ef6\u5939\u4e2d\u6765\u8fdb\u884c\u5bfc\u822a\u3002 A good example can be found in the TheAdmin theme project . \u53ef\u4ee5\u5728[TheAdmin\u4e3b\u9898\u9879\u76ee]\uff08https://github.com/OrchardCMS/OrchardCore/tree/dev/src/OrchardCore.Themes/TheAdmin\uff09\u4e2d\u627e\u5230\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002 That theme creates the standard, vertical navigation menu that is found on the admin dashboard of any OrchardCore application. \u8be5\u4e3b\u9898\u521b\u5efa\u4e86\u6807\u51c6\u7684\u5782\u76f4\u5bfc\u822a\u83dc\u5355\uff0c\u53ef\u5728\u4efb\u4f55OrchardCore\u5e94\u7528\u7a0b\u5e8f\u7684\u7ba1\u7406\u4eea\u8868\u677f\u4e0a\u627e\u5230\u3002 The TheAdmin theme provides the following alternates to the default ones provided in the Navigation module: TheAdmin\u4e3b\u9898\u63d0\u4f9b\u4ee5\u4e0b\u66ff\u4ee3\u5bfc\u822a\u6a21\u5757\u4e2d\u63d0\u4f9b\u7684\u9ed8\u8ba4\u503c\uff1a Navigation-admin.cshtml NavigationItem-admin.cshtml NavigationItemLink-admin.cshtml The theme developer has full control over how and where navigation is displayed on their OrchardCore application. \u4e3b\u9898\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u5bfc\u822a\u5728OrchardCore\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u663e\u793a\u65b9\u5f0f\u548c\u4f4d\u7f6e\u3002","title":"\u4e3b\u9898\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#pager","text":"","title":"Pager"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#_3","text":"This is a multi-purpose pagination component that renders links to specific page numbers. \u8fd9\u662f\u4e00\u4e2a\u591a\u7528\u9014\u5206\u9875\u7ec4\u4ef6\uff0c\u7528\u4e8e\u5448\u73b0\u6307\u5411\u7279\u5b9a\u9875\u7801\u7684\u94fe\u63a5\u3002 It can optionally render First and Last links. \u5b83\u53ef\u4ee5\u9009\u62e9\u5448\u73b0_First_\u548c_Last_\u94fe\u63a5\u3002 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Page | int | Active page number | | Page | int |\u6d3b\u52a8\u9875\u7801| | PageSize | int | Number of items per page | | PageSize | int |\u6bcf\u9875\u7684\u9879\u76ee\u6570| | TotalItemCount | double | Total number of items (used to calculate the number of the last page) | | TotalItemCount | double |\u9879\u76ee\u603b\u6570\uff08\u7528\u4e8e\u8ba1\u7b97\u6700\u540e\u4e00\u9875\u7684\u7f16\u53f7\uff09| | Quantity | int? | Number of pages to show, 7 if not specified | | \u6570\u91cf | int\uff1f |\u8981\u663e\u793a\u7684\u9875\u6570\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5219\u4e3a7 | FirstText | object | Text of the \"First\" link, default: T[\"<<\"] | | FirstText | object | \u201cFirst\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\uff1a T [\u201c<<\u201d] | | PreviousText | object | Text of the \"Previous\" link, default: T[\"<\"] | PreviousText | object | \u201c\u4e0a\u4e00\u9875\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\uff1a T [\u201c<\u201d] | NextText | object | Text of the \"Next\" link, default: T[\">\"] | | NextText | object | \u201c\u4e0b\u4e00\u6b65\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\u4e3a\uff1a T [\u201c>\u201d] | | LastText | object | Text of the \"Last\" link, default: T[\">>\"] | | LastText | object | \u201cLast\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\u4e3a\uff1a T [\u201c>>\u201d] | | GapText | object | Text of the \"Gap\" element, default: T[\"...\"] | | GapText | object | \u201cGap\u201d\u5143\u7d20\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\uff1a T [\u201c...\u201d] | | PagerId | string | An identifier for the pager. Used to create alternate like Pager__[PagerId] | | PagerId | string |\u5bfb\u547c\u673a\u7684\u6807\u8bc6\u7b26\u3002\u7528\u4e8e\u521b\u5efa\u50cfPager __ [PagerId]`|\u7684\u66ff\u4ee3 | ShowNext | bool | If true, the \"Next\" link is always displayed | | ShowNext | bool |\u5982\u679c\u4e3atrue\uff0c\u5219\u59cb\u7ec8\u663e\u793a\u201cNext\u201d\u94fe\u63a5 Properties inherited from the List shape \u5c5e\u6027\u4ece List \u5f62\u72b6\u7ee7\u627f\u800c\u6765 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Id | string | The HTML id used for the pager, default: none | | Id | string |\u7528\u4e8e\u5bfb\u547c\u673a\u7684HTML ID\uff0c\u9ed8\u8ba4\u503c\uff1a none | | Tag | string | The HTML tag used for the pager, default: ul | | \u6807\u7b7e | string |\u7528\u4e8e\u5bfb\u547c\u673a\u7684HTML\u6807\u7b7e\uff0c\u9ed8\u8ba4\uff1a ul | | ItemTag | string | The HTML tag used for the pages, default: li | | ItemTag | string |\u7528\u4e8e\u9875\u9762\u7684HTML\u6807\u8bb0\uff0c\u9ed8\u8ba4\u4e3a\uff1a li | | FirstClass | string | The HTML class used for the first page, default: first | | FirstClass | string |\u7528\u4e8e\u7b2c\u4e00\u9875\u7684HTML\u7c7b\uff0c\u9ed8\u8ba4\uff1a first | | LastClass | string | The HTML tag used for last page, default: last | | LastClass | string |\u7528\u4e8e\u6700\u540e\u4e00\u9875\u7684HTML\u6807\u8bb0\uff0c\u9ed8\u8ba4\u4e3a\uff1a last | | ItemClasses | List<string> | Classes that are assigned to the pages, default: none | | ItemClasses | List <string> |\u5206\u914d\u7ed9\u9875\u9762\u7684\u7c7b\uff0c\u9ed8\u8ba4\u503c\uff1a none | | ItemAttributes | Dictionary<string, string> | Attributes that are assigned to the pages | | ItemAttributes | Dictionary <string\uff0cstring> |\u5206\u914d\u7ed9\u9875\u9762\u7684\u5c5e\u6027 The PagerId property is used to create templates for specific instances. For instance, assigning PagerId \u5c5e\u6027\u7528\u4e8e\u4e3a\u7279\u5b9a\u5b9e\u4f8b\u521b\u5efa\u6a21\u677f\u3002\u4f8b\u5982\uff0c\u5206\u914d the value MainBlog to PagerId and then rendering the pager will look for a template named \u5c06\u503c\u201cMainBlog\u201d\u6539\u4e3a\u201cPagerId\u201d\u7136\u540e\u5448\u73b0\u5bfb\u547c\u673a\u5c06\u67e5\u627e\u540d\u4e3a\u7684\u6a21\u677f Pager-MainBlog.cshtml . A pager can be further customized by defining templates for the following shapes: \u901a\u8fc7\u5b9a\u4e49\u4ee5\u4e0b\u5f62\u72b6\u7684\u6a21\u677f\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b9a\u5236\u5bfb\u547c\u673a\uff1a Pager_Gap Pager_Gap Pager_First Pager_First Pager_Previous Pager_Previous Pager_Next Pager_Next Pager_Last Pager_Last Pager_CurrentPage Pager_CurrentPage Each of these shapes are ultimately morphed into Pager_Link \u8fd9\u4e9b\u5f62\u72b6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6700\u7ec8\u90fd\u53d8\u6210\u4e86\u201cPager_Link\u201d Alternates for each of these shapes are created using the PagerId like Pager_Previous__[PagerId] which \u6bcf\u4e2a\u5f62\u72b6\u7684\u66ff\u4ee3\u90fd\u662f\u4f7f\u7528_PagerId_\u521b\u5efa\u7684\uff0c\u5982 Pager_Previous __ [PagerId] would in turn look for the template Pager-MainBlog.Previous.cshtml . \u53cd\u8fc7\u6765\u4f1a\u5bfb\u627e\u6a21\u677f Pager-MainBlog.Previous.cshtml \u3002","title":"\u547c\u53eb\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#pagerslim","text":"","title":"PagerSlim"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#pagerslim_1","text":"This shape renders a pager that is comprised of two links: Previous and Next . \u6b64\u5f62\u72b6\u5448\u73b0\u7531\u4e24\u4e2a\u94fe\u63a5\u7ec4\u6210\u7684\u5bfb\u547c\u673a\uff1a Previous_\u548c_Next \u3002 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | PreviousClass | string | The HTML class used for the Previous link, default: none | | PreviousClass | string |\u7528\u4e8e_Previous_\u94fe\u63a5\u7684HTML\u7c7b\uff0c\u9ed8\u8ba4\u4e3a\uff1a none | | NextClass | string | The HTML class used for the Next link, default: none | | NextClass | string |\u7528\u4e8e_Next_\u94fe\u63a5\u7684HTML\u7c7b\uff0c\u9ed8\u8ba4\u503c\u4e3a\uff1a none | | PreviousText | object | Text of the \"Previous\" link, default: T[\"<\"] | PreviousText | object | \u201c\u4e0a\u4e00\u9875\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\uff1a T [\u201c<\u201d] | NextText | object | Text of the \"Next\" link, default: T[\">\"] | | NextText | object | \u201c\u4e0b\u4e00\u6b65\u201d\u94fe\u63a5\u7684\u6587\u672c\uff0c\u9ed8\u8ba4\u4e3a\uff1a T [\u201c>\u201d] | Properties inherited from the List shape \u5c5e\u6027\u4ece List \u5f62\u72b6\u7ee7\u627f\u800c\u6765 | Parameter | Type | Description | |\u53c2\u6570|\u8f93\u5165|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | Id | string | The HTML id used for the pager, default: none | | Id | string |\u7528\u4e8e\u5bfb\u547c\u673a\u7684HTML ID\uff0c\u9ed8\u8ba4\u503c\uff1a none | | Tag | string | The HTML tag used for the pager, default: ul | | \u6807\u7b7e | string |\u7528\u4e8e\u5bfb\u547c\u673a\u7684HTML\u6807\u7b7e\uff0c\u9ed8\u8ba4\uff1a ul | | ItemTag | string | The HTML tag used for the pages, default: li | | ItemTag | string |\u7528\u4e8e\u9875\u9762\u7684HTML\u6807\u8bb0\uff0c\u9ed8\u8ba4\u4e3a\uff1a li | | FirstClass | string | The HTML class used for the first page, default: first | | FirstClass | string |\u7528\u4e8e\u7b2c\u4e00\u9875\u7684HTML\u7c7b\uff0c\u9ed8\u8ba4\uff1a first | | LastClass | string | The HTML tag used for last page, default: last | | LastClass | string |\u7528\u4e8e\u6700\u540e\u4e00\u9875\u7684HTML\u6807\u8bb0\uff0c\u9ed8\u8ba4\u4e3a\uff1a last | | ItemClasses | List<string> | Classes that are assigned to the pages, default: none | | ItemClasses | List <string> |\u5206\u914d\u7ed9\u9875\u9762\u7684\u7c7b\uff0c\u9ed8\u8ba4\u503c\uff1a none | | ItemAttributes | Dictionary<string, string> | Attributes that are assigned to the pages | | ItemAttributes | Dictionary <string\uff0cstring> |\u5206\u914d\u7ed9\u9875\u9762\u7684\u5c5e\u6027 A slim pager can be further customized by defining templates for the following shapes: \u901a\u8fc7\u5b9a\u4e49\u4ee5\u4e0b\u5f62\u72b6\u7684\u6a21\u677f\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b9a\u5236\u8d85\u8584\u5bfb\u547c\u673a\uff1a Pager_Previous Pager_Previous Pager_Next Pager_Next Examples of Liquid alternates or templates for Pager_Next and Pager_Previous : \u201cPager_Next\u201d\u548c\u201cPager_Previous\u201d\u7684Liquid\u66ff\u6362\u6216\u6a21\u677f\u793a\u4f8b\uff1a {% shape_clear_alternates Model %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_clear_alternates\u578b\u53f7\uff05}</font> {% shape_type Model \"Pager_Link\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_type\u578b\u53f7\u201cPager_Link\u201d\uff05}</font> {% shape_add_classes Model \"page-link\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_add_classes\u6a21\u578b\u201c\u9875\u9762\u94fe\u63a5\u201d\uff05}</font> {{ Model | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{\u578b\u53f7| shape_render}}</font> Each of these shapes are ultimately morphed into Pager_Link \u8fd9\u4e9b\u5f62\u72b6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6700\u7ec8\u90fd\u53d8\u6210\u4e86\u201cPager_Link\u201d Alternates for each of these shapes are created using the PagerId like Pager_Previous__[PagerId] which \u6bcf\u4e2a\u5f62\u72b6\u7684\u66ff\u4ee3\u90fd\u662f\u4f7f\u7528_PagerId_\u521b\u5efa\u7684\uff0c\u5982 Pager_Previous __ [PagerId] would in turn look for the template Pager-MainBlog.Previous.cshtml . \u53cd\u8fc7\u6765\u4f1a\u5bfb\u627e\u6a21\u677f Pager-MainBlog.Previous.cshtml \u3002","title":"PagerSlim"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#extending-navigation","text":"","title":"Extending Navigation"},{"location":"OrchardCore.Modules/OrchardCore.Navigation/#_4","text":"Navigation can be extended, through code, by implementing INavigationProvider and registering it in the extending module (or theme) Startup.cs file. \u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u6269\u5c55\u5bfc\u822a\uff0c\u5b9e\u73b0 INavigationProvider \u5e76\u5c06\u5176\u6ce8\u518c\u5230\u6269\u5c55\u6a21\u5757\uff08\u6216\u4e3b\u9898\uff09 Startup.cs \u6587\u4ef6\u4e2d\u3002 Below is a sample implementation of an INavigationProvider used to extend the \"main\" navigation section of the site. \u4e0b\u9762\u662f\u7528\u4e8e\u6269\u5c55\u7ad9\u70b9\u201c\u4e3b\u201d\u5bfc\u822a\u90e8\u5206\u7684 INavigationProvider \u7684\u793a\u4f8b\u5b9e\u73b0\u3002 public class MainMenu : INavigationProvider <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u7c7bMainMenu\uff1aINavigationProvider</font> { public MainMenu(IStringLocalizer<MainMenu> localizer) { T = localizer; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public IStringLocalizer T { get; set; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public async Task BuildNavigation(string name, NavigationBuilder builder) { //Only interact with the \"main\" navigation menu here. if (!String.Equals(name, \"main\", StringComparison.OrdinalIgnoreCase)) { return; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> builder .Add(T[\"Notifications\"], T[\"Notifications\"], layers => layers .Action(\"Index\", \"Template\", new { area = \"CRT.Client.OrchardModules.CommunicationTemplates\", groupId = 1 }) .LocalNav() ); } } This provider will be called as long as the site is using a theme that includes a line similar to the following, which causes the navigation menu to be rendered by your theme at the location specified: \u53ea\u8981\u7ad9\u70b9\u4f7f\u7528\u5305\u542b\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u7684\u4e3b\u9898\u7684\u4e3b\u9898\uff0c\u5c31\u4f1a\u8c03\u7528\u6b64\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5bfc\u822a\u83dc\u5355\u7531\u4e3b\u9898\u5728\u6307\u5b9a\u7684\u4f4d\u7f6e\u5448\u73b0\uff1a @await DisplayAsync(await New.Navigation(MenuName: \"main\", RouteData: @ViewContext.RouteData)) Examples of extending the admin navigation can be found in various OrchardCore modules. Searching the repository for \"AdminMenu\" will locate various settings. Below is a partial list: \u6269\u5c55\u7ba1\u7406\u5bfc\u822a\u7684\u793a\u4f8b\u53ef\u4ee5\u5728\u5404\u79cdOrchardCore\u6a21\u5757\u4e2d\u627e\u5230\u3002\u5728\u5b58\u50a8\u5e93\u4e2d\u641c\u7d22\u201cAdminMenu\u201d\u5c06\u627e\u5230\u5404\u79cd\u8bbe\u7f6e\u3002\u4ee5\u4e0b\u662f\u90e8\u5206\u6e05\u5355\uff1a OrchardCore.Modules/OrchardCore.Admin/AdminFilter.cs OrchardCore.Modules/OrchardCore.Media/AdminMenu.cs At this time, the Admin Menu is the only navigation with code dynamically adding items in the OrchardCore git repository. However, as the example above shows, the pattern can be used to control any named navigation. \u6b64\u65f6\uff0cAdmin Menu\u662f\u552f\u4e00\u4e00\u4e2a\u5728OrchardCore git\u5b58\u50a8\u5e93\u4e2d\u52a8\u6001\u6dfb\u52a0\u9879\u76ee\u7684\u4ee3\u7801\u5bfc\u822a\u3002\u4f46\u662f\uff0c\u5982\u4e0a\u9762\u7684\u793a\u4f8b\u6240\u793a\uff0c\u8be5\u6a21\u5f0f\u53ef\u7528\u4e8e\u63a7\u5236\u4efb\u4f55\u547d\u540d\u7684\u5bfc\u822a\u3002","title":"\u6269\u5c55\u5bfc\u822a"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/","text":"OrchardCore.OpenId OrchardCore.OpenId OpenID Connect Module OpenID Connect\u6a21\u5757 OrchardCore.OpenId provides the following features Core Components \u6838\u5fc3\u7ec4\u4ef6 Entity Framework Core Stores \u5b9e\u4f53\u6846\u67b6\u6838\u5fc3\u5546\u5e97 Authorization Server \u6388\u6743\u670d\u52a1\u5668 Management Interface \u7ba1\u7406\u754c\u9762 Token Validation \u4ee4\u724c\u9a8c\u8bc1 OIDC Client OIDC\u5ba2\u6237 Core Components \u6838\u5fc3\u7ec4\u4ef6 Registers the core components used by the OpenID module. \u6ce8\u518cOpenID\u6a21\u5757\u4f7f\u7528\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002 Entity Framework Core Stores \u5b9e\u4f53\u6846\u67b6\u6838\u5fc3\u5546\u5e97 Provides an Entity Framework Core 2.x adapter for the OpenID module. \u4e3aOpenID\u6a21\u5757\u63d0\u4f9bEntity Framework Core 2.x\u9002\u914d\u5668\u3002 Management Interface \u7ba1\u7406\u754c\u9762 Allows adding, editing and removing the registered applications. \u5141\u8bb8\u6dfb\u52a0\uff0c\u7f16\u8f91\u548c\u5220\u9664\u5df2\u6ce8\u518c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 Authorization Server \u6388\u6743\u670d\u52a1\u5668 Enables authentication of external applications using the OpenID Connect/OAuth 2.0 standards. \u4f7f\u7528OpenID Connect / OAuth 2.0\u6807\u51c6\u542f\u7528\u5916\u90e8\u5e94\u7528\u7a0b\u5e8f\u7684\u8eab\u4efd\u9a8c\u8bc1\u3002 It is based on the OpenIddict library allowing \u5b83\u57fa\u4e8e[OpenIddict]\uff08https://github.com/openiddict/openiddict-core\uff09\u5e93\uff0c\u5141\u8bb8 Orchard Core to act as identity provider to support token authentication without the need of an external identity provider. Orchard Core\u5145\u5f53\u8eab\u4efd\u63d0\u4f9b\u8005\u4ee5\u652f\u6301\u4ee4\u724c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u800c\u65e0\u9700\u5916\u90e8\u8eab\u4efd\u63d0\u4f9b\u8005\u3002 So, Orchard Core can also be used as an identity provider for centralizing the user access permissions to external applications, not only to Orchard Core services. \u56e0\u6b64\uff0cOrchard Core\u8fd8\u53ef\u4ee5\u7528\u4f5c\u8eab\u4efd\u63d0\u4f9b\u8005\uff0c\u5c06\u7528\u6237\u8bbf\u95ee\u6743\u9650\u96c6\u4e2d\u5230\u5916\u90e8\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662fOrchard Core\u670d\u52a1\u3002 Flows supported: code/implicit/hybrid flows and client credentials/resource owner password grants . \u652f\u6301\u7684\u6d41\u7a0b\uff1a[\u4ee3\u7801/\u9690\u5f0f/\u6df7\u5408\u6d41\u7a0b]\uff08http://openid.net/specs/openid-connect-core-1_0.html\uff09\u548c[\u5ba2\u6237\u7aef\u51ed\u636e/\u8d44\u6e90\u6240\u6709\u8005\u5bc6\u7801\u6388\u4e88]\uff08https\uff1a//tools.ietf .ORG / HTML / rfc6749\uff09\u3002 Configuration \u7ec4\u6001 Configuration can be set through the OpenID Connect settings menu in the admin dashboard and also through a recipe step. \u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406\u4eea\u8868\u677f\u4e2d\u7684_OpenID Connect_\u8bbe\u7f6e\u83dc\u5355\u4ee5\u53ca\u914d\u65b9\u6b65\u9aa4\u8bbe\u7f6e\u914d\u7f6e\u3002 Available settings are: \u53ef\u7528\u7684\u8bbe\u7f6e\u662f\uff1a Testing Mode: Enabling Testing mode, removes the need of providing a certificate for signing tokens providing an ephemeral key. Also removes the requirement of using an HTTPS for issuing tokens. +\u6d4b\u8bd5\u6a21\u5f0f\uff1a\u542f\u7528\u6d4b\u8bd5\u6a21\u5f0f\uff0c\u65e0\u9700\u4e3a\u7b7e\u540d\u63d0\u4f9b\u4e34\u65f6\u5bc6\u94a5\u7684\u4ee4\u724c\u63d0\u4f9b\u8bc1\u4e66\u3002\u8fd8\u6d88\u9664\u4e86\u4f7f\u7528HTTPS\u9881\u53d1\u4ee4\u724c\u7684\u8981\u6c42\u3002 Token Format: there are two options: +\u4ee4\u724c\u683c\u5f0f\uff1a\u6709\u4e24\u79cd\u9009\u62e9\uff1a JWT: This format uses signed JWT standard tokens (not encrypted). It requires that the SSL certificate being used is accepted as a trusted certificate by the client. + JWT\uff1a\u6b64\u683c\u5f0f\u4f7f\u7528\u7b7e\u540d\u7684JWT\u6807\u51c6\u4ee4\u724c\uff08\u672a\u52a0\u5bc6\uff09\u3002\u5b83\u8981\u6c42\u5ba2\u6237\u7aef\u4f7f\u7528\u6b63\u5728\u4f7f\u7528\u7684SSL\u8bc1\u4e66\u4f5c\u4e3a\u53ef\u4fe1\u8bc1\u4e66\u3002 Encrypted: This format uses non-standard opaque tokens encrypted by the ASP.NET data protection block. It doesn't require the client to accept the SSL certificate as a trusted certificate. +\u52a0\u5bc6\uff1a\u6b64\u683c\u5f0f\u4f7f\u7528\u7531ASP.NET\u6570\u636e\u4fdd\u62a4\u5757\u52a0\u5bc6\u7684\u975e\u6807\u51c6\u4e0d\u900f\u660e\u4ee4\u724c\u3002\u5b83\u4e0d\u8981\u6c42\u5ba2\u6237\u7aef\u5c06SSL\u8bc1\u4e66\u4f5c\u4e3a\u53ef\u4fe1\u8bc1\u4e66\u63a5\u53d7\u3002 Authority: Orchard URL used by Orchard to act as an identity server. + Authority\uff1aOrchard\u7528\u4f5c\u8eab\u4efd\u670d\u52a1\u5668\u7684Orchard URL\u3002 Audiences: URLs of the resource servers for which the identity server issues valid JWT tokens. +\u53d7\u4f17\uff1a\u8eab\u4efd\u670d\u52a1\u5668\u4e3a\u5176\u9881\u53d1\u6709\u6548JWT\u4ee4\u724c\u7684\u8d44\u6e90\u670d\u52a1\u5668\u7684URL\u3002 Certificate Store Location: CurrentUser/LocalMachine https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storelocation(v=vs.110).aspx +\u8bc1\u4e66\u5546\u5e97\u4f4d\u7f6e\uff1aCurrentUser / LocalMachine https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storelocation(v=vs.110).aspx Certificate Store Name: AddressBook/AuthRootCertificateAuthority/Disallowed/My/Root/TrustedPeople/TrustedPublisher https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storename(v=vs.110).aspx +\u8bc1\u4e66\u5546\u5e97\u540d\u79f0\uff1aAddressBook / AuthRootCertificateAuthority / Disallowed / My / Root / TrustedPeople / TrustedPublisher https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storename(v=vs.110\uff09\u7684.aspx Certificate Thumbprint: The thumbprint of the certificate (it is recommended to not use same certificate that is being used for SSL). +\u8bc1\u4e66\u6307\u7eb9\uff1a\u8bc1\u4e66\u7684\u6307\u7eb9\uff08\u5efa\u8bae\u4e0d\u8981\u4f7f\u7528\u7528\u4e8eSSL\u7684\u76f8\u540c\u8bc1\u4e66\uff09\u3002 Enable Token Endpoint. +\u542f\u7528\u4ee4\u724c\u7aef\u70b9\u3002 Enable Authorization Endpoint. +\u542f\u7528\u6388\u6743\u7aef\u70b9\u3002 Enable Logout Endpoint. +\u542f\u7528\u6ce8\u9500\u7aef\u70b9\u3002 Enable User Info Endpoint. +\u542f\u7528\u7528\u6237\u4fe1\u606f\u7aef\u70b9\u3002 Allow Password Flow: It requires Token Endpoint is enabled. More info at https://tools.ietf.org/html/rfc6749#section-1.3.3 +\u5141\u8bb8\u5bc6\u7801\u6d41\uff1a\u5b83\u9700\u8981\u542f\u7528\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttps://tools.ietf.org/html/rfc6749#section-1.3.3 Allow Client Credentials Flow: It requires Token Endpoint is enabled. More info at https://tools.ietf.org/html/rfc6749#section-1.3.4 +\u5141\u8bb8\u5ba2\u6237\u7aef\u51ed\u636e\u6d41\uff1a\u5b83\u8981\u6c42\u542f\u7528\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttps://tools.ietf.org/html/rfc6749#section-1.3.4 Allow Authorization Code Flow: It requires Authorization and Token Endpoints are enabled. More info at http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth +\u5141\u8bb8\u6388\u6743\u4ee3\u7801\u6d41\u7a0b\uff1a\u5b83\u9700\u8981\u542f\u7528\u6388\u6743\u548c\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth Allow Implicit Flow: It requires Authorization Endpoint is enabled. More info at http://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth +\u5141\u8bb8\u9690\u5f0f\u6d41\uff1a\u5b83\u9700\u8981\u542f\u7528\u6388\u6743\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth Allow Refresh Token Flow: It allows to refresh access token using a refresh token. It can be used in combination with Password Flow, Authorization Code Flow and Hybrid Flow. More info at http://openid.net/specs/openid-connect-core-1_0.html#RefreshTokens +\u5141\u8bb8\u5237\u65b0\u4ee4\u724c\u6d41\uff1a\u5b83\u5141\u8bb8\u4f7f\u7528\u5237\u65b0\u4ee4\u724c\u5237\u65b0\u8bbf\u95ee\u4ee4\u724c\u3002\u5b83\u53ef\u4ee5\u4e0e\u5bc6\u7801\u6d41\uff0c\u6388\u6743\u4ee3\u7801\u6d41\u548c\u6df7\u5408\u6d41\u4e00\u8d77\u4f7f\u7528\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#RefreshTokens A sample of OpenID Connect Settings recipe step: OpenID Connect\u8bbe\u7f6e\u914d\u65b9\u6b65\u9aa4\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"OpenIdServerSettings\", \"TestingModeEnabled\": false, \"AccessTokenFormat\": \"JWT\", //JWT or Encrypted \"Authority\": \"https://www.orchardproject.net\", \"Audiences\": [\"https://www.orchardproject.net\",\"https://orchardharvest.org/\"], \"CertificateStoreLocation\": \"LocalMachine\", //More info: https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storelocation(v=vs.110).aspx \"CertificateStoreName\": \"My\", //More info: https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storename(v=vs.110).aspx \"CertificateThumbprint\": \"27CCA66EF38EF46CD9022431FB1FF0F2DF5CA1D7\" \"EnableTokenEndpoint\": true, \"EnableAuthorizationEndpoint\": false, \"EnableLogoutEndpoint\": true, \"EnableUserInfoEndpoint\": true, \"AllowPasswordFlow\": true, \"AllowClientCredentialsFlow\": false, \"AllowAuthorizationCodeFlow\": false, \"AllowRefreshTokenFlow\": false, \"AllowImplicitFlow\": false } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Client OpenID Connect Apps Configuration \u5ba2\u6237\u7aefOpenID Connect\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e OpenID Connect apps can be set through OpenID Connect Apps menu in the admin dashboard (through the Management Interface feature) \u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406\u4eea\u8868\u677f\u4e2d\u7684OpenID Connect Apps\u83dc\u5355\uff08\u901a\u8fc7\u7ba1\u7406\u754c\u9762\u529f\u80fd\uff09\u8bbe\u7f6eOpenID Connect\u5e94\u7528\u7a0b\u5e8f and also through a recipe step. \u5e76\u901a\u8fc7\u914d\u65b9\u6b65\u9aa4\u3002 OpenID Connect apps require the following configuration. OpenID Connect\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4ee5\u4e0b\u914d\u7f6e\u3002 Id: Unique identifier. + Id\uff1a\u552f\u4e00\u6807\u8bc6\u7b26\u3002 Client Id: Client identifier of the application. It has to be provided by a client when requesting a valid token. + Client Id\uff1a\u5e94\u7528\u7a0b\u5e8f\u7684\u5ba2\u6237\u7aef\u6807\u8bc6\u7b26\u3002\u5b83\u5fc5\u987b\u7531\u5ba2\u6237\u7aef\u5728\u8bf7\u6c42\u6709\u6548\u4ee4\u724c\u65f6\u63d0\u4f9b\u3002 Display Name: Display name associated with the current application. +\u663e\u793a\u540d\u79f0\uff1a\u4e0e\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u5173\u8054\u7684\u663e\u793a\u540d\u79f0\u3002 Type: There are two options: +\u7c7b\u578b\uff1a\u6709\u4e24\u79cd\u9009\u62e9\uff1a Confidential: Confidential applications MUST send their client secret when communicating with the token and revocation endpoints. This guarantees that only the legit client can exchange an authorization code or get a refresh token. +\u673a\u5bc6\uff1a\u673a\u5bc6\u5e94\u7528\u7a0b\u5e8f\u5728\u4e0e\u4ee4\u724c\u548c\u540a\u9500\u7aef\u70b9\u901a\u4fe1\u65f6\u5fc5\u987b\u53d1\u9001\u5176\u5ba2\u6237\u7aef\u673a\u5bc6\u3002\u8fd9\u4fdd\u8bc1\u4e86\u53ea\u6709\u5408\u6cd5\u7684\u5ba2\u6237\u7aef\u624d\u80fd\u4ea4\u6362\u6388\u6743\u4ee3\u7801\u6216\u83b7\u53d6\u5237\u65b0\u4ee4\u724c\u3002 Public: Public applications don't use client secret on their communications. + Public\uff1a\u516c\u5171\u5e94\u7528\u7a0b\u5e8f\u4e0d\u5728\u5176\u901a\u4fe1\u4e0a\u4f7f\u7528\u5ba2\u6237\u7aef\u5bc6\u94a5\u3002 Client Secret: Client secret is a password associated with the application. It will be required when the application is configured as Confidential. +\u5ba2\u6237\u7aef\u5bc6\u94a5\uff1a\u5ba2\u6237\u7aef\u5bc6\u94a5\u662f\u4e0e\u5e94\u7528\u7a0b\u5e8f\u5173\u8054\u7684\u5bc6\u7801\u3002\u5c06\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u4e3a\u673a\u5bc6\u65f6\uff0c\u5c06\u9700\u8981\u5b83\u3002 Flows: If general OpenID Connect settings allow this flow, an app can also enable this flow. +\u6d41\u7a0b\uff1a\u5982\u679c\u5e38\u89c4OpenID Connect\u8bbe\u7f6e\u5141\u8bb8\u6b64\u6d41\u7a0b\uff0c\u5219\u5e94\u7528\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u542f\u7528\u6b64\u6d41\u7a0b\u3002 Allow Password Flow: It requires Token Endpoint is enabled. More info at https://tools.ietf.org/html/rfc6749#section-1.3.3 +\u5141\u8bb8\u5bc6\u7801\u6d41\uff1a\u5b83\u9700\u8981\u542f\u7528\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttps://tools.ietf.org/html/rfc6749#section-1.3.3 Allow Client Credentials Flow: It requires Token Endpoint is enabled. More info at https://tools.ietf.org/html/rfc6749#section-1.3.4 +\u5141\u8bb8\u5ba2\u6237\u7aef\u51ed\u636e\u6d41\uff1a\u5b83\u8981\u6c42\u542f\u7528\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttps://tools.ietf.org/html/rfc6749#section-1.3.4 Allow Authorization Code Flow: It requires Authorization and Token Endpoints are enabled. More info at http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth +\u5141\u8bb8\u6388\u6743\u4ee3\u7801\u6d41\u7a0b\uff1a\u5b83\u9700\u8981\u542f\u7528\u6388\u6743\u548c\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth Allow Implicit Flow: It requires Authorization Endpoint is enabled. More info at http://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth +\u5141\u8bb8\u9690\u5f0f\u6d41\uff1a\u5b83\u9700\u8981\u542f\u7528\u6388\u6743\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth Allow Refresh Token Flow: It allows to refresh access token using a refresh token. It can be used in combination with Password Flow, Authorization Code Flow and Hybrid Flow. More info at http://openid.net/specs/openid-connect-core-1_0.html#RefreshTokens +\u5141\u8bb8\u5237\u65b0\u4ee4\u724c\u6d41\uff1a\u5b83\u5141\u8bb8\u4f7f\u7528\u5237\u65b0\u4ee4\u724c\u5237\u65b0\u8bbf\u95ee\u4ee4\u724c\u3002\u5b83\u53ef\u4ee5\u4e0e\u5bc6\u7801\u6d41\uff0c\u6388\u6743\u4ee3\u7801\u6d41\u548c\u6df7\u5408\u6d41\u4e00\u8d77\u4f7f\u7528\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#RefreshTokens Normalized RoleNames: This configuration is only required if Client Credentials Flow is enabled. It determines the roles assigned to the app when it is authenticated using that flow. + Normalized RoleNames\uff1a\u4ec5\u5728\u542f\u7528Client Credentials Flow\u65f6\u624d\u9700\u8981\u6b64\u914d\u7f6e\u3002\u5b83\u786e\u5b9a\u5728\u4f7f\u7528\u8be5\u6d41\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u65f6\u5206\u914d\u7ed9\u5e94\u7528\u7a0b\u5e8f\u7684\u89d2\u8272\u3002 Redirect Options: Those options are only required when Implicit Flow, Authorization Code Flow or Allow Hybrid Flow is required: +\u91cd\u5b9a\u5411\u9009\u9879\uff1a\u4ec5\u5728\u9700\u8981\u9690\u5f0f\u6d41\uff0c\u6388\u6743\u4ee3\u7801\u6d41\u6216\u5141\u8bb8\u6df7\u5408\u6d41\u65f6\u624d\u9700\u8981\u8fd9\u4e9b\u9009\u9879\uff1a Logout Redirect Uri: logout callback URL + Logout Redirect Uri\uff1a\u6ce8\u9500\u56de\u8c03URL Redirect Uri: callback URL +\u91cd\u5b9a\u5411Uri\uff1a\u56de\u8c03URL Skip Consent: sets whether a consent form has to be completed by the user after log in. +\u8df3\u8fc7\u540c\u610f\uff1a\u8bbe\u7f6e\u7528\u6237\u5728\u767b\u5f55\u540e\u662f\u5426\u5fc5\u987b\u5b8c\u6210\u540c\u610f\u4e66\u3002 A sample of OpenID Connect App recipe step: OpenID Connect App\u914d\u65b9\u6b65\u9aa4\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"openidapplication\", <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cname\u201d\uff1a\u201copenidapplication\u201d\uff0c</font> \"ClientId\": \"openidtest\", \"DisplayName\": \"Open Id Test\", \"Type\": \"Confidential\", \"ClientSecret\": \"MyPassword\", \"EnableTokenEndpoint\": true, \"EnableAuthorizationEndpoint\": false, \"EnableLogoutEndpoint\": true, \"EnableUserInfoEndpoint\": true, \"AllowPasswordFlow\": true, \"AllowClientCredentialsFlow\": false, \"AllowAuthorizationCodeFlow\": false, \"AllowRefreshTokenFlow\": false, \"AllowImplicitFlow\": false } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Configuring Certificates \u914d\u7f6e\u8bc1\u4e66 Windows / IIS Windows / IIS Several tools are available for generating a signing certificate on Windows and/or IIS, for example: \u6709\u51e0\u79cd\u5de5\u5177\u53ef\u7528\u4e8e\u5728Windows\u548c/\u6216IIS\u4e0a\u751f\u6210\u7b7e\u540d\u8bc1\u4e66\uff0c\u4f8b\u5982\uff1a IIS Server Manager (offers limited control) + IIS\u670d\u52a1\u5668\u7ba1\u7406\u5668_\uff08\u63d0\u4f9b\u6709\u9650\u7684\u63a7\u5236\uff09_ 1. Server Certificates 2. Create Self-Signed Certificate PowerShell (offers full control) + PowerShell \uff08\u63d0\u4f9b\u5b8c\u5168\u63a7\u5236\uff09 1. `New-SelfSignedCertificate`, for example: # See https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/new-selfsignedcertificate # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u8bf7\u53c2\u9605https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/new-selfsignedcertificate</font> # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> New-SelfSignedCertificate ` <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">New-SelfSignedCertificate`</font> -Subject \"connect.example.com\" ` -FriendlyName \"Example.com Signing Certificate\" ` -CertStoreLocation \"cert:\\LocalMachine\\My\" ` -KeySpec Signature ` -KeyUsage DigitalSignature ` -KeyUsageProperty Sign ` -TextExtension @(\"2.5.29.37={text}1.3.6.1.5.5.7.3.1\") ` -KeyExportPolicy NonExportable ` -KeyAlgorithm RSA ` -KeyLength 4096 ` -HashAlgorithm SHA256 ` -NotAfter (Get-Date).AddDays(825) ` -Provider \"Microsoft Enhanced RSA and AES Cryptographic Provider\" This snippet must be run as admin. It generates a 4096-bit signing certificate, stores it in the machine store and returns the certificate's thumbprint, which you need in the OpenID Connect Settings recipe or when exporting the certficate through PowerShell. You should update this example according to your requirements! \u6b64\u4ee3\u7801\u6bb5\u5fc5\u987b\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\u3002 \u5b83\u4f1a\u751f\u62104096\u4f4d\u7b7e\u540d\u8bc1\u4e66\uff0c\u5c06\u5176\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u5b58\u50a8\u4e2d\u5e76\u8fd4\u56de\u8bc1\u4e66\u7684\u6307\u7eb9\uff0c\u60a8\u9700\u8981\u5728OpenID Connect\u8bbe\u7f6e\u914d\u65b9\u4e2d\u6216\u901a\u8fc7PowerShell\u5bfc\u51fa\u8bc1\u4e66\u65f6\u4f7f\u7528\u8be5\u6307\u7eb9\u3002 \u60a8\u5e94\u8be5\u6839\u636e\u60a8\u7684\u8981\u6c42\u66f4\u65b0\u6b64\u793a\u4f8b\uff01 In multi-node environments consider creating the certificate with -KeyExportPolicy Exportable , then export the certificate (PFX) to a secure location, using the MMC Certificates Snap-In or PowerShell Export-PfxCertificate , and subsequently import the certificate on each node as non-exportable, which is the default when using Import-PfxCertificate . For example: \u5728\u591a\u8282\u70b9\u73af\u5883\u4e2d\uff0c\u8003\u8651\u4f7f\u7528 -KeyExportPolicy Exportable \u521b\u5efa\u8bc1\u4e66\uff0c\u7136\u540e\u4f7f\u7528MMC\u8bc1\u4e66\u7ba1\u7406\u5355\u5143\u6216PowerShell Export-PfxCertificate \u5c06\u8bc1\u4e66\uff08PFX\uff09\u5bfc\u51fa\u5230\u5b89\u5168\u4f4d\u7f6e\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u73af\u5883\u4e2d\u5bfc\u5165\u8bc1\u4e66\u8282\u70b9\u4e3a\u4e0d\u53ef\u5bfc\u51fa\u7684\uff0c\u8fd9\u662f\u4f7f\u7528 Import-PfxCertificate \u65f6\u7684\u9ed8\u8ba4\u503c\u3002\u4f8b\u5982\uff1a # See https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/export-pfxcertificate # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u8bf7\u53c2\u9605https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/export-pfxcertificate</font> # # Run this on the machine where the certificate was generated: # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u5728\u751f\u6210\u8bc1\u4e66\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u6b64\u547d\u4ee4\uff1a</font> # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> $mypwd = ConvertTo-SecureString -String \"MySecretPassword123\" -Force -AsPlainText <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">$ mypwd = ConvertTo-SecureString -String\u201cMySecretPassword123\u201d-Force -AsPlainText</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> Export-PfxCertificate -FilePath C:\\securelocation\\connect.example.com.pfx cert:\\localMachine\\my\\thumbprintfromnewselfsignedcertificate -Password $mypwd <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">Export-PfxCertificate -FilePath C\uff1a\\\\ securelocation \\\\ connect.example.com.pfx cert\uff1a\\\\ localMachine \\\\ my \\\\ thumbprintfromnewselfsignedcertificate -Password $ mypwd</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> # See https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/import-pfxcertificate # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u8bf7\u53c2\u9605https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/import-pfxcertificate</font> # # Run this on the target node: # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u5728\u76ee\u6807\u8282\u70b9\u4e0a\u8fd0\u884c\u6b64\u547d\u4ee4\uff1a</font> # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> $mypwd = ConvertTo-SecureString -String \"MySecretPassword123\" -Force -AsPlainText <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">$ mypwd = ConvertTo-SecureString -String\u201cMySecretPassword123\u201d-Force -AsPlainText</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> Import-PfxCertificate -FilePath C:\\securelocation\\connect.example.com.pfx cert:\\localMachine\\my -Password $mypwd <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">Import-PfxCertificate -FilePath C\uff1a\\\\ securelocation \\\\ connect.example.com.pfx cert\uff1a\\\\ localMachine \\\\ my -Password $ mypwd</font> Important: In order for the OrchardCore.OpenId module to use the certificate's keys for signing, it requires Read access to the certificate in the store. This can be granted in various ways, for example: \u91cd\u8981\u8bf4\u660e\uff1a \u4e3a\u4e86\u4f7f OrchardCore.OpenId \u6a21\u5757\u4f7f\u7528\u8bc1\u4e66\u7684\u5bc6\u94a5\u8fdb\u884c\u7b7e\u540d\uff0c\u5b83\u9700\u8981\u5bf9\u5b58\u50a8\u4e2d\u7684\u8bc1\u4e66\u8fdb\u884c\u201c\u8bfb\u53d6\u201d\u8bbf\u95ee\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u65b9\u5f0f\u6388\u4e88\uff0c\u4f8b\u5982\uff1a MMC.exe + MMC.exe 1. Add Snap-In 'Certificates' for Computer Account 2. Right-Click relevant certificate and select All Tasks, Manage Private Keys 3. Add the relevant identity (e.g. IIS AppPool\\PoolName) 4. Check Allow Read WinHttpCertCfg.exe (grants Full Control) + WinHttpCertCfg.exe \uff08\u6388\u4e88\u5b8c\u5168\u63a7\u5236\u6743\uff09 1. For example: `winhttpcertcfg -g -c LOCAL_MACHINE\\My -s connect.example.com -a AppPoolIdentityName` https://msdn.microsoft.com/en-us/library/windows/desktop/aa384088(v=vs.85).aspx Token Validation \u4ee4\u724c\u9a8c\u8bc1 Validates tokens issued by the Orchard OpenID server or by a remote server supporting JWT and OpenID Connect discovery. \u9a8c\u8bc1Orchard OpenID\u670d\u52a1\u5668\u6216\u652f\u6301JWT\u548cOpenID Connect\u53d1\u73b0\u7684\u8fdc\u7a0b\u670d\u52a1\u5668\u53d1\u51fa\u7684\u4ee4\u724c\u3002 OIDC Client OIDC\u5ba2\u6237 Authenticates users from an external OpenID Connect identity provider. \u4ece\u5916\u90e8OpenID Connect\u8eab\u4efd\u63d0\u4f9b\u7a0b\u5e8f\u9a8c\u8bc1\u7528\u6237\u3002 If the site allows to register new users, a local user is linked and the external login is linked. \u5982\u679c\u7ad9\u70b9\u5141\u8bb8\u6ce8\u518c\u65b0\u7528\u6237\uff0c\u5219\u94fe\u63a5\u672c\u5730\u7528\u6237\u5e76\u94fe\u63a5\u5916\u90e8\u767b\u5f55\u3002 If an \"email\" claim is received, and a local user is found, then the external login is linked to that account, after authenticating. \u5982\u679c\u6536\u5230\u201c\u7535\u5b50\u90ae\u4ef6\u201d\u58f0\u660e\uff0c\u5e76\u4e14\u627e\u5230\u4e86\u672c\u5730\u7528\u6237\uff0c\u5219\u5728\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u540e\uff0c\u5916\u90e8\u767b\u5f55\u5c06\u94fe\u63a5\u5230\u8be5\u5e10\u6237\u3002 Configuration \u7ec4\u6001 Configuration can be set through the OpenID Connect settings menu in the admin dashboard and also through a recipe step. \u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406\u4eea\u8868\u677f\u4e2d\u7684_OpenID Connect_\u8bbe\u7f6e\u83dc\u5355\u4ee5\u53ca\u914d\u65b9\u6b65\u9aa4\u8bbe\u7f6e\u914d\u7f6e\u3002 Available settings are: \u53ef\u7528\u7684\u8bbe\u7f6e\u662f\uff1a Display Name: Display name of the IdP. It is shown in the login form. +\u663e\u793a\u540d\u79f0\uff1a\u663e\u793aIdP\u7684\u540d\u79f0\u3002\u5b83\u663e\u793a\u5728\u767b\u5f55\u8868\u5355\u4e2d\u3002 Authority: Authority to use when making OpenIdConnect calls. +\u6743\u9650\uff1a\u8fdb\u884cOpenIdConnect\u8c03\u7528\u65f6\u4f7f\u7528\u7684\u6743\u9650\u3002 ClientId: The client_id part of the query. + ClientId\uff1a\u67e5\u8be2\u7684client_id\u90e8\u5206\u3002 CallbackPath: The request path within the application's base path where the user agent will be returned after sign out from the identity provider. See post_logout_redirect_uri from http://openid.net/specs/openid-connect-session-1_0.html#RedirectionAfterLogout + CallbackPath\uff1a\u5e94\u7528\u7a0b\u5e8f\u57fa\u672c\u8def\u5f84\u4e2d\u7684\u8bf7\u6c42\u8def\u5f84\uff0c\u5728\u4ece\u8eab\u4efd\u63d0\u4f9b\u7a0b\u5e8f\u6ce8\u9500\u540e\u5c06\u8fd4\u56de\u7528\u6237\u4ee3\u7406\u3002\u8bf7\u53c2\u9605http://openid.net/specs/openid-connect-session-1_0.html#RedirectionAfterLogout\u4e2d\u7684post_logout_redirect_uri SignedOut CallbackPath: the callback endpoint dor signout. Defaults to /signout-callback-oidc. + SignedOut CallbackPath\uff1a\u56de\u8c03\u7aef\u70b9dor signout\u3002\u9ed8\u8ba4\u4e3a/ signout-callback-oidc\u3002 SignedOut Redirect Uri: The uri where the user agent will be redirected to after application is signed out from the identity provider. The redirect will happen after the SignedOutCallbackPath is invoked. + SignedOut Redirect Uri\uff1a\u5e94\u7528\u7a0b\u5e8f\u4ece\u8eab\u4efd\u63d0\u4f9b\u7a0b\u5e8f\u6ce8\u9500\u540e\u5c06\u7528\u6237\u4ee3\u7406\u91cd\u5b9a\u5411\u5230\u7684uri\u3002\u91cd\u5b9a\u5411\u5c06\u5728\u8c03\u7528SignedOutCallbackPath\u4e4b\u540e\u53d1\u751f\u3002 Scopes: Extra scopes except openid and profile +\u8303\u56f4\uff1a\u9664openid\u548cprofile\u4e4b\u5916\u7684\u5176\u4ed6\u8303\u56f4 Response Mode: Configure Response Mode see: http://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthResponse. If fragment or query only Code Authentication Flow is allowed. +\u54cd\u5e94\u6a21\u5f0f\uff1a\u914d\u7f6e\u54cd\u5e94\u6a21\u5f0f\u8bf7\u53c2\u9605\uff1ahttp\uff1a//openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthResponse\u3002\u5982\u679c\u5141\u8bb8\u7247\u6bb5\u6216\u67e5\u8be2\u4ec5\u4ee3\u7801\u9a8c\u8bc1\u6d41\u7a0b\u3002 Supported Flows: Select on of the OIDC flows +\u652f\u6301\u7684\u6d41\u7a0b\uff1a\u9009\u62e9OIDC\u6d41\u7a0b Code Authentication Flow (see: http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth) +\u4ee3\u7801\u9a8c\u8bc1\u6d41\u7a0b\uff08\u8bf7\u53c2\u9605\uff1ahttp\uff1a//openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth\uff09 Hybrid Authentication Flow (see: http://openid.net/specs/openid-connect-core-1_0.html#HybridAuthRequest) +\u6df7\u5408\u8eab\u4efd\u9a8c\u8bc1\u6d41\u7a0b\uff08\u8bf7\u53c2\u9605\uff1ahttp\uff1a//openid.net/specs/openid-connect-core-1_0.html#HybridAuthRequest\uff09 + Use 'code id_token' response type (example: http://openid.net/specs/openid-connect-core-1_0.html#code-id_token-tokenExample) + Use 'code id_token token' response type (example: http://openid.net/specs/openid-connect-core-1_0.html#code-id_token-tokenExample) + Use 'code token' response type (example: http://openid.net/specs/openid-connect-core-1_0.html#code-tokenExample) Implicit Authentication Flow (see: http://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthRequest) +\u9690\u5f0f\u8ba4\u8bc1\u6d41\u7a0b\uff08\u53c2\u89c1\uff1ahttp\uff1a//openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthRequest\uff09 + Use 'id_token' response type (example: http://openid.net/specs/openid-connect-core-1_0.html#id_tokenExample) + Use 'id_token token' response type (example: http://openid.net/specs/openid-connect-core-1_0.html#id_token-tokenExample) Client Secret: It is used with one of the 'confidential' flows, code or hybrid +\u5ba2\u6237\u7aef\u5bc6\u94a5\uff1a\u5b83\u4e0e\u201c\u673a\u5bc6\u201d\u6d41\u7a0b\uff0c\u4ee3\u7801\u6216\u6df7\u5408\u4f7f\u7528 A sample of OpenID Connect Client Settings recipe step: OpenID Connect\u5ba2\u6237\u7aef\u8bbe\u7f6e\u914d\u65b9\u6b65\u9aa4\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"OpenIdClientSettings\", \"Authority\": \"http://localhost:44300/t1\", \"DisplayName\": \"Orchard (t1) IdP\", \"ClientId\": \"orchard_t2\", \"CallbackPath\": \"/signin-oidc\", \"SignedOutCallbackPath\": \"/signout-callback-oidc\", \"Scopes\": \"email phone\", \"ResponseMode\": \"form_post\", \"ResponseType\": \"code id_token\" \"ClientSecret\": \"secret\" } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> CREDITS \u5b66\u5206 OpenIddict OpenIddict https://github.com/openiddict https://github.com/openiddict License under Apache License 2.0 Apache License 2.0\u4e0b\u7684\u8bb8\u53ef","title":"OpenId"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#orchardcoreopenid","text":"","title":"OrchardCore.OpenId"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#orchardcoreopenid_1","text":"","title":"OrchardCore.OpenId"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#openid-connect-module","text":"","title":"OpenID Connect Module"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#openid-connect","text":"OrchardCore.OpenId provides the following features Core Components \u6838\u5fc3\u7ec4\u4ef6 Entity Framework Core Stores \u5b9e\u4f53\u6846\u67b6\u6838\u5fc3\u5546\u5e97 Authorization Server \u6388\u6743\u670d\u52a1\u5668 Management Interface \u7ba1\u7406\u754c\u9762 Token Validation \u4ee4\u724c\u9a8c\u8bc1 OIDC Client OIDC\u5ba2\u6237","title":"OpenID Connect\u6a21\u5757"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#core-components","text":"","title":"Core Components"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#_1","text":"Registers the core components used by the OpenID module. \u6ce8\u518cOpenID\u6a21\u5757\u4f7f\u7528\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002","title":"\u6838\u5fc3\u7ec4\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#entity-framework-core-stores","text":"","title":"Entity Framework Core Stores"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#_2","text":"Provides an Entity Framework Core 2.x adapter for the OpenID module. \u4e3aOpenID\u6a21\u5757\u63d0\u4f9bEntity Framework Core 2.x\u9002\u914d\u5668\u3002","title":"\u5b9e\u4f53\u6846\u67b6\u6838\u5fc3\u5546\u5e97"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#management-interface","text":"","title":"Management Interface"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#_3","text":"Allows adding, editing and removing the registered applications. \u5141\u8bb8\u6dfb\u52a0\uff0c\u7f16\u8f91\u548c\u5220\u9664\u5df2\u6ce8\u518c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002","title":"\u7ba1\u7406\u754c\u9762"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#authorization-server","text":"","title":"Authorization Server"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#_4","text":"Enables authentication of external applications using the OpenID Connect/OAuth 2.0 standards. \u4f7f\u7528OpenID Connect / OAuth 2.0\u6807\u51c6\u542f\u7528\u5916\u90e8\u5e94\u7528\u7a0b\u5e8f\u7684\u8eab\u4efd\u9a8c\u8bc1\u3002 It is based on the OpenIddict library allowing \u5b83\u57fa\u4e8e[OpenIddict]\uff08https://github.com/openiddict/openiddict-core\uff09\u5e93\uff0c\u5141\u8bb8 Orchard Core to act as identity provider to support token authentication without the need of an external identity provider. Orchard Core\u5145\u5f53\u8eab\u4efd\u63d0\u4f9b\u8005\u4ee5\u652f\u6301\u4ee4\u724c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u800c\u65e0\u9700\u5916\u90e8\u8eab\u4efd\u63d0\u4f9b\u8005\u3002 So, Orchard Core can also be used as an identity provider for centralizing the user access permissions to external applications, not only to Orchard Core services. \u56e0\u6b64\uff0cOrchard Core\u8fd8\u53ef\u4ee5\u7528\u4f5c\u8eab\u4efd\u63d0\u4f9b\u8005\uff0c\u5c06\u7528\u6237\u8bbf\u95ee\u6743\u9650\u96c6\u4e2d\u5230\u5916\u90e8\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662fOrchard Core\u670d\u52a1\u3002 Flows supported: code/implicit/hybrid flows and client credentials/resource owner password grants . \u652f\u6301\u7684\u6d41\u7a0b\uff1a[\u4ee3\u7801/\u9690\u5f0f/\u6df7\u5408\u6d41\u7a0b]\uff08http://openid.net/specs/openid-connect-core-1_0.html\uff09\u548c[\u5ba2\u6237\u7aef\u51ed\u636e/\u8d44\u6e90\u6240\u6709\u8005\u5bc6\u7801\u6388\u4e88]\uff08https\uff1a//tools.ietf .ORG / HTML / rfc6749\uff09\u3002","title":"\u6388\u6743\u670d\u52a1\u5668"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#configuration","text":"","title":"Configuration"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#_5","text":"Configuration can be set through the OpenID Connect settings menu in the admin dashboard and also through a recipe step. \u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406\u4eea\u8868\u677f\u4e2d\u7684_OpenID Connect_\u8bbe\u7f6e\u83dc\u5355\u4ee5\u53ca\u914d\u65b9\u6b65\u9aa4\u8bbe\u7f6e\u914d\u7f6e\u3002 Available settings are: \u53ef\u7528\u7684\u8bbe\u7f6e\u662f\uff1a Testing Mode: Enabling Testing mode, removes the need of providing a certificate for signing tokens providing an ephemeral key. Also removes the requirement of using an HTTPS for issuing tokens. +\u6d4b\u8bd5\u6a21\u5f0f\uff1a\u542f\u7528\u6d4b\u8bd5\u6a21\u5f0f\uff0c\u65e0\u9700\u4e3a\u7b7e\u540d\u63d0\u4f9b\u4e34\u65f6\u5bc6\u94a5\u7684\u4ee4\u724c\u63d0\u4f9b\u8bc1\u4e66\u3002\u8fd8\u6d88\u9664\u4e86\u4f7f\u7528HTTPS\u9881\u53d1\u4ee4\u724c\u7684\u8981\u6c42\u3002 Token Format: there are two options: +\u4ee4\u724c\u683c\u5f0f\uff1a\u6709\u4e24\u79cd\u9009\u62e9\uff1a JWT: This format uses signed JWT standard tokens (not encrypted). It requires that the SSL certificate being used is accepted as a trusted certificate by the client. + JWT\uff1a\u6b64\u683c\u5f0f\u4f7f\u7528\u7b7e\u540d\u7684JWT\u6807\u51c6\u4ee4\u724c\uff08\u672a\u52a0\u5bc6\uff09\u3002\u5b83\u8981\u6c42\u5ba2\u6237\u7aef\u4f7f\u7528\u6b63\u5728\u4f7f\u7528\u7684SSL\u8bc1\u4e66\u4f5c\u4e3a\u53ef\u4fe1\u8bc1\u4e66\u3002 Encrypted: This format uses non-standard opaque tokens encrypted by the ASP.NET data protection block. It doesn't require the client to accept the SSL certificate as a trusted certificate. +\u52a0\u5bc6\uff1a\u6b64\u683c\u5f0f\u4f7f\u7528\u7531ASP.NET\u6570\u636e\u4fdd\u62a4\u5757\u52a0\u5bc6\u7684\u975e\u6807\u51c6\u4e0d\u900f\u660e\u4ee4\u724c\u3002\u5b83\u4e0d\u8981\u6c42\u5ba2\u6237\u7aef\u5c06SSL\u8bc1\u4e66\u4f5c\u4e3a\u53ef\u4fe1\u8bc1\u4e66\u63a5\u53d7\u3002 Authority: Orchard URL used by Orchard to act as an identity server. + Authority\uff1aOrchard\u7528\u4f5c\u8eab\u4efd\u670d\u52a1\u5668\u7684Orchard URL\u3002 Audiences: URLs of the resource servers for which the identity server issues valid JWT tokens. +\u53d7\u4f17\uff1a\u8eab\u4efd\u670d\u52a1\u5668\u4e3a\u5176\u9881\u53d1\u6709\u6548JWT\u4ee4\u724c\u7684\u8d44\u6e90\u670d\u52a1\u5668\u7684URL\u3002 Certificate Store Location: CurrentUser/LocalMachine https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storelocation(v=vs.110).aspx +\u8bc1\u4e66\u5546\u5e97\u4f4d\u7f6e\uff1aCurrentUser / LocalMachine https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storelocation(v=vs.110).aspx Certificate Store Name: AddressBook/AuthRootCertificateAuthority/Disallowed/My/Root/TrustedPeople/TrustedPublisher https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storename(v=vs.110).aspx +\u8bc1\u4e66\u5546\u5e97\u540d\u79f0\uff1aAddressBook / AuthRootCertificateAuthority / Disallowed / My / Root / TrustedPeople / TrustedPublisher https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storename(v=vs.110\uff09\u7684.aspx Certificate Thumbprint: The thumbprint of the certificate (it is recommended to not use same certificate that is being used for SSL). +\u8bc1\u4e66\u6307\u7eb9\uff1a\u8bc1\u4e66\u7684\u6307\u7eb9\uff08\u5efa\u8bae\u4e0d\u8981\u4f7f\u7528\u7528\u4e8eSSL\u7684\u76f8\u540c\u8bc1\u4e66\uff09\u3002 Enable Token Endpoint. +\u542f\u7528\u4ee4\u724c\u7aef\u70b9\u3002 Enable Authorization Endpoint. +\u542f\u7528\u6388\u6743\u7aef\u70b9\u3002 Enable Logout Endpoint. +\u542f\u7528\u6ce8\u9500\u7aef\u70b9\u3002 Enable User Info Endpoint. +\u542f\u7528\u7528\u6237\u4fe1\u606f\u7aef\u70b9\u3002 Allow Password Flow: It requires Token Endpoint is enabled. More info at https://tools.ietf.org/html/rfc6749#section-1.3.3 +\u5141\u8bb8\u5bc6\u7801\u6d41\uff1a\u5b83\u9700\u8981\u542f\u7528\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttps://tools.ietf.org/html/rfc6749#section-1.3.3 Allow Client Credentials Flow: It requires Token Endpoint is enabled. More info at https://tools.ietf.org/html/rfc6749#section-1.3.4 +\u5141\u8bb8\u5ba2\u6237\u7aef\u51ed\u636e\u6d41\uff1a\u5b83\u8981\u6c42\u542f\u7528\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttps://tools.ietf.org/html/rfc6749#section-1.3.4 Allow Authorization Code Flow: It requires Authorization and Token Endpoints are enabled. More info at http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth +\u5141\u8bb8\u6388\u6743\u4ee3\u7801\u6d41\u7a0b\uff1a\u5b83\u9700\u8981\u542f\u7528\u6388\u6743\u548c\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth Allow Implicit Flow: It requires Authorization Endpoint is enabled. More info at http://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth +\u5141\u8bb8\u9690\u5f0f\u6d41\uff1a\u5b83\u9700\u8981\u542f\u7528\u6388\u6743\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth Allow Refresh Token Flow: It allows to refresh access token using a refresh token. It can be used in combination with Password Flow, Authorization Code Flow and Hybrid Flow. More info at http://openid.net/specs/openid-connect-core-1_0.html#RefreshTokens +\u5141\u8bb8\u5237\u65b0\u4ee4\u724c\u6d41\uff1a\u5b83\u5141\u8bb8\u4f7f\u7528\u5237\u65b0\u4ee4\u724c\u5237\u65b0\u8bbf\u95ee\u4ee4\u724c\u3002\u5b83\u53ef\u4ee5\u4e0e\u5bc6\u7801\u6d41\uff0c\u6388\u6743\u4ee3\u7801\u6d41\u548c\u6df7\u5408\u6d41\u4e00\u8d77\u4f7f\u7528\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#RefreshTokens A sample of OpenID Connect Settings recipe step: OpenID Connect\u8bbe\u7f6e\u914d\u65b9\u6b65\u9aa4\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"OpenIdServerSettings\", \"TestingModeEnabled\": false, \"AccessTokenFormat\": \"JWT\", //JWT or Encrypted \"Authority\": \"https://www.orchardproject.net\", \"Audiences\": [\"https://www.orchardproject.net\",\"https://orchardharvest.org/\"], \"CertificateStoreLocation\": \"LocalMachine\", //More info: https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storelocation(v=vs.110).aspx \"CertificateStoreName\": \"My\", //More info: https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.storename(v=vs.110).aspx \"CertificateThumbprint\": \"27CCA66EF38EF46CD9022431FB1FF0F2DF5CA1D7\" \"EnableTokenEndpoint\": true, \"EnableAuthorizationEndpoint\": false, \"EnableLogoutEndpoint\": true, \"EnableUserInfoEndpoint\": true, \"AllowPasswordFlow\": true, \"AllowClientCredentialsFlow\": false, \"AllowAuthorizationCodeFlow\": false, \"AllowRefreshTokenFlow\": false, \"AllowImplicitFlow\": false } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u7ec4\u6001"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#client-openid-connect-apps-configuration","text":"","title":"Client OpenID Connect Apps Configuration"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#openid-connect_1","text":"OpenID Connect apps can be set through OpenID Connect Apps menu in the admin dashboard (through the Management Interface feature) \u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406\u4eea\u8868\u677f\u4e2d\u7684OpenID Connect Apps\u83dc\u5355\uff08\u901a\u8fc7\u7ba1\u7406\u754c\u9762\u529f\u80fd\uff09\u8bbe\u7f6eOpenID Connect\u5e94\u7528\u7a0b\u5e8f and also through a recipe step. \u5e76\u901a\u8fc7\u914d\u65b9\u6b65\u9aa4\u3002 OpenID Connect apps require the following configuration. OpenID Connect\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4ee5\u4e0b\u914d\u7f6e\u3002 Id: Unique identifier. + Id\uff1a\u552f\u4e00\u6807\u8bc6\u7b26\u3002 Client Id: Client identifier of the application. It has to be provided by a client when requesting a valid token. + Client Id\uff1a\u5e94\u7528\u7a0b\u5e8f\u7684\u5ba2\u6237\u7aef\u6807\u8bc6\u7b26\u3002\u5b83\u5fc5\u987b\u7531\u5ba2\u6237\u7aef\u5728\u8bf7\u6c42\u6709\u6548\u4ee4\u724c\u65f6\u63d0\u4f9b\u3002 Display Name: Display name associated with the current application. +\u663e\u793a\u540d\u79f0\uff1a\u4e0e\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u5173\u8054\u7684\u663e\u793a\u540d\u79f0\u3002 Type: There are two options: +\u7c7b\u578b\uff1a\u6709\u4e24\u79cd\u9009\u62e9\uff1a Confidential: Confidential applications MUST send their client secret when communicating with the token and revocation endpoints. This guarantees that only the legit client can exchange an authorization code or get a refresh token. +\u673a\u5bc6\uff1a\u673a\u5bc6\u5e94\u7528\u7a0b\u5e8f\u5728\u4e0e\u4ee4\u724c\u548c\u540a\u9500\u7aef\u70b9\u901a\u4fe1\u65f6\u5fc5\u987b\u53d1\u9001\u5176\u5ba2\u6237\u7aef\u673a\u5bc6\u3002\u8fd9\u4fdd\u8bc1\u4e86\u53ea\u6709\u5408\u6cd5\u7684\u5ba2\u6237\u7aef\u624d\u80fd\u4ea4\u6362\u6388\u6743\u4ee3\u7801\u6216\u83b7\u53d6\u5237\u65b0\u4ee4\u724c\u3002 Public: Public applications don't use client secret on their communications. + Public\uff1a\u516c\u5171\u5e94\u7528\u7a0b\u5e8f\u4e0d\u5728\u5176\u901a\u4fe1\u4e0a\u4f7f\u7528\u5ba2\u6237\u7aef\u5bc6\u94a5\u3002 Client Secret: Client secret is a password associated with the application. It will be required when the application is configured as Confidential. +\u5ba2\u6237\u7aef\u5bc6\u94a5\uff1a\u5ba2\u6237\u7aef\u5bc6\u94a5\u662f\u4e0e\u5e94\u7528\u7a0b\u5e8f\u5173\u8054\u7684\u5bc6\u7801\u3002\u5c06\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u4e3a\u673a\u5bc6\u65f6\uff0c\u5c06\u9700\u8981\u5b83\u3002 Flows: If general OpenID Connect settings allow this flow, an app can also enable this flow. +\u6d41\u7a0b\uff1a\u5982\u679c\u5e38\u89c4OpenID Connect\u8bbe\u7f6e\u5141\u8bb8\u6b64\u6d41\u7a0b\uff0c\u5219\u5e94\u7528\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u542f\u7528\u6b64\u6d41\u7a0b\u3002 Allow Password Flow: It requires Token Endpoint is enabled. More info at https://tools.ietf.org/html/rfc6749#section-1.3.3 +\u5141\u8bb8\u5bc6\u7801\u6d41\uff1a\u5b83\u9700\u8981\u542f\u7528\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttps://tools.ietf.org/html/rfc6749#section-1.3.3 Allow Client Credentials Flow: It requires Token Endpoint is enabled. More info at https://tools.ietf.org/html/rfc6749#section-1.3.4 +\u5141\u8bb8\u5ba2\u6237\u7aef\u51ed\u636e\u6d41\uff1a\u5b83\u8981\u6c42\u542f\u7528\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttps://tools.ietf.org/html/rfc6749#section-1.3.4 Allow Authorization Code Flow: It requires Authorization and Token Endpoints are enabled. More info at http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth +\u5141\u8bb8\u6388\u6743\u4ee3\u7801\u6d41\u7a0b\uff1a\u5b83\u9700\u8981\u542f\u7528\u6388\u6743\u548c\u4ee4\u724c\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth Allow Implicit Flow: It requires Authorization Endpoint is enabled. More info at http://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth +\u5141\u8bb8\u9690\u5f0f\u6d41\uff1a\u5b83\u9700\u8981\u542f\u7528\u6388\u6743\u7aef\u70b9\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth Allow Refresh Token Flow: It allows to refresh access token using a refresh token. It can be used in combination with Password Flow, Authorization Code Flow and Hybrid Flow. More info at http://openid.net/specs/openid-connect-core-1_0.html#RefreshTokens +\u5141\u8bb8\u5237\u65b0\u4ee4\u724c\u6d41\uff1a\u5b83\u5141\u8bb8\u4f7f\u7528\u5237\u65b0\u4ee4\u724c\u5237\u65b0\u8bbf\u95ee\u4ee4\u724c\u3002\u5b83\u53ef\u4ee5\u4e0e\u5bc6\u7801\u6d41\uff0c\u6388\u6743\u4ee3\u7801\u6d41\u548c\u6df7\u5408\u6d41\u4e00\u8d77\u4f7f\u7528\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttp://openid.net/specs/openid-connect-core-1_0.html#RefreshTokens Normalized RoleNames: This configuration is only required if Client Credentials Flow is enabled. It determines the roles assigned to the app when it is authenticated using that flow. + Normalized RoleNames\uff1a\u4ec5\u5728\u542f\u7528Client Credentials Flow\u65f6\u624d\u9700\u8981\u6b64\u914d\u7f6e\u3002\u5b83\u786e\u5b9a\u5728\u4f7f\u7528\u8be5\u6d41\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u65f6\u5206\u914d\u7ed9\u5e94\u7528\u7a0b\u5e8f\u7684\u89d2\u8272\u3002 Redirect Options: Those options are only required when Implicit Flow, Authorization Code Flow or Allow Hybrid Flow is required: +\u91cd\u5b9a\u5411\u9009\u9879\uff1a\u4ec5\u5728\u9700\u8981\u9690\u5f0f\u6d41\uff0c\u6388\u6743\u4ee3\u7801\u6d41\u6216\u5141\u8bb8\u6df7\u5408\u6d41\u65f6\u624d\u9700\u8981\u8fd9\u4e9b\u9009\u9879\uff1a Logout Redirect Uri: logout callback URL + Logout Redirect Uri\uff1a\u6ce8\u9500\u56de\u8c03URL Redirect Uri: callback URL +\u91cd\u5b9a\u5411Uri\uff1a\u56de\u8c03URL Skip Consent: sets whether a consent form has to be completed by the user after log in. +\u8df3\u8fc7\u540c\u610f\uff1a\u8bbe\u7f6e\u7528\u6237\u5728\u767b\u5f55\u540e\u662f\u5426\u5fc5\u987b\u5b8c\u6210\u540c\u610f\u4e66\u3002 A sample of OpenID Connect App recipe step: OpenID Connect App\u914d\u65b9\u6b65\u9aa4\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"openidapplication\", <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u201cname\u201d\uff1a\u201copenidapplication\u201d\uff0c</font> \"ClientId\": \"openidtest\", \"DisplayName\": \"Open Id Test\", \"Type\": \"Confidential\", \"ClientSecret\": \"MyPassword\", \"EnableTokenEndpoint\": true, \"EnableAuthorizationEndpoint\": false, \"EnableLogoutEndpoint\": true, \"EnableUserInfoEndpoint\": true, \"AllowPasswordFlow\": true, \"AllowClientCredentialsFlow\": false, \"AllowAuthorizationCodeFlow\": false, \"AllowRefreshTokenFlow\": false, \"AllowImplicitFlow\": false } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u5ba2\u6237\u7aefOpenID Connect\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#configuring-certificates","text":"","title":"Configuring Certificates"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#_6","text":"","title":"\u914d\u7f6e\u8bc1\u4e66"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#windows-iis","text":"","title":"Windows / IIS"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#windows-iis_1","text":"Several tools are available for generating a signing certificate on Windows and/or IIS, for example: \u6709\u51e0\u79cd\u5de5\u5177\u53ef\u7528\u4e8e\u5728Windows\u548c/\u6216IIS\u4e0a\u751f\u6210\u7b7e\u540d\u8bc1\u4e66\uff0c\u4f8b\u5982\uff1a IIS Server Manager (offers limited control) + IIS\u670d\u52a1\u5668\u7ba1\u7406\u5668_\uff08\u63d0\u4f9b\u6709\u9650\u7684\u63a7\u5236\uff09_ 1. Server Certificates 2. Create Self-Signed Certificate PowerShell (offers full control) + PowerShell \uff08\u63d0\u4f9b\u5b8c\u5168\u63a7\u5236\uff09 1. `New-SelfSignedCertificate`, for example: # See https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/new-selfsignedcertificate # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u8bf7\u53c2\u9605https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/new-selfsignedcertificate</font> # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> New-SelfSignedCertificate ` <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">New-SelfSignedCertificate`</font> -Subject \"connect.example.com\" ` -FriendlyName \"Example.com Signing Certificate\" ` -CertStoreLocation \"cert:\\LocalMachine\\My\" ` -KeySpec Signature ` -KeyUsage DigitalSignature ` -KeyUsageProperty Sign ` -TextExtension @(\"2.5.29.37={text}1.3.6.1.5.5.7.3.1\") ` -KeyExportPolicy NonExportable ` -KeyAlgorithm RSA ` -KeyLength 4096 ` -HashAlgorithm SHA256 ` -NotAfter (Get-Date).AddDays(825) ` -Provider \"Microsoft Enhanced RSA and AES Cryptographic Provider\" This snippet must be run as admin. It generates a 4096-bit signing certificate, stores it in the machine store and returns the certificate's thumbprint, which you need in the OpenID Connect Settings recipe or when exporting the certficate through PowerShell. You should update this example according to your requirements! \u6b64\u4ee3\u7801\u6bb5\u5fc5\u987b\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\u3002 \u5b83\u4f1a\u751f\u62104096\u4f4d\u7b7e\u540d\u8bc1\u4e66\uff0c\u5c06\u5176\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u5b58\u50a8\u4e2d\u5e76\u8fd4\u56de\u8bc1\u4e66\u7684\u6307\u7eb9\uff0c\u60a8\u9700\u8981\u5728OpenID Connect\u8bbe\u7f6e\u914d\u65b9\u4e2d\u6216\u901a\u8fc7PowerShell\u5bfc\u51fa\u8bc1\u4e66\u65f6\u4f7f\u7528\u8be5\u6307\u7eb9\u3002 \u60a8\u5e94\u8be5\u6839\u636e\u60a8\u7684\u8981\u6c42\u66f4\u65b0\u6b64\u793a\u4f8b\uff01 In multi-node environments consider creating the certificate with -KeyExportPolicy Exportable , then export the certificate (PFX) to a secure location, using the MMC Certificates Snap-In or PowerShell Export-PfxCertificate , and subsequently import the certificate on each node as non-exportable, which is the default when using Import-PfxCertificate . For example: \u5728\u591a\u8282\u70b9\u73af\u5883\u4e2d\uff0c\u8003\u8651\u4f7f\u7528 -KeyExportPolicy Exportable \u521b\u5efa\u8bc1\u4e66\uff0c\u7136\u540e\u4f7f\u7528MMC\u8bc1\u4e66\u7ba1\u7406\u5355\u5143\u6216PowerShell Export-PfxCertificate \u5c06\u8bc1\u4e66\uff08PFX\uff09\u5bfc\u51fa\u5230\u5b89\u5168\u4f4d\u7f6e\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u73af\u5883\u4e2d\u5bfc\u5165\u8bc1\u4e66\u8282\u70b9\u4e3a\u4e0d\u53ef\u5bfc\u51fa\u7684\uff0c\u8fd9\u662f\u4f7f\u7528 Import-PfxCertificate \u65f6\u7684\u9ed8\u8ba4\u503c\u3002\u4f8b\u5982\uff1a # See https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/export-pfxcertificate # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u8bf7\u53c2\u9605https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/export-pfxcertificate</font> # # Run this on the machine where the certificate was generated: # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u5728\u751f\u6210\u8bc1\u4e66\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u6b64\u547d\u4ee4\uff1a</font> # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> $mypwd = ConvertTo-SecureString -String \"MySecretPassword123\" -Force -AsPlainText <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">$ mypwd = ConvertTo-SecureString -String\u201cMySecretPassword123\u201d-Force -AsPlainText</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> Export-PfxCertificate -FilePath C:\\securelocation\\connect.example.com.pfx cert:\\localMachine\\my\\thumbprintfromnewselfsignedcertificate -Password $mypwd <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">Export-PfxCertificate -FilePath C\uff1a\\\\ securelocation \\\\ connect.example.com.pfx cert\uff1a\\\\ localMachine \\\\ my \\\\ thumbprintfromnewselfsignedcertificate -Password $ mypwd</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> # See https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/import-pfxcertificate # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u8bf7\u53c2\u9605https://technet.microsoft.com/en-us/itpro/powershell/windows/pkiclient/import-pfxcertificate</font> # # Run this on the target node: # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u5728\u76ee\u6807\u8282\u70b9\u4e0a\u8fd0\u884c\u6b64\u547d\u4ee4\uff1a</font> # <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> $mypwd = ConvertTo-SecureString -String \"MySecretPassword123\" -Force -AsPlainText <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">$ mypwd = ConvertTo-SecureString -String\u201cMySecretPassword123\u201d-Force -AsPlainText</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> Import-PfxCertificate -FilePath C:\\securelocation\\connect.example.com.pfx cert:\\localMachine\\my -Password $mypwd <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">Import-PfxCertificate -FilePath C\uff1a\\\\ securelocation \\\\ connect.example.com.pfx cert\uff1a\\\\ localMachine \\\\ my -Password $ mypwd</font> Important: In order for the OrchardCore.OpenId module to use the certificate's keys for signing, it requires Read access to the certificate in the store. This can be granted in various ways, for example: \u91cd\u8981\u8bf4\u660e\uff1a \u4e3a\u4e86\u4f7f OrchardCore.OpenId \u6a21\u5757\u4f7f\u7528\u8bc1\u4e66\u7684\u5bc6\u94a5\u8fdb\u884c\u7b7e\u540d\uff0c\u5b83\u9700\u8981\u5bf9\u5b58\u50a8\u4e2d\u7684\u8bc1\u4e66\u8fdb\u884c\u201c\u8bfb\u53d6\u201d\u8bbf\u95ee\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u65b9\u5f0f\u6388\u4e88\uff0c\u4f8b\u5982\uff1a MMC.exe + MMC.exe 1. Add Snap-In 'Certificates' for Computer Account 2. Right-Click relevant certificate and select All Tasks, Manage Private Keys 3. Add the relevant identity (e.g. IIS AppPool\\PoolName) 4. Check Allow Read WinHttpCertCfg.exe (grants Full Control) + WinHttpCertCfg.exe \uff08\u6388\u4e88\u5b8c\u5168\u63a7\u5236\u6743\uff09 1. For example: `winhttpcertcfg -g -c LOCAL_MACHINE\\My -s connect.example.com -a AppPoolIdentityName` https://msdn.microsoft.com/en-us/library/windows/desktop/aa384088(v=vs.85).aspx","title":"Windows / IIS"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#token-validation","text":"","title":"Token Validation"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#_7","text":"Validates tokens issued by the Orchard OpenID server or by a remote server supporting JWT and OpenID Connect discovery. \u9a8c\u8bc1Orchard OpenID\u670d\u52a1\u5668\u6216\u652f\u6301JWT\u548cOpenID Connect\u53d1\u73b0\u7684\u8fdc\u7a0b\u670d\u52a1\u5668\u53d1\u51fa\u7684\u4ee4\u724c\u3002","title":"\u4ee4\u724c\u9a8c\u8bc1"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#oidc-client","text":"","title":"OIDC Client"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#oidc","text":"Authenticates users from an external OpenID Connect identity provider. \u4ece\u5916\u90e8OpenID Connect\u8eab\u4efd\u63d0\u4f9b\u7a0b\u5e8f\u9a8c\u8bc1\u7528\u6237\u3002 If the site allows to register new users, a local user is linked and the external login is linked. \u5982\u679c\u7ad9\u70b9\u5141\u8bb8\u6ce8\u518c\u65b0\u7528\u6237\uff0c\u5219\u94fe\u63a5\u672c\u5730\u7528\u6237\u5e76\u94fe\u63a5\u5916\u90e8\u767b\u5f55\u3002 If an \"email\" claim is received, and a local user is found, then the external login is linked to that account, after authenticating. \u5982\u679c\u6536\u5230\u201c\u7535\u5b50\u90ae\u4ef6\u201d\u58f0\u660e\uff0c\u5e76\u4e14\u627e\u5230\u4e86\u672c\u5730\u7528\u6237\uff0c\u5219\u5728\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u540e\uff0c\u5916\u90e8\u767b\u5f55\u5c06\u94fe\u63a5\u5230\u8be5\u5e10\u6237\u3002","title":"OIDC\u5ba2\u6237"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#configuration_1","text":"","title":"Configuration"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#_8","text":"Configuration can be set through the OpenID Connect settings menu in the admin dashboard and also through a recipe step. \u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406\u4eea\u8868\u677f\u4e2d\u7684_OpenID Connect_\u8bbe\u7f6e\u83dc\u5355\u4ee5\u53ca\u914d\u65b9\u6b65\u9aa4\u8bbe\u7f6e\u914d\u7f6e\u3002 Available settings are: \u53ef\u7528\u7684\u8bbe\u7f6e\u662f\uff1a Display Name: Display name of the IdP. It is shown in the login form. +\u663e\u793a\u540d\u79f0\uff1a\u663e\u793aIdP\u7684\u540d\u79f0\u3002\u5b83\u663e\u793a\u5728\u767b\u5f55\u8868\u5355\u4e2d\u3002 Authority: Authority to use when making OpenIdConnect calls. +\u6743\u9650\uff1a\u8fdb\u884cOpenIdConnect\u8c03\u7528\u65f6\u4f7f\u7528\u7684\u6743\u9650\u3002 ClientId: The client_id part of the query. + ClientId\uff1a\u67e5\u8be2\u7684client_id\u90e8\u5206\u3002 CallbackPath: The request path within the application's base path where the user agent will be returned after sign out from the identity provider. See post_logout_redirect_uri from http://openid.net/specs/openid-connect-session-1_0.html#RedirectionAfterLogout + CallbackPath\uff1a\u5e94\u7528\u7a0b\u5e8f\u57fa\u672c\u8def\u5f84\u4e2d\u7684\u8bf7\u6c42\u8def\u5f84\uff0c\u5728\u4ece\u8eab\u4efd\u63d0\u4f9b\u7a0b\u5e8f\u6ce8\u9500\u540e\u5c06\u8fd4\u56de\u7528\u6237\u4ee3\u7406\u3002\u8bf7\u53c2\u9605http://openid.net/specs/openid-connect-session-1_0.html#RedirectionAfterLogout\u4e2d\u7684post_logout_redirect_uri SignedOut CallbackPath: the callback endpoint dor signout. Defaults to /signout-callback-oidc. + SignedOut CallbackPath\uff1a\u56de\u8c03\u7aef\u70b9dor signout\u3002\u9ed8\u8ba4\u4e3a/ signout-callback-oidc\u3002 SignedOut Redirect Uri: The uri where the user agent will be redirected to after application is signed out from the identity provider. The redirect will happen after the SignedOutCallbackPath is invoked. + SignedOut Redirect Uri\uff1a\u5e94\u7528\u7a0b\u5e8f\u4ece\u8eab\u4efd\u63d0\u4f9b\u7a0b\u5e8f\u6ce8\u9500\u540e\u5c06\u7528\u6237\u4ee3\u7406\u91cd\u5b9a\u5411\u5230\u7684uri\u3002\u91cd\u5b9a\u5411\u5c06\u5728\u8c03\u7528SignedOutCallbackPath\u4e4b\u540e\u53d1\u751f\u3002 Scopes: Extra scopes except openid and profile +\u8303\u56f4\uff1a\u9664openid\u548cprofile\u4e4b\u5916\u7684\u5176\u4ed6\u8303\u56f4 Response Mode: Configure Response Mode see: http://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthResponse. If fragment or query only Code Authentication Flow is allowed. +\u54cd\u5e94\u6a21\u5f0f\uff1a\u914d\u7f6e\u54cd\u5e94\u6a21\u5f0f\u8bf7\u53c2\u9605\uff1ahttp\uff1a//openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthResponse\u3002\u5982\u679c\u5141\u8bb8\u7247\u6bb5\u6216\u67e5\u8be2\u4ec5\u4ee3\u7801\u9a8c\u8bc1\u6d41\u7a0b\u3002 Supported Flows: Select on of the OIDC flows +\u652f\u6301\u7684\u6d41\u7a0b\uff1a\u9009\u62e9OIDC\u6d41\u7a0b Code Authentication Flow (see: http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth) +\u4ee3\u7801\u9a8c\u8bc1\u6d41\u7a0b\uff08\u8bf7\u53c2\u9605\uff1ahttp\uff1a//openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth\uff09 Hybrid Authentication Flow (see: http://openid.net/specs/openid-connect-core-1_0.html#HybridAuthRequest) +\u6df7\u5408\u8eab\u4efd\u9a8c\u8bc1\u6d41\u7a0b\uff08\u8bf7\u53c2\u9605\uff1ahttp\uff1a//openid.net/specs/openid-connect-core-1_0.html#HybridAuthRequest\uff09 + Use 'code id_token' response type (example: http://openid.net/specs/openid-connect-core-1_0.html#code-id_token-tokenExample) + Use 'code id_token token' response type (example: http://openid.net/specs/openid-connect-core-1_0.html#code-id_token-tokenExample) + Use 'code token' response type (example: http://openid.net/specs/openid-connect-core-1_0.html#code-tokenExample) Implicit Authentication Flow (see: http://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthRequest) +\u9690\u5f0f\u8ba4\u8bc1\u6d41\u7a0b\uff08\u53c2\u89c1\uff1ahttp\uff1a//openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthRequest\uff09 + Use 'id_token' response type (example: http://openid.net/specs/openid-connect-core-1_0.html#id_tokenExample) + Use 'id_token token' response type (example: http://openid.net/specs/openid-connect-core-1_0.html#id_token-tokenExample) Client Secret: It is used with one of the 'confidential' flows, code or hybrid +\u5ba2\u6237\u7aef\u5bc6\u94a5\uff1a\u5b83\u4e0e\u201c\u673a\u5bc6\u201d\u6d41\u7a0b\uff0c\u4ee3\u7801\u6216\u6df7\u5408\u4f7f\u7528 A sample of OpenID Connect Client Settings recipe step: OpenID Connect\u5ba2\u6237\u7aef\u8bbe\u7f6e\u914d\u65b9\u6b65\u9aa4\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"OpenIdClientSettings\", \"Authority\": \"http://localhost:44300/t1\", \"DisplayName\": \"Orchard (t1) IdP\", \"ClientId\": \"orchard_t2\", \"CallbackPath\": \"/signin-oidc\", \"SignedOutCallbackPath\": \"/signout-callback-oidc\", \"Scopes\": \"email phone\", \"ResponseMode\": \"form_post\", \"ResponseType\": \"code id_token\" \"ClientSecret\": \"secret\" } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u7ec4\u6001"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#credits","text":"","title":"CREDITS"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#_9","text":"","title":"\u5b66\u5206"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#openiddict","text":"","title":"OpenIddict"},{"location":"OrchardCore.Modules/OrchardCore.OpenId/#openiddict_1","text":"https://github.com/openiddict https://github.com/openiddict License under Apache License 2.0 Apache License 2.0\u4e0b\u7684\u8bb8\u53ef","title":"OpenIddict"},{"location":"OrchardCore.Modules/OrchardCore.Queries/","text":"Queries (OrchardCore.Queries) \u67e5\u8be2\uff08OrchardCore.Queries\uff09 The queries module provides a management UI and APIs for querying data. \u67e5\u8be2\u6a21\u5757\u63d0\u4f9b\u7528\u4e8e\u67e5\u8be2\u6570\u636e\u7684\u7ba1\u7406UI\u548cAPI\u3002 Creating custom query sources \u521b\u5efa\u81ea\u5b9a\u4e49\u67e5\u8be2\u6e90 Query \u8be2\u95ee Create a class inheriting from Query which will represent the state that is necessary to represent this new query. \u521b\u5efa\u4e00\u4e2a\u7ee7\u627f\u81ea Query \u7684\u7c7b\uff0c\u5b83\u5c06\u8868\u793a\u8868\u793a\u6b64\u65b0\u67e5\u8be2\u6240\u5fc5\u9700\u7684\u72b6\u6001\u3002 QuerySource QuerySource Create a class implementing IQuerySource in order to expose the new type of query. \u521b\u5efa\u4e00\u4e2a\u5b9e\u73b0 IQuerySource \u7684\u7c7b\uff0c\u4ee5\u4fbf\u516c\u5f00\u65b0\u7c7b\u578b\u7684\u67e5\u8be2\u3002 The query source can be registered like this: \u67e5\u8be2\u6e90\u53ef\u4ee5\u50cf\u8fd9\u6837\u6ce8\u518c\uff1a services.AddScoped<IQuerySource, LuceneQuerySource>(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">services.AddScoped <IQuerySource\uff0cLuceneQuerySource>\uff08\uff09;</font> Editors \u7f16\u8005 Queries are edited by providing a custom implementation of a DisplayDriver for the type Query . \u901a\u8fc7\u4e3a Query \u7c7b\u578b\u63d0\u4f9b DisplayDriver \u7684\u81ea\u5b9a\u4e49\u5b9e\u73b0\u6765\u7f16\u8f91\u67e5\u8be2\u3002 public class LuceneQueryDisplayDriver : DisplayDriver<Query, LuceneQuery> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u7c7bLuceneQueryDisplayDriver\uff1aDisplayDriver <Query\uff0cLuceneQuery></font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> ... <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">...</font> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Queries dialog \u67e5\u8be2\u5bf9\u8bdd\u6846 When the list of query types is displayed, a template for the shape Query_Link__[QuerySource] will be used. \u5f53\u663e\u793a\u67e5\u8be2\u7c7b\u578b\u5217\u8868\u65f6\uff0c\u5c06\u4f7f\u7528\u5f62\u72b6 Query_Link __ [QuerySource] \u7684\u6a21\u677f\u3002 For instance, if the source is Lucene then the file Query-Lucene.Link.cshtml will be used. \u4f8b\u5982\uff0c\u5982\u679c\u6e90\u662f Lucene \uff0c\u90a3\u4e48\u5c06\u4f7f\u7528\u6587\u4ef6 Query-Lucene.Link.cshtml \u3002 Recipe step \u98df\u8c31\u6b65\u9aa4 Queries can be created during recipes using the queries step. \u53ef\u4ee5\u4f7f\u7528 queries \u6b65\u9aa4\u5728\u914d\u65b9\u671f\u95f4\u521b\u5efa\u67e5\u8be2\u3002 Here is a sample step: \u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u6b65\u9aa4\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"queries\", \"Queries\": [ { // Common properties \"Name\": \"AwesomeQuery\", \"Source\": \"Lucene\", // Properties of the concrete query ... } ] } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> Web APIs Web API api/queries/{name} API /\u67e5\u8be2/\uff08\u540d\u79f0\uff09 Executes a query with the specified name. \u6267\u884c\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u67e5\u8be2\u3002 Verbs: POST and GET \u52a8\u8bcd\uff1a POST \u548c GET | Parameter | Example | Description | |\u53c2\u6570|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | name | myQuery | The name of the query to execute | | name | myQuery |\u8981\u6267\u884c\u7684\u67e5\u8be2\u7684\u540d\u79f0 | parameters | { size: 3} | A Json object representing the parameters of the query | | parameters | {size\uff1a3} |\u4e00\u4e2aJson\u5bf9\u8c61\uff0c\u8868\u793a\u67e5\u8be2\u7684\u53c2\u6570 SQL Queries (OrchardCore.Queries.Sql) SQL\u67e5\u8be2\uff08OrchardCore.Queries.Sql\uff09 This feature provide a new type of query targeting the SQL database. \u6b64\u529f\u80fd\u63d0\u4f9b\u4e86\u4e00\u79cd\u9488\u5bf9SQL\u6570\u636e\u5e93\u7684\u65b0\u7c7b\u578b\u7684\u67e5\u8be2\u3002 Queries recipe step \u67e5\u8be2\u914d\u65b9\u6b65\u9aa4 Here is an example for creating a SQL query from a Queries recipe step: \u4ee5\u4e0b\u662f\u4ece\u67e5\u8be2\u914d\u65b9\u6b65\u9aa4\u521b\u5efaSQL\u67e5\u8be2\u7684\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"Source\": \"Sql\", \"Name\": \"ContentItems\", \"Template\": \"select * from ContentItemIndex\", // json encoded query template \"ReturnDocuments\": false } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Liquid templates \u6db2\u4f53\u6a21\u677f You can access queries from liquid views and templates by using the Queries property. Queries are accessed by name, for example Queries.RecentBlogPosts . \u60a8\u53ef\u4ee5\u4f7f\u7528 Queries \u5c5e\u6027\u4ece\u6db2\u4f53\u89c6\u56fe\u548c\u6a21\u677f\u8bbf\u95ee\u67e5\u8be2\u3002\u67e5\u8be2\u6309\u540d\u79f0\u8bbf\u95ee\uff0c\u4f8b\u5982 Queries.RecentBlogPosts \u3002 query \u8be2\u95ee The query filter provides a way to execute queries. query \u8fc7\u6ee4\u5668\u63d0\u4f9b\u4e86\u4e00\u79cd\u6267\u884c\u67e5\u8be2\u7684\u65b9\u6cd5\u3002 {% assign recentBlogPosts = Queries.RecentBlogPosts | query %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign recentBlogPosts = Queries.RecentBlogPosts |\u67e5\u8be2\uff05}</font> {% for item in recentBlogPosts %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05for recentBlogPosts\uff05}\u4e2d\u7684\u9879\u76ee</font> {{ item | display_text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{item | display_text}}</font> {% endfor %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endfor\uff05}</font> The example above will iterate over all the results of the query name RecentBlogPosts and display the text representing the content item. \u4e0a\u9762\u7684\u793a\u4f8b\u5c06\u8fed\u4ee3\u67e5\u8be2\u540d\u79f0\u201cRecentBlogPosts\u201d\u7684\u6240\u6709\u7ed3\u679c\uff0c\u5e76\u663e\u793a\u8868\u793a\u5185\u5bb9\u9879\u7684\u6587\u672c\u3002 Any available property on the results of the queries can be used. This example assumes the results will be content items. \u53ef\u4ee5\u4f7f\u7528\u67e5\u8be2\u7ed3\u679c\u7684\u4efb\u4f55\u53ef\u7528\u5c5e\u6027\u3002\u6b64\u793a\u4f8b\u5047\u5b9a\u7ed3\u679c\u5c06\u662f\u5185\u5bb9\u9879\u3002 Parameters \u53c2\u6570 The query filter allows you to pass in parameters to your paramterized queries. For example, a query called ContentItems that has two parameters ( contentType and limit ) can be called like this: query \u8fc7\u6ee4\u5668\u5141\u8bb8\u60a8\u5c06\u53c2\u6570\u4f20\u9012\u7ed9\u60a8\u7684\u53c2\u6570\u5316\u67e5\u8be2\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u540d\u4e3a ContentItems \u7684\u67e5\u8be2\u6709\u4e24\u4e2a\u53c2\u6570\uff08 contentType \u548c limit \uff09\u53ef\u4ee5\u50cf\u8fd9\u6837\u8c03\u7528\uff1a {% assign fiveBlogPosts = Queries.ContentItems | query: contentType: \"BlogPost\", limit: 5 %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign fiveBlogPosts = Queries.ContentItems |\u67e5\u8be2\uff1acontentType\uff1a\u201cBlogPost\u201d\uff0c\u9650\u5236\uff1a5\uff05}</font> Razor Helpers \u5243\u5200\u52a9\u624b The QueryAsync and ContentQueryAsync Orchard Helper extension methods (in the OrchardCore.Queries and OrchardCore.ContentManagement namespaces respectively) allow you to run queries directly from razor pages. QueryAsync \u548c ContentQueryAsync Orchard Helper\u6269\u5c55\u65b9\u6cd5\uff08\u5206\u522b\u5728 OrchardCore.Queries \u548c OrchardCore.ContentManagement \u547d\u540d\u7a7a\u95f4\u4e2d\uff09\u5141\u8bb8\u60a8\u76f4\u63a5\u4ecerazor\u9875\u9762\u8fd0\u884c\u67e5\u8be2\u3002 You can use the DisplayAsync extension method (also in OrchardCore.ContentManagement ) to display the content items returned from ContentQueryAsync . \u60a8\u53ef\u4ee5\u4f7f\u7528 DisplayAsync \u6269\u5c55\u65b9\u6cd5\uff08\u4e5f\u5728 OrchardCore.ContentManagement \u4e2d\uff09\u6765\u663e\u793a\u4ece ContentQueryAsync \u8fd4\u56de\u7684\u5185\u5bb9\u9879\u3002 For example, to run a query called LatestBlogPosts, and display the results: \u4f8b\u5982\uff0c\u8981\u8fd0\u884c\u540d\u4e3aLatestBlogPosts\u7684\u67e5\u8be2\uff0c\u5e76\u663e\u793a\u7ed3\u679c\uff1a @foreach (var contentItem in await OrchardCore.ContentQueryAsync(\"AllContent\")) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@foreach\uff08var contentItem in await OrchardCore.ContentQueryAsync\uff08\u201cAllContent\u201d\uff09\uff09</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> @await Orchard.DisplayAsync(contentItem) } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> The Razor Helper is accessible on the Orchard property if the view is using Orchard Core's Razor base class, or by injecting OrchardCore.IOrchardHelper in all other cases. \u5982\u679c\u89c6\u56fe\u4f7f\u7528Orchard Core\u7684Razor\u57fa\u7c7b\uff0c\u6216\u8005\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\u6ce8\u5165 OrchardCore.IOrchardHelper \uff0c\u5219\u53ef\u4ee5\u5728 Orchard \u5c5e\u6027\u8bbf\u95eeRazor Helper\u3002 Executing SQL Queries \u6267\u884cSQL\u67e5\u8be2 RDBMS support RDBMS\u652f\u6301 Because RDMBS vendors support different SQL flavors this module will analyze the query you defined and render a specific one based on the RDBMS that is used. \u7531\u4e8eRDMBS\u4f9b\u5e94\u5546\u652f\u6301\u4e0d\u540c\u7684SQL\u98ce\u683c\uff0c\u56e0\u6b64\u8be5\u6a21\u5757\u5c06\u5206\u6790\u60a8\u5b9a\u4e49\u7684\u67e5\u8be2\uff0c\u5e76\u6839\u636e\u4f7f\u7528\u7684RDBMS\u5448\u73b0\u7279\u5b9a\u7684\u67e5\u8be2\u3002 This also allows the queries to be exported and shared across website instances even if they run on different RDBMS. \u8fd9\u4e5f\u5141\u8bb8\u5728\u7f51\u7ad9\u5b9e\u4f8b\u4e2d\u5bfc\u51fa\u548c\u5171\u4eab\u67e5\u8be2\uff0c\u5373\u4f7f\u5b83\u4eec\u5728\u4e0d\u540c\u7684RDBMS\u4e0a\u8fd0\u884c\u3002 Examples \u4f8b\u5b50 Here is an example of a query that returns all published Blog Posts: \u4ee5\u4e0b\u662f\u8fd4\u56de\u6240\u6709\u5df2\u53d1\u5e03\u7684\u535a\u5ba2\u5e16\u5b50\u7684\u67e5\u8be2\u793a\u4f8b\uff1a select DocumentId from ContentItemIndex where Published = true and ContentType = 'BlogPost' By selecting the \"Return documents\" options, the content items associated with the resulting DocumentId values are loaded. \u901a\u8fc7\u9009\u62e9\u201c\u8fd4\u56de\u6587\u6863\u201d\u9009\u9879\uff0c\u5c06\u52a0\u8f7d\u4e0e\u751f\u6210\u7684\u201cDocumentId\u201d\u503c\u76f8\u5173\u8054\u7684\u5185\u5bb9\u9879\u3002 The example below returns a custom set of values instead of content items: \u4ee5\u4e0b\u793a\u4f8b\u8fd4\u56de\u4e00\u7ec4\u81ea\u5b9a\u4e49\u503c\u800c\u4e0d\u662f\u5185\u5bb9\u9879\uff1a select <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u9009\u62e9</font> month(CreatedUtc) as [Month], year(CreatedUtc) as [Year], day(CreatedUtc) as [Day], count(*) as [Count] from ContentItemIndex <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u6765\u81eaContentItemIndex</font> where Published = true and ContentType = 'BlogPost' <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u5176\u4e2dPublished = true\u4e14ContentType ='BlogPost'</font> group by day(CreatedUtc), month(CreatedUtc), year(CreatedUtc) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u6309\u5929\u5206\u7ec4\uff08CreatedUtc\uff09\uff0c\u6708\u4efd\uff08CreatedUtc\uff09\uff0c\u5e74\u4efd\uff08CreatedUtc\uff09</font> Parameters \u53c2\u6570 Parameters can be provided when running queries. \u8fd0\u884c\u67e5\u8be2\u65f6\u53ef\u4ee5\u63d0\u4f9b\u53c2\u6570\u3002 Parameters are safe to use as they will always be parsed before being included in a query. \u53c2\u6570\u53ef\u4ee5\u5b89\u5168\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u88ab\u5305\u542b\u5728\u67e5\u8be2\u4e2d\u4e4b\u524d\u5c06\u59cb\u7ec8\u88ab\u89e3\u6790\u3002 The syntax of a parameter is \u53c2\u6570\u7684\u8bed\u6cd5\u662f @name:default_value Where name is the name of the parameter, and default_value an expression (usually a literal) to use in case name \u662f\u53c2\u6570\u7684\u540d\u79f0\uff0c default_value \u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff08\u901a\u5e38\u662f\u6587\u5b57\uff09\uff0c\u7528\u4e8e\u6848\u4f8b the parameter is not defined. \u53c2\u6570\u672a\u5b9a\u4e49\u3002 The following example loads the document ids for a parameterized content type. \u4ee5\u4e0b\u793a\u4f8b\u4e3a\u53c2\u6570\u5316\u5185\u5bb9\u7c7b\u578b\u52a0\u8f7d\u6587\u6863ID\u3002 select DocumentId <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u9009\u62e9DocumentId</font> from ContentItemIndex <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u6765\u81eaContentItemIndex</font> where Published = true and ContentType = @contenttype:'BlogPost' <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u5176\u4e2dPublished = true\u4e14ContentType = @contenttype\uff1a'BlogPost'</font> If the contenttype parameter is not passed when the query is invoked, then the default value is used. \u5982\u679c\u5728\u8c03\u7528\u67e5\u8be2\u65f6\u672a\u4f20\u9012 contenttype \u53c2\u6570\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002 Parameter names are case-sensitive. \u53c2\u6570\u540d\u79f0\u533a\u5206\u5927\u5c0f\u5199\u3002 Templates \u6a21\u677f A SQL query is actually a Liquid template. This allows your queries to be shaped based on the parameters it gets. SQL\u67e5\u8be2\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2aLiquid\u6a21\u677f\u3002\u8fd9\u5141\u8bb8\u60a8\u7684\u67e5\u8be2\u6839\u636e\u5176\u83b7\u5f97\u7684\u53c2\u6570\u8fdb\u884c\u6574\u5f62\u3002 When injecting user-provided values, be sure to encode these such that they can't be exploited. \u6ce8\u5165\u7528\u6237\u63d0\u4f9b\u7684\u503c\u65f6\uff0c\u8bf7\u52a1\u5fc5\u5bf9\u5176\u8fdb\u884c\u7f16\u7801\uff0c\u4f7f\u5176\u65e0\u6cd5\u88ab\u5229\u7528\u3002 It is recommended to use parameters to inject values in the queries, and only use Liquid templates to change the shape of the query. \u5efa\u8bae\u4f7f\u7528\u53c2\u6570\u5728\u67e5\u8be2\u4e2d\u6ce8\u5165\u503c\uff0c\u5e76\u4ec5\u4f7f\u7528Liquid\u6a21\u677f\u66f4\u6539\u67e5\u8be2\u7684\u5f62\u72b6\u3002 This example checks that a limit parameter is provided and if so uses it: \u6b64\u793a\u4f8b\u68c0\u67e5\u662f\u5426\u63d0\u4f9b\u4e86 limit \u53c2\u6570\uff0c\u5982\u679c\u662f\uff0c\u5219\u4f7f\u7528\u5b83\uff1a {% if limit > 0 %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05if limit> 0\uff05}</font> select ... limit @limit {% else %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05else\uff05}</font> select ... {% endif %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05 \u4e07\u4e00 \uff05}</font> Paging \u5206\u9875 Use LIMIT [number] and OFFSET [number] to define paged results. \u4f7f\u7528 LIMIT [number] \u548c OFFSET [number] \u6765\u5b9a\u4e49\u5206\u9875\u7ed3\u679c\u3002 These statements will be converted automatically based on the RDBMS in use. \u8fd9\u4e9b\u8bed\u53e5\u5c06\u6839\u636e\u4f7f\u7528\u7684RDBMS\u81ea\u52a8\u8f6c\u6362\u3002 Helper functions \u52a9\u624b\u529f\u80fd The SQL parser is also able to convert some specific functions to the intended dialect. SQL\u89e3\u6790\u5668\u8fd8\u80fd\u591f\u5c06\u67d0\u4e9b\u7279\u5b9a\u51fd\u6570\u8f6c\u6362\u4e3a\u9884\u671f\u7684\u65b9\u8a00\u3002 | Name | Description | |\u540d\u79f0|\u8bf4\u660e| | ---------------- |----------------------------------- | | ---------------- | --------------------------------- - | | second(_date_) | Returns the seconds part of a date | | second\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u79d2\u90e8\u5206 | minute(_date_) | Returns the minutes part of a date | | minute\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u5206\u949f\u90e8\u5206 | hour(_date_) | Returns the hours part of a date | | hour\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u5c0f\u65f6\u90e8\u5206 | day(_date_) | Returns the days part of a date | | day\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u65e5\u671f\u90e8\u5206 | month(_date_) | Returns the months part of a date | | \u6708\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u6708\u4efd\u90e8\u5206 | year(_date_) | Returns the years part of a date | | \u5e74\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u5e74\u4efd\u90e8\u5206","title":"Queries"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#queries-orchardcorequeries","text":"","title":"Queries (OrchardCore.Queries)"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#orchardcorequeries","text":"The queries module provides a management UI and APIs for querying data. \u67e5\u8be2\u6a21\u5757\u63d0\u4f9b\u7528\u4e8e\u67e5\u8be2\u6570\u636e\u7684\u7ba1\u7406UI\u548cAPI\u3002","title":"\u67e5\u8be2\uff08OrchardCore.Queries\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#creating-custom-query-sources","text":"","title":"Creating custom query sources"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_1","text":"","title":"\u521b\u5efa\u81ea\u5b9a\u4e49\u67e5\u8be2\u6e90"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#query","text":"","title":"Query"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_2","text":"Create a class inheriting from Query which will represent the state that is necessary to represent this new query. \u521b\u5efa\u4e00\u4e2a\u7ee7\u627f\u81ea Query \u7684\u7c7b\uff0c\u5b83\u5c06\u8868\u793a\u8868\u793a\u6b64\u65b0\u67e5\u8be2\u6240\u5fc5\u9700\u7684\u72b6\u6001\u3002","title":"\u8be2\u95ee"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#querysource","text":"","title":"QuerySource"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#querysource_1","text":"Create a class implementing IQuerySource in order to expose the new type of query. \u521b\u5efa\u4e00\u4e2a\u5b9e\u73b0 IQuerySource \u7684\u7c7b\uff0c\u4ee5\u4fbf\u516c\u5f00\u65b0\u7c7b\u578b\u7684\u67e5\u8be2\u3002 The query source can be registered like this: \u67e5\u8be2\u6e90\u53ef\u4ee5\u50cf\u8fd9\u6837\u6ce8\u518c\uff1a services.AddScoped<IQuerySource, LuceneQuerySource>(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">services.AddScoped <IQuerySource\uff0cLuceneQuerySource>\uff08\uff09;</font>","title":"QuerySource"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#editors","text":"","title":"Editors"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_3","text":"Queries are edited by providing a custom implementation of a DisplayDriver for the type Query . \u901a\u8fc7\u4e3a Query \u7c7b\u578b\u63d0\u4f9b DisplayDriver \u7684\u81ea\u5b9a\u4e49\u5b9e\u73b0\u6765\u7f16\u8f91\u67e5\u8be2\u3002 public class LuceneQueryDisplayDriver : DisplayDriver<Query, LuceneQuery> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u7c7bLuceneQueryDisplayDriver\uff1aDisplayDriver <Query\uff0cLuceneQuery></font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> ... <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">...</font> } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u7f16\u8005"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#queries-dialog","text":"","title":"Queries dialog"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_4","text":"When the list of query types is displayed, a template for the shape Query_Link__[QuerySource] will be used. \u5f53\u663e\u793a\u67e5\u8be2\u7c7b\u578b\u5217\u8868\u65f6\uff0c\u5c06\u4f7f\u7528\u5f62\u72b6 Query_Link __ [QuerySource] \u7684\u6a21\u677f\u3002 For instance, if the source is Lucene then the file Query-Lucene.Link.cshtml will be used. \u4f8b\u5982\uff0c\u5982\u679c\u6e90\u662f Lucene \uff0c\u90a3\u4e48\u5c06\u4f7f\u7528\u6587\u4ef6 Query-Lucene.Link.cshtml \u3002","title":"\u67e5\u8be2\u5bf9\u8bdd\u6846"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#recipe-step","text":"","title":"Recipe step"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_5","text":"Queries can be created during recipes using the queries step. \u53ef\u4ee5\u4f7f\u7528 queries \u6b65\u9aa4\u5728\u914d\u65b9\u671f\u95f4\u521b\u5efa\u67e5\u8be2\u3002 Here is a sample step: \u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u6b65\u9aa4\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"queries\", \"Queries\": [ { // Common properties \"Name\": \"AwesomeQuery\", \"Source\": \"Lucene\", // Properties of the concrete query ... } ] } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font>","title":"\u98df\u8c31\u6b65\u9aa4"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#web-apis","text":"","title":"Web APIs"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#web-api","text":"","title":"Web API"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#apiqueriesname","text":"","title":"api/queries/{name}"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#api","text":"Executes a query with the specified name. \u6267\u884c\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u67e5\u8be2\u3002 Verbs: POST and GET \u52a8\u8bcd\uff1a POST \u548c GET | Parameter | Example | Description | |\u53c2\u6570|\u793a\u4f8b|\u8bf4\u660e| | --------- | ---- |------------ | | --------- | ---- | ------------ | | name | myQuery | The name of the query to execute | | name | myQuery |\u8981\u6267\u884c\u7684\u67e5\u8be2\u7684\u540d\u79f0 | parameters | { size: 3} | A Json object representing the parameters of the query | | parameters | {size\uff1a3} |\u4e00\u4e2aJson\u5bf9\u8c61\uff0c\u8868\u793a\u67e5\u8be2\u7684\u53c2\u6570","title":"API /\u67e5\u8be2/\uff08\u540d\u79f0\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#sql-queries-orchardcorequeriessql","text":"","title":"SQL Queries (OrchardCore.Queries.Sql)"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#sqlorchardcorequeriessql","text":"This feature provide a new type of query targeting the SQL database. \u6b64\u529f\u80fd\u63d0\u4f9b\u4e86\u4e00\u79cd\u9488\u5bf9SQL\u6570\u636e\u5e93\u7684\u65b0\u7c7b\u578b\u7684\u67e5\u8be2\u3002","title":"SQL\u67e5\u8be2\uff08OrchardCore.Queries.Sql\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#queries-recipe-step","text":"","title":"Queries recipe step"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_6","text":"Here is an example for creating a SQL query from a Queries recipe step: \u4ee5\u4e0b\u662f\u4ece\u67e5\u8be2\u914d\u65b9\u6b65\u9aa4\u521b\u5efaSQL\u67e5\u8be2\u7684\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"Source\": \"Sql\", \"Name\": \"ContentItems\", \"Template\": \"select * from ContentItemIndex\", // json encoded query template \"ReturnDocuments\": false } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u67e5\u8be2\u914d\u65b9\u6b65\u9aa4"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#liquid-templates","text":"","title":"Liquid templates"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_7","text":"You can access queries from liquid views and templates by using the Queries property. Queries are accessed by name, for example Queries.RecentBlogPosts . \u60a8\u53ef\u4ee5\u4f7f\u7528 Queries \u5c5e\u6027\u4ece\u6db2\u4f53\u89c6\u56fe\u548c\u6a21\u677f\u8bbf\u95ee\u67e5\u8be2\u3002\u67e5\u8be2\u6309\u540d\u79f0\u8bbf\u95ee\uff0c\u4f8b\u5982 Queries.RecentBlogPosts \u3002","title":"\u6db2\u4f53\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#query_1","text":"","title":"query"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_8","text":"The query filter provides a way to execute queries. query \u8fc7\u6ee4\u5668\u63d0\u4f9b\u4e86\u4e00\u79cd\u6267\u884c\u67e5\u8be2\u7684\u65b9\u6cd5\u3002 {% assign recentBlogPosts = Queries.RecentBlogPosts | query %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign recentBlogPosts = Queries.RecentBlogPosts |\u67e5\u8be2\uff05}</font> {% for item in recentBlogPosts %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05for recentBlogPosts\uff05}\u4e2d\u7684\u9879\u76ee</font> {{ item | display_text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{item | display_text}}</font> {% endfor %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05endfor\uff05}</font> The example above will iterate over all the results of the query name RecentBlogPosts and display the text representing the content item. \u4e0a\u9762\u7684\u793a\u4f8b\u5c06\u8fed\u4ee3\u67e5\u8be2\u540d\u79f0\u201cRecentBlogPosts\u201d\u7684\u6240\u6709\u7ed3\u679c\uff0c\u5e76\u663e\u793a\u8868\u793a\u5185\u5bb9\u9879\u7684\u6587\u672c\u3002 Any available property on the results of the queries can be used. This example assumes the results will be content items. \u53ef\u4ee5\u4f7f\u7528\u67e5\u8be2\u7ed3\u679c\u7684\u4efb\u4f55\u53ef\u7528\u5c5e\u6027\u3002\u6b64\u793a\u4f8b\u5047\u5b9a\u7ed3\u679c\u5c06\u662f\u5185\u5bb9\u9879\u3002","title":"\u8be2\u95ee"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#parameters","text":"","title":"Parameters"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_9","text":"The query filter allows you to pass in parameters to your paramterized queries. For example, a query called ContentItems that has two parameters ( contentType and limit ) can be called like this: query \u8fc7\u6ee4\u5668\u5141\u8bb8\u60a8\u5c06\u53c2\u6570\u4f20\u9012\u7ed9\u60a8\u7684\u53c2\u6570\u5316\u67e5\u8be2\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u540d\u4e3a ContentItems \u7684\u67e5\u8be2\u6709\u4e24\u4e2a\u53c2\u6570\uff08 contentType \u548c limit \uff09\u53ef\u4ee5\u50cf\u8fd9\u6837\u8c03\u7528\uff1a {% assign fiveBlogPosts = Queries.ContentItems | query: contentType: \"BlogPost\", limit: 5 %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05assign fiveBlogPosts = Queries.ContentItems |\u67e5\u8be2\uff1acontentType\uff1a\u201cBlogPost\u201d\uff0c\u9650\u5236\uff1a5\uff05}</font>","title":"\u53c2\u6570"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#razor-helpers","text":"","title":"Razor Helpers"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_10","text":"The QueryAsync and ContentQueryAsync Orchard Helper extension methods (in the OrchardCore.Queries and OrchardCore.ContentManagement namespaces respectively) allow you to run queries directly from razor pages. QueryAsync \u548c ContentQueryAsync Orchard Helper\u6269\u5c55\u65b9\u6cd5\uff08\u5206\u522b\u5728 OrchardCore.Queries \u548c OrchardCore.ContentManagement \u547d\u540d\u7a7a\u95f4\u4e2d\uff09\u5141\u8bb8\u60a8\u76f4\u63a5\u4ecerazor\u9875\u9762\u8fd0\u884c\u67e5\u8be2\u3002 You can use the DisplayAsync extension method (also in OrchardCore.ContentManagement ) to display the content items returned from ContentQueryAsync . \u60a8\u53ef\u4ee5\u4f7f\u7528 DisplayAsync \u6269\u5c55\u65b9\u6cd5\uff08\u4e5f\u5728 OrchardCore.ContentManagement \u4e2d\uff09\u6765\u663e\u793a\u4ece ContentQueryAsync \u8fd4\u56de\u7684\u5185\u5bb9\u9879\u3002 For example, to run a query called LatestBlogPosts, and display the results: \u4f8b\u5982\uff0c\u8981\u8fd0\u884c\u540d\u4e3aLatestBlogPosts\u7684\u67e5\u8be2\uff0c\u5e76\u663e\u793a\u7ed3\u679c\uff1a @foreach (var contentItem in await OrchardCore.ContentQueryAsync(\"AllContent\")) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@foreach\uff08var contentItem in await OrchardCore.ContentQueryAsync\uff08\u201cAllContent\u201d\uff09\uff09</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> @await Orchard.DisplayAsync(contentItem) } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> The Razor Helper is accessible on the Orchard property if the view is using Orchard Core's Razor base class, or by injecting OrchardCore.IOrchardHelper in all other cases. \u5982\u679c\u89c6\u56fe\u4f7f\u7528Orchard Core\u7684Razor\u57fa\u7c7b\uff0c\u6216\u8005\u5728\u6240\u6709\u5176\u4ed6\u60c5\u51b5\u4e0b\u6ce8\u5165 OrchardCore.IOrchardHelper \uff0c\u5219\u53ef\u4ee5\u5728 Orchard \u5c5e\u6027\u8bbf\u95eeRazor Helper\u3002","title":"\u5243\u5200\u52a9\u624b"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#executing-sql-queries","text":"","title":"Executing SQL Queries"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#sql","text":"","title":"\u6267\u884cSQL\u67e5\u8be2"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#rdbms-support","text":"","title":"RDBMS support"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#rdbms","text":"Because RDMBS vendors support different SQL flavors this module will analyze the query you defined and render a specific one based on the RDBMS that is used. \u7531\u4e8eRDMBS\u4f9b\u5e94\u5546\u652f\u6301\u4e0d\u540c\u7684SQL\u98ce\u683c\uff0c\u56e0\u6b64\u8be5\u6a21\u5757\u5c06\u5206\u6790\u60a8\u5b9a\u4e49\u7684\u67e5\u8be2\uff0c\u5e76\u6839\u636e\u4f7f\u7528\u7684RDBMS\u5448\u73b0\u7279\u5b9a\u7684\u67e5\u8be2\u3002 This also allows the queries to be exported and shared across website instances even if they run on different RDBMS. \u8fd9\u4e5f\u5141\u8bb8\u5728\u7f51\u7ad9\u5b9e\u4f8b\u4e2d\u5bfc\u51fa\u548c\u5171\u4eab\u67e5\u8be2\uff0c\u5373\u4f7f\u5b83\u4eec\u5728\u4e0d\u540c\u7684RDBMS\u4e0a\u8fd0\u884c\u3002","title":"RDBMS\u652f\u6301"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#examples","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_11","text":"Here is an example of a query that returns all published Blog Posts: \u4ee5\u4e0b\u662f\u8fd4\u56de\u6240\u6709\u5df2\u53d1\u5e03\u7684\u535a\u5ba2\u5e16\u5b50\u7684\u67e5\u8be2\u793a\u4f8b\uff1a select DocumentId from ContentItemIndex where Published = true and ContentType = 'BlogPost' By selecting the \"Return documents\" options, the content items associated with the resulting DocumentId values are loaded. \u901a\u8fc7\u9009\u62e9\u201c\u8fd4\u56de\u6587\u6863\u201d\u9009\u9879\uff0c\u5c06\u52a0\u8f7d\u4e0e\u751f\u6210\u7684\u201cDocumentId\u201d\u503c\u76f8\u5173\u8054\u7684\u5185\u5bb9\u9879\u3002 The example below returns a custom set of values instead of content items: \u4ee5\u4e0b\u793a\u4f8b\u8fd4\u56de\u4e00\u7ec4\u81ea\u5b9a\u4e49\u503c\u800c\u4e0d\u662f\u5185\u5bb9\u9879\uff1a select <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u9009\u62e9</font> month(CreatedUtc) as [Month], year(CreatedUtc) as [Year], day(CreatedUtc) as [Day], count(*) as [Count] from ContentItemIndex <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u6765\u81eaContentItemIndex</font> where Published = true and ContentType = 'BlogPost' <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u5176\u4e2dPublished = true\u4e14ContentType ='BlogPost'</font> group by day(CreatedUtc), month(CreatedUtc), year(CreatedUtc) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u6309\u5929\u5206\u7ec4\uff08CreatedUtc\uff09\uff0c\u6708\u4efd\uff08CreatedUtc\uff09\uff0c\u5e74\u4efd\uff08CreatedUtc\uff09</font>","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#parameters_1","text":"","title":"Parameters"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_12","text":"Parameters can be provided when running queries. \u8fd0\u884c\u67e5\u8be2\u65f6\u53ef\u4ee5\u63d0\u4f9b\u53c2\u6570\u3002 Parameters are safe to use as they will always be parsed before being included in a query. \u53c2\u6570\u53ef\u4ee5\u5b89\u5168\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u88ab\u5305\u542b\u5728\u67e5\u8be2\u4e2d\u4e4b\u524d\u5c06\u59cb\u7ec8\u88ab\u89e3\u6790\u3002 The syntax of a parameter is \u53c2\u6570\u7684\u8bed\u6cd5\u662f @name:default_value Where name is the name of the parameter, and default_value an expression (usually a literal) to use in case name \u662f\u53c2\u6570\u7684\u540d\u79f0\uff0c default_value \u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff08\u901a\u5e38\u662f\u6587\u5b57\uff09\uff0c\u7528\u4e8e\u6848\u4f8b the parameter is not defined. \u53c2\u6570\u672a\u5b9a\u4e49\u3002 The following example loads the document ids for a parameterized content type. \u4ee5\u4e0b\u793a\u4f8b\u4e3a\u53c2\u6570\u5316\u5185\u5bb9\u7c7b\u578b\u52a0\u8f7d\u6587\u6863ID\u3002 select DocumentId <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u9009\u62e9DocumentId</font> from ContentItemIndex <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u6765\u81eaContentItemIndex</font> where Published = true and ContentType = @contenttype:'BlogPost' <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u5176\u4e2dPublished = true\u4e14ContentType = @contenttype\uff1a'BlogPost'</font> If the contenttype parameter is not passed when the query is invoked, then the default value is used. \u5982\u679c\u5728\u8c03\u7528\u67e5\u8be2\u65f6\u672a\u4f20\u9012 contenttype \u53c2\u6570\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002 Parameter names are case-sensitive. \u53c2\u6570\u540d\u79f0\u533a\u5206\u5927\u5c0f\u5199\u3002","title":"\u53c2\u6570"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#templates","text":"","title":"Templates"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_13","text":"A SQL query is actually a Liquid template. This allows your queries to be shaped based on the parameters it gets. SQL\u67e5\u8be2\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2aLiquid\u6a21\u677f\u3002\u8fd9\u5141\u8bb8\u60a8\u7684\u67e5\u8be2\u6839\u636e\u5176\u83b7\u5f97\u7684\u53c2\u6570\u8fdb\u884c\u6574\u5f62\u3002 When injecting user-provided values, be sure to encode these such that they can't be exploited. \u6ce8\u5165\u7528\u6237\u63d0\u4f9b\u7684\u503c\u65f6\uff0c\u8bf7\u52a1\u5fc5\u5bf9\u5176\u8fdb\u884c\u7f16\u7801\uff0c\u4f7f\u5176\u65e0\u6cd5\u88ab\u5229\u7528\u3002 It is recommended to use parameters to inject values in the queries, and only use Liquid templates to change the shape of the query. \u5efa\u8bae\u4f7f\u7528\u53c2\u6570\u5728\u67e5\u8be2\u4e2d\u6ce8\u5165\u503c\uff0c\u5e76\u4ec5\u4f7f\u7528Liquid\u6a21\u677f\u66f4\u6539\u67e5\u8be2\u7684\u5f62\u72b6\u3002 This example checks that a limit parameter is provided and if so uses it: \u6b64\u793a\u4f8b\u68c0\u67e5\u662f\u5426\u63d0\u4f9b\u4e86 limit \u53c2\u6570\uff0c\u5982\u679c\u662f\uff0c\u5219\u4f7f\u7528\u5b83\uff1a {% if limit > 0 %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05if limit> 0\uff05}</font> select ... limit @limit {% else %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05else\uff05}</font> select ... {% endif %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05 \u4e07\u4e00 \uff05}</font>","title":"\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#paging","text":"","title":"Paging"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_14","text":"Use LIMIT [number] and OFFSET [number] to define paged results. \u4f7f\u7528 LIMIT [number] \u548c OFFSET [number] \u6765\u5b9a\u4e49\u5206\u9875\u7ed3\u679c\u3002 These statements will be converted automatically based on the RDBMS in use. \u8fd9\u4e9b\u8bed\u53e5\u5c06\u6839\u636e\u4f7f\u7528\u7684RDBMS\u81ea\u52a8\u8f6c\u6362\u3002","title":"\u5206\u9875"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#helper-functions","text":"","title":"Helper functions"},{"location":"OrchardCore.Modules/OrchardCore.Queries/#_15","text":"The SQL parser is also able to convert some specific functions to the intended dialect. SQL\u89e3\u6790\u5668\u8fd8\u80fd\u591f\u5c06\u67d0\u4e9b\u7279\u5b9a\u51fd\u6570\u8f6c\u6362\u4e3a\u9884\u671f\u7684\u65b9\u8a00\u3002 | Name | Description | |\u540d\u79f0|\u8bf4\u660e| | ---------------- |----------------------------------- | | ---------------- | --------------------------------- - | | second(_date_) | Returns the seconds part of a date | | second\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u79d2\u90e8\u5206 | minute(_date_) | Returns the minutes part of a date | | minute\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u5206\u949f\u90e8\u5206 | hour(_date_) | Returns the hours part of a date | | hour\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u5c0f\u65f6\u90e8\u5206 | day(_date_) | Returns the days part of a date | | day\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u65e5\u671f\u90e8\u5206 | month(_date_) | Returns the months part of a date | | \u6708\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u6708\u4efd\u90e8\u5206 | year(_date_) | Returns the years part of a date | | \u5e74\uff08_date_\uff09 |\u8fd4\u56de\u65e5\u671f\u7684\u5e74\u4efd\u90e8\u5206","title":"\u52a9\u624b\u529f\u80fd"},{"location":"OrchardCore.Modules/OrchardCore.Recipes/","text":"Recipes (OrchardCore.Recipes) \u98df\u8c31\uff08OrchardCore.Recipes\uff09 Recipe helpers \u98df\u8c31\u52a9\u624b Recipes can use script helpers like this: \u98df\u8c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u811a\u672c\u52a9\u624b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"ContentItemId\": \"[js: uuid()]\" } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> | Name | Description | |\u540d\u79f0|\u8bf4\u660e| | --- | --- | | --- | --- | | uuid() | Generates a unique identifier for a content item | | uuid\uff08\uff09 |\u751f\u6210\u5185\u5bb9\u9879\u7684\u552f\u4e00\u6807\u8bc6\u7b26 | base64(string) | Decodes the specified string from Base64 encoding. Use https://www.base64-image.de/ to convert your files to base64. | | base64\uff08string\uff09 |\u4eceBase64\u7f16\u7801\u89e3\u7801\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u3002\u4f7f\u7528https://www.base64-image.de/\u5c06\u60a8\u7684\u6587\u4ef6\u8f6c\u6362\u4e3abase64\u3002 | | html(string) | Decodes the specified string from HTML encoding | | html\uff08string\uff09 |\u4eceHTML\u7f16\u7801\u4e2d\u89e3\u7801\u6307\u5b9a\u7684\u5b57\u7b26\u4e32 | gzip(string) | Decodes the specified string from gzip/base64 encoding. Use http://www.txtwizard.net/compression to gzip your strings. | | gzip\uff08string\uff09 |\u4ecegzip / base64\u7f16\u7801\u89e3\u7801\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u3002\u4f7f\u7528http://www.txtwizard.net/compression\u6765\u538b\u7f29\u4f60\u7684\u5b57\u7b26\u4e32\u3002 |","title":"Recipes"},{"location":"OrchardCore.Modules/OrchardCore.Recipes/#recipes-orchardcorerecipes","text":"","title":"Recipes (OrchardCore.Recipes)"},{"location":"OrchardCore.Modules/OrchardCore.Recipes/#orchardcorerecipes","text":"","title":"\u98df\u8c31\uff08OrchardCore.Recipes\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Recipes/#recipe-helpers","text":"","title":"Recipe helpers"},{"location":"OrchardCore.Modules/OrchardCore.Recipes/#_1","text":"Recipes can use script helpers like this: \u98df\u8c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u811a\u672c\u52a9\u624b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"ContentItemId\": \"[js: uuid()]\" } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> | Name | Description | |\u540d\u79f0|\u8bf4\u660e| | --- | --- | | --- | --- | | uuid() | Generates a unique identifier for a content item | | uuid\uff08\uff09 |\u751f\u6210\u5185\u5bb9\u9879\u7684\u552f\u4e00\u6807\u8bc6\u7b26 | base64(string) | Decodes the specified string from Base64 encoding. Use https://www.base64-image.de/ to convert your files to base64. | | base64\uff08string\uff09 |\u4eceBase64\u7f16\u7801\u89e3\u7801\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u3002\u4f7f\u7528https://www.base64-image.de/\u5c06\u60a8\u7684\u6587\u4ef6\u8f6c\u6362\u4e3abase64\u3002 | | html(string) | Decodes the specified string from HTML encoding | | html\uff08string\uff09 |\u4eceHTML\u7f16\u7801\u4e2d\u89e3\u7801\u6307\u5b9a\u7684\u5b57\u7b26\u4e32 | gzip(string) | Decodes the specified string from gzip/base64 encoding. Use http://www.txtwizard.net/compression to gzip your strings. | | gzip\uff08string\uff09 |\u4ecegzip / base64\u7f16\u7801\u89e3\u7801\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u3002\u4f7f\u7528http://www.txtwizard.net/compression\u6765\u538b\u7f29\u4f60\u7684\u5b57\u7b26\u4e32\u3002 |","title":"\u98df\u8c31\u52a9\u624b"},{"location":"OrchardCore.Modules/OrchardCore.Resources/","text":"Resources (OrchardCore.Resources) \u8d44\u6e90\uff08OrchardCore.Resources\uff09 Purpose \u76ee\u7684 The Resources module provides commonly used resources like JavaScript libraries and CSS files. It also enables the Resource Manager Resources\u6a21\u5757\u63d0\u4f9b\u5e38\u7528\u8d44\u6e90\uff0c\u5982JavaScript\u5e93\u548cCSS\u6587\u4ef6\u3002\u5b83\u8fd8\u542f\u7528\u4e86\u8d44\u6e90\u7ba1\u7406\u5668 so any module can describe what resources are necessary on any page or component. When the full page is rendered all the required \u6240\u4ee5\u4efb\u4f55\u6a21\u5757\u90fd\u53ef\u4ee5\u63cf\u8ff0\u4efb\u4f55\u9875\u9762\u6216\u7ec4\u4ef6\u4e0a\u9700\u8981\u54ea\u4e9b\u8d44\u6e90\u3002\u5f53\u5b8c\u6574\u9875\u9762\u5448\u73b0\u6240\u6709\u5fc5\u9700\u7684 resources are computed and custom <script> and <link> tags are rendered accordingly. You can also register custom <meta> tags. \u8ba1\u7b97\u8d44\u6e90\u5e76\u76f8\u5e94\u5730\u5448\u73b0\u81ea\u5b9a\u4e49 <script> \u548c <link> \u6807\u8bb0\u3002\u60a8\u8fd8\u53ef\u4ee5\u6ce8\u518c\u81ea\u5b9a\u4e49 <meta> \u6807\u7b7e\u3002 Named Resources \u547d\u540d\u8d44\u6e90 Named resources are well-known scripts and stylesheets that are described in a module. They have a name, a type (script, stylesheet) \u547d\u540d\u8d44\u6e90\u662f\u6a21\u5757\u4e2d\u63cf\u8ff0\u7684\u4f17\u6240\u5468\u77e5\u7684\u811a\u672c\u548c\u6837\u5f0f\u8868\u3002\u4ed6\u4eec\u6709\u4e00\u4e2a\u540d\u5b57\uff0c\u4e00\u4e2a\u7c7b\u578b\uff08\u811a\u672c\uff0c\u6837\u5f0f\u8868\uff09 and optionally a version. The OrchardCore.Resources modules provides some commonly used ones: \u4ee5\u53ca\u53ef\u9009\u7684\u7248\u672c\u3002 OrchardCore.Resources \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u6a21\u5757\uff1a | Name | Type | Versions | Dependencies | |\u540d\u79f0|\u8f93\u5165|\u7248\u672c|\u4f9d\u8d56\u6027| | ---- | ---- | -------- | ------------ | | ---- | ---- | -------- | ------------ | | jQuery | Script | 1.12.4 | - | | jQuery |\u811a\u672c| 1.12.4 | - | | jQuery | Script | 2.2.4 | - | | jQuery |\u811a\u672c| 2.2.4 | - | | jQuery | Script | 3.3.1 | - | | jQuery |\u811a\u672c| 3.3.1 | - | | Popper | Script | 1.14.3 | - | |\u6ce2\u666e\u5c14|\u811a\u672c| 1.14.3 | - | | Bootstrap | Script | 3.3.7, 4.1.3 | jQuery, Popper | | Bootstrap |\u811a\u672c| 3.3.7,4.1.3 | jQuery\uff0cPopper | | Bootstrap | Style | 3.3.7, 4.1.3 | - | | Bootstrap |\u98ce\u683c| 3.3.7,4.1.3 | - | | jQuery-ui | Script | 1.12.1 | jQuery | | jQuery-ui |\u811a\u672c| 1.12.1 | jQuery | | font-awesome | Style | 4.7.0, 5.4.1 | - | | font-awesome |\u98ce\u683c| 4.7.0,5.4.1 | - | Usage \u7528\u6cd5 There are two ways to invoke a resource: either by using the IResourceManager API or a Tag Helper. \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8c03\u7528\u8d44\u6e90\uff1a\u4f7f\u7528 IResourceManager API\u6216Tag Helper\u3002 The API is necessary if you need to inject a resource from code. However it is recommended to use a Tag Helper when inside a view. \u5982\u679c\u9700\u8981\u4ece\u4ee3\u7801\u4e2d\u6ce8\u5165\u8d44\u6e90\uff0c\u5219\u5fc5\u987b\u4f7f\u7528API\u200b\u200b\u3002\u4f46\u662f\uff0c\u5efa\u8bae\u5728\u89c6\u56fe\u5185\u4f7f\u7528Tag Helper\u3002 Using the API \u4f7f\u7528API From your module, add a reference to the OrchardCore.Resources.Abstractions project. \u4ece\u60a8\u7684\u6a21\u5757\u4e2d\uff0c\u6dfb\u52a0\u5bf9 OrchardCore.Resources.Abstractions \u9879\u76ee\u7684\u5f15\u7528\u3002 From the class you want to use the API in, inject the OrchardCore.ResourceManagement.IResourceManager interface. \u4ece\u60a8\u60f3\u8981\u4f7f\u7528API\u200b\u200b\u7684\u7c7b\u4e2d\uff0c\u6ce8\u5165 OrchardCore.ResourceManagement.IResourceManager \u63a5\u53e3\u3002 Register a named resource \u6ce8\u518c\u547d\u540d\u8d44\u6e90 var settings = resourceManager.RegisterResource(\"script\", \"bootstrap\") <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var settings = resourceManager.RegisterResource\uff08\u201cscript\u201d\uff0c\u201cbootstrap\u201d\uff09</font> The result of this call is an object of type RequireSettings that is used to pass more parameters to the required resource. \u6b64\u8c03\u7528\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u7c7b\u578b\u4e3a\u201cRequireSettings\u201d\u7684\u5bf9\u8c61\uff0c\u7528\u4e8e\u5c06\u66f4\u591a\u53c2\u6570\u4f20\u9012\u7ed9\u6240\u9700\u7684\u8d44\u6e90\u3002 Place the resource at the beginning of the HTML document \u5c06\u8d44\u6e90\u653e\u5728HTML\u6587\u6863\u7684\u5f00\u5934 settings.AtHead(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">settings.AtHead\uff08\uff09;</font> Place the resource at the end of the HTML document \u5c06\u8d44\u6e90\u653e\u5728HTML\u6587\u6863\u7684\u672b\u5c3e settings.AtFoot(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">settings.AtFoot\uff08\uff09;</font> Set the version to use \u8bbe\u7f6e\u8981\u4f7f\u7528\u7684\u7248\u672c settings.UseVersion(\"3.3\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">settings.UseVersion\uff08 \u201c3.3\u201d\uff09;</font> This will use the latest available version between 3.3 and 3.4 . If the version is not available an exception is thrown. \u8fd9\u5c06\u4f7f\u7528 3.3 \u548c 3.4 \u4e4b\u95f4\u7684\u6700\u65b0\u7248\u672c\u3002\u5982\u679c\u7248\u672c\u4e0d\u53ef\u7528\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002 Register custom script \u6ce8\u518c\u81ea\u5b9a\u4e49\u811a\u672c At the beginning of the HTML document: \u5728HTML\u6587\u6863\u7684\u5f00\u5934\uff1a resourceManager.RegisterHeadScript(new HtmlString(\"<script>alert('Hello')</script>\")); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">resourceManager.RegisterHeadScript\uff08new HtmlString\uff08\u201c<script> alert\uff08'Hello'\uff09</ script>\u201d\uff09\uff09;</font> At the end of the HTML document: \u5728HTML\u6587\u6863\u7684\u672b\u5c3e\uff1a resourceManager.RegisterFootScript(new HtmlString(\"<script>alert('Hello')</script>\")); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">resourceManager.RegisterFootScript\uff08new HtmlString\uff08\u201c<script> alert\uff08'Hello'\uff09</ script>\u201d\uff09\uff09;</font> Add custom meta tag \u6dfb\u52a0\u81ea\u5b9a\u4e49\u5143\u6807\u8bb0 resourceManager.RegisterMeta(new MetaEntry { Content = \"Orchard\", Name = \"generator\" }); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">resourceManager.RegisterMeta\uff08new MetaEntry {Content =\u201cOrchard\u201d\uff0cName =\u201cgenerator\u201d}\uff09;</font> You can also add more content to an existing tag like this: \u60a8\u8fd8\u53ef\u4ee5\u5411\u73b0\u6709\u6807\u8bb0\u6dfb\u52a0\u66f4\u591a\u5185\u5bb9\uff0c\u5982\u4e0b\u6240\u793a\uff1a resourceManager.AppendMeta(new MetaEntry { Name = \"keywords\", Content = \"orchard\" }, \",\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">resourceManager.AppendMeta\uff08new MetaEntry {Name =\u201ckeywords\u201d\uff0cContent =\u201corchard\u201d}\uff0c\u201c\uff0c\u201d\uff09;</font> Using the Tag Helpers \u4f7f\u7528Tag Helpers From your module, in the _ViewImports.cshtml or your view, add @addTagHelper *, OrchardCore.ResourceManagement . \u4ece\u60a8\u7684\u6a21\u5757\uff0c\u5728 _ViewImports.cshtml \u6216\u60a8\u7684\u89c6\u56fe\u4e2d\uff0c\u6dfb\u52a0 @addTagHelper *\uff0cOrchardCore.ResourceManagement \u3002 Register a named script \u6ce8\u518c\u547d\u540d\u811a\u672c This example registers the script named bootstrap and all its dependencies (jquery). \u6b64\u793a\u4f8b\u6ce8\u518c\u540d\u4e3a bootstrap \u7684\u811a\u672c\u53ca\u5176\u6240\u6709\u4f9d\u8d56\u9879\uff08jquery\uff09\u3002 {% script name:\"bootstrap\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05script name\uff1a\u201cbootstrap\u201d\uff05}</font> <script asp-name=\"bootstrap\"></script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script asp-name =\u201cbootstrap\u201d> </ script></font> And for a stylesheet: \u5bf9\u4e8e\u6837\u5f0f\u8868\uff1a <style asp-name=\"bootstrap\"></style> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><style asp-name =\u201cbootstrap\u201d> </ style></font> Force the CDN \u5f3a\u5236CDN You can force a resource to be used from its CDN. By default the behavior is defined by configuration. \u60a8\u53ef\u4ee5\u5f3a\u5236\u4ece\u5176CDN\u4f7f\u7528\u8d44\u6e90\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u884c\u4e3a\u7531\u914d\u7f6e\u5b9a\u4e49\u3002 {% script name:\"bootstrap\", use_cdn:\"true\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05script name\uff1a\u201cbootstrap\u201d\uff0cuse_cdn\uff1a\u201ctrue\u201d\uff05}</font> <script asp-name=\"bootstrap\" use-cdn=\"true\"></script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script asp-name =\u201cbootstrap\u201duse-cdn =\u201ctrue\u201d> </ script></font> Use specific version \u4f7f\u7528\u7279\u5b9a\u7248\u672c This example will use the latest available version with a Major version of 3 , like 3.3.7 . If the version is not specified \u8fd9\u4e2a\u4f8b\u5b50\u5c06\u4f7f\u7528\u6700\u65b0\u7684\u53ef\u7528\u7248\u672c\u548c\u4e3b\u8981\u7248\u672c\u7684 3 \uff0c\u5982 3.3.7 \u3002\u5982\u679c\u672a\u6307\u5b9a\u7248\u672c the latest one is always used. \u6700\u65b0\u7684\u4e00\u4e2a\u603b\u662f\u4f7f\u7528\u3002 {% script name:\"bootstrap\", version:\"4\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05script name\uff1a\u201cbootstrap\u201d\uff0cversion\uff1a\u201c4\u201d\uff05}</font> <script asp-name=\"bootstrap\" version=\"3\"></script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script asp-name =\u201cbootstrap\u201dversion =\u201c3\u201d> </ script></font> Specify location \u6307\u5b9a\u4f4d\u7f6e By default all scripts are rendered in the footer. You can override it like this: \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u811a\u672c\u90fd\u5728\u9875\u811a\u4e2d\u5448\u73b0\u3002\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u8986\u76d6\u5b83\uff1a {% script name:\"bootstrap\", at:\"Foot\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05script name\uff1a\u201cbootstrap\u201d\uff0cat\uff1a\u201cFoot\u201d\uff05}</font> <script asp-name=\"bootstrap\" at=\"Foot\"></script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script asp-name =\u201cbootstrap\u201dat =\u201cFoot\u201d> </ script></font> Styles, however, are always injected in the header section of the HTML document. \u4f46\u662f\uff0c\u6837\u5f0f\u59cb\u7ec8\u6ce8\u5165HTML\u6587\u6863\u7684\u6807\u9898\u90e8\u5206\u3002 Inline definition \u5185\u8054\u5b9a\u4e49 You can declare a new resource directly from a view, and it will be injected only once even if the view is called multiple time. \u60a8\u53ef\u4ee5\u76f4\u63a5\u4ece\u89c6\u56fe\u58f0\u660e\u65b0\u8d44\u6e90\uff0c\u5373\u4f7f\u591a\u6b21\u8c03\u7528\u89c6\u56fe\uff0c\u5b83\u4e5f\u53ea\u4f1a\u6ce8\u5165\u4e00\u6b21\u3002 {% script source:\"/TheTheme/js/foo.min.js\", debug_src:\"/TheTheme/js/foo.js\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05script source\uff1a\u201c/ TheTheme / js / foo.min.js\u201d\uff0cdebug_src\uff1a\u201c/ TheTheme / js / foo.js\u201d\uff05}</font> <script asp-name=\"foo\" asp-src=\"/TheTheme/js/foo.min.js?v=1.0\" debug-src=\"/TheTheme/js/foo.js?v=1.0\" depends-on=\"baz:1.0\" version=\"1.0\"></script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script asp-name =\u201cfoo\u201dasp-src =\u201c/ TheTheme / js / foo.min.js\uff1fv = 1.0\u201ddebug-src =\u201c/ TheTheme / js / foo.js\uff1fv = 1.0\u201d\u4f9d\u8d56\u4e8e=\u201cbaz\uff1a1.0\u201dversion =\u201c1.0\u201d> </ script></font> In this example we also define a dependency on the script named baz with the version 1.0 . If the version was not set \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a baz \u7684\u811a\u672c\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u7248\u672c\u4e3a 1.0 \u3002\u5982\u679c\u672a\u8bbe\u7f6e\u7248\u672c the one with the highest number will be used. \u5c06\u4f7f\u7528\u7f16\u53f7\u6700\u9ad8\u7684\u90a3\u4e2a\u3002 You can also do the same for a stylesheet: \u60a8\u4e5f\u53ef\u4ee5\u5bf9\u6837\u5f0f\u8868\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff1a {% style source:\"/TheTheme/css/bar.min.css\", debug_src:\"/TheTheme/css/bar.css\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05style source\uff1a\u201c/ TheTheme / css / bar.min.css\u201d\uff0cdebug_src\uff1a\u201c/ TheTheme / css / bar.css\u201d\uff05}</font> <style asp-src=\"/TheTheme/css/bar.min.css\" debug-src=\"/TheTheme/css/bar.css\"></style> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><style asp-src =\u201c/ TheTheme / css / bar.min.css\u201ddebug-src =\u201c/ TheTheme / css / bar.css\u201d> </ style></font> Custom scripts \u81ea\u5b9a\u4e49\u811a\u672c The following example demonstrates how to inject a custom script in the footer section. \u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u5728\u9875\u811a\u90e8\u5206\u4e2d\u6ce8\u5165\u81ea\u5b9a\u4e49\u811a\u672c\u3002 <script at=\"Foot\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script at =\u201cFoot\u201d></font> document.write('<!-- some script -->'); </script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ SCRIPT></font>","title":"Resources"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#resources-orchardcoreresources","text":"","title":"Resources (OrchardCore.Resources)"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#orchardcoreresources","text":"","title":"\u8d44\u6e90\uff08OrchardCore.Resources\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#purpose","text":"","title":"Purpose"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_1","text":"The Resources module provides commonly used resources like JavaScript libraries and CSS files. It also enables the Resource Manager Resources\u6a21\u5757\u63d0\u4f9b\u5e38\u7528\u8d44\u6e90\uff0c\u5982JavaScript\u5e93\u548cCSS\u6587\u4ef6\u3002\u5b83\u8fd8\u542f\u7528\u4e86\u8d44\u6e90\u7ba1\u7406\u5668 so any module can describe what resources are necessary on any page or component. When the full page is rendered all the required \u6240\u4ee5\u4efb\u4f55\u6a21\u5757\u90fd\u53ef\u4ee5\u63cf\u8ff0\u4efb\u4f55\u9875\u9762\u6216\u7ec4\u4ef6\u4e0a\u9700\u8981\u54ea\u4e9b\u8d44\u6e90\u3002\u5f53\u5b8c\u6574\u9875\u9762\u5448\u73b0\u6240\u6709\u5fc5\u9700\u7684 resources are computed and custom <script> and <link> tags are rendered accordingly. You can also register custom <meta> tags. \u8ba1\u7b97\u8d44\u6e90\u5e76\u76f8\u5e94\u5730\u5448\u73b0\u81ea\u5b9a\u4e49 <script> \u548c <link> \u6807\u8bb0\u3002\u60a8\u8fd8\u53ef\u4ee5\u6ce8\u518c\u81ea\u5b9a\u4e49 <meta> \u6807\u7b7e\u3002","title":"\u76ee\u7684"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#named-resources","text":"","title":"Named Resources"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_2","text":"Named resources are well-known scripts and stylesheets that are described in a module. They have a name, a type (script, stylesheet) \u547d\u540d\u8d44\u6e90\u662f\u6a21\u5757\u4e2d\u63cf\u8ff0\u7684\u4f17\u6240\u5468\u77e5\u7684\u811a\u672c\u548c\u6837\u5f0f\u8868\u3002\u4ed6\u4eec\u6709\u4e00\u4e2a\u540d\u5b57\uff0c\u4e00\u4e2a\u7c7b\u578b\uff08\u811a\u672c\uff0c\u6837\u5f0f\u8868\uff09 and optionally a version. The OrchardCore.Resources modules provides some commonly used ones: \u4ee5\u53ca\u53ef\u9009\u7684\u7248\u672c\u3002 OrchardCore.Resources \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u6a21\u5757\uff1a | Name | Type | Versions | Dependencies | |\u540d\u79f0|\u8f93\u5165|\u7248\u672c|\u4f9d\u8d56\u6027| | ---- | ---- | -------- | ------------ | | ---- | ---- | -------- | ------------ | | jQuery | Script | 1.12.4 | - | | jQuery |\u811a\u672c| 1.12.4 | - | | jQuery | Script | 2.2.4 | - | | jQuery |\u811a\u672c| 2.2.4 | - | | jQuery | Script | 3.3.1 | - | | jQuery |\u811a\u672c| 3.3.1 | - | | Popper | Script | 1.14.3 | - | |\u6ce2\u666e\u5c14|\u811a\u672c| 1.14.3 | - | | Bootstrap | Script | 3.3.7, 4.1.3 | jQuery, Popper | | Bootstrap |\u811a\u672c| 3.3.7,4.1.3 | jQuery\uff0cPopper | | Bootstrap | Style | 3.3.7, 4.1.3 | - | | Bootstrap |\u98ce\u683c| 3.3.7,4.1.3 | - | | jQuery-ui | Script | 1.12.1 | jQuery | | jQuery-ui |\u811a\u672c| 1.12.1 | jQuery | | font-awesome | Style | 4.7.0, 5.4.1 | - | | font-awesome |\u98ce\u683c| 4.7.0,5.4.1 | - |","title":"\u547d\u540d\u8d44\u6e90"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#usage","text":"","title":"Usage"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_3","text":"There are two ways to invoke a resource: either by using the IResourceManager API or a Tag Helper. \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8c03\u7528\u8d44\u6e90\uff1a\u4f7f\u7528 IResourceManager API\u6216Tag Helper\u3002 The API is necessary if you need to inject a resource from code. However it is recommended to use a Tag Helper when inside a view. \u5982\u679c\u9700\u8981\u4ece\u4ee3\u7801\u4e2d\u6ce8\u5165\u8d44\u6e90\uff0c\u5219\u5fc5\u987b\u4f7f\u7528API\u200b\u200b\u3002\u4f46\u662f\uff0c\u5efa\u8bae\u5728\u89c6\u56fe\u5185\u4f7f\u7528Tag Helper\u3002","title":"\u7528\u6cd5"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#using-the-api","text":"","title":"Using the API"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#api","text":"From your module, add a reference to the OrchardCore.Resources.Abstractions project. \u4ece\u60a8\u7684\u6a21\u5757\u4e2d\uff0c\u6dfb\u52a0\u5bf9 OrchardCore.Resources.Abstractions \u9879\u76ee\u7684\u5f15\u7528\u3002 From the class you want to use the API in, inject the OrchardCore.ResourceManagement.IResourceManager interface. \u4ece\u60a8\u60f3\u8981\u4f7f\u7528API\u200b\u200b\u7684\u7c7b\u4e2d\uff0c\u6ce8\u5165 OrchardCore.ResourceManagement.IResourceManager \u63a5\u53e3\u3002","title":"\u4f7f\u7528API"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#register-a-named-resource","text":"","title":"Register a named resource"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_4","text":"var settings = resourceManager.RegisterResource(\"script\", \"bootstrap\") <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var settings = resourceManager.RegisterResource\uff08\u201cscript\u201d\uff0c\u201cbootstrap\u201d\uff09</font> The result of this call is an object of type RequireSettings that is used to pass more parameters to the required resource. \u6b64\u8c03\u7528\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u7c7b\u578b\u4e3a\u201cRequireSettings\u201d\u7684\u5bf9\u8c61\uff0c\u7528\u4e8e\u5c06\u66f4\u591a\u53c2\u6570\u4f20\u9012\u7ed9\u6240\u9700\u7684\u8d44\u6e90\u3002","title":"\u6ce8\u518c\u547d\u540d\u8d44\u6e90"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#place-the-resource-at-the-beginning-of-the-html-document","text":"","title":"Place the resource at the beginning of the HTML document"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#html","text":"settings.AtHead(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">settings.AtHead\uff08\uff09;</font>","title":"\u5c06\u8d44\u6e90\u653e\u5728HTML\u6587\u6863\u7684\u5f00\u5934"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#place-the-resource-at-the-end-of-the-html-document","text":"","title":"Place the resource at the end of the HTML document"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#html_1","text":"settings.AtFoot(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">settings.AtFoot\uff08\uff09;</font>","title":"\u5c06\u8d44\u6e90\u653e\u5728HTML\u6587\u6863\u7684\u672b\u5c3e"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#set-the-version-to-use","text":"","title":"Set the version to use"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_5","text":"settings.UseVersion(\"3.3\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">settings.UseVersion\uff08 \u201c3.3\u201d\uff09;</font> This will use the latest available version between 3.3 and 3.4 . If the version is not available an exception is thrown. \u8fd9\u5c06\u4f7f\u7528 3.3 \u548c 3.4 \u4e4b\u95f4\u7684\u6700\u65b0\u7248\u672c\u3002\u5982\u679c\u7248\u672c\u4e0d\u53ef\u7528\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002","title":"\u8bbe\u7f6e\u8981\u4f7f\u7528\u7684\u7248\u672c"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#register-custom-script","text":"","title":"Register custom script"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_6","text":"At the beginning of the HTML document: \u5728HTML\u6587\u6863\u7684\u5f00\u5934\uff1a resourceManager.RegisterHeadScript(new HtmlString(\"<script>alert('Hello')</script>\")); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">resourceManager.RegisterHeadScript\uff08new HtmlString\uff08\u201c<script> alert\uff08'Hello'\uff09</ script>\u201d\uff09\uff09;</font> At the end of the HTML document: \u5728HTML\u6587\u6863\u7684\u672b\u5c3e\uff1a resourceManager.RegisterFootScript(new HtmlString(\"<script>alert('Hello')</script>\")); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">resourceManager.RegisterFootScript\uff08new HtmlString\uff08\u201c<script> alert\uff08'Hello'\uff09</ script>\u201d\uff09\uff09;</font>","title":"\u6ce8\u518c\u81ea\u5b9a\u4e49\u811a\u672c"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#add-custom-meta-tag","text":"","title":"Add custom meta tag"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_7","text":"resourceManager.RegisterMeta(new MetaEntry { Content = \"Orchard\", Name = \"generator\" }); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">resourceManager.RegisterMeta\uff08new MetaEntry {Content =\u201cOrchard\u201d\uff0cName =\u201cgenerator\u201d}\uff09;</font> You can also add more content to an existing tag like this: \u60a8\u8fd8\u53ef\u4ee5\u5411\u73b0\u6709\u6807\u8bb0\u6dfb\u52a0\u66f4\u591a\u5185\u5bb9\uff0c\u5982\u4e0b\u6240\u793a\uff1a resourceManager.AppendMeta(new MetaEntry { Name = \"keywords\", Content = \"orchard\" }, \",\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">resourceManager.AppendMeta\uff08new MetaEntry {Name =\u201ckeywords\u201d\uff0cContent =\u201corchard\u201d}\uff0c\u201c\uff0c\u201d\uff09;</font>","title":"\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5143\u6807\u8bb0"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#using-the-tag-helpers","text":"","title":"Using the Tag Helpers"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#tag-helpers","text":"From your module, in the _ViewImports.cshtml or your view, add @addTagHelper *, OrchardCore.ResourceManagement . \u4ece\u60a8\u7684\u6a21\u5757\uff0c\u5728 _ViewImports.cshtml \u6216\u60a8\u7684\u89c6\u56fe\u4e2d\uff0c\u6dfb\u52a0 @addTagHelper *\uff0cOrchardCore.ResourceManagement \u3002","title":"\u4f7f\u7528Tag Helpers"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#register-a-named-script","text":"","title":"Register a named script"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_8","text":"This example registers the script named bootstrap and all its dependencies (jquery). \u6b64\u793a\u4f8b\u6ce8\u518c\u540d\u4e3a bootstrap \u7684\u811a\u672c\u53ca\u5176\u6240\u6709\u4f9d\u8d56\u9879\uff08jquery\uff09\u3002 {% script name:\"bootstrap\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05script name\uff1a\u201cbootstrap\u201d\uff05}</font> <script asp-name=\"bootstrap\"></script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script asp-name =\u201cbootstrap\u201d> </ script></font> And for a stylesheet: \u5bf9\u4e8e\u6837\u5f0f\u8868\uff1a <style asp-name=\"bootstrap\"></style> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><style asp-name =\u201cbootstrap\u201d> </ style></font>","title":"\u6ce8\u518c\u547d\u540d\u811a\u672c"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#force-the-cdn","text":"","title":"Force the CDN"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#cdn","text":"You can force a resource to be used from its CDN. By default the behavior is defined by configuration. \u60a8\u53ef\u4ee5\u5f3a\u5236\u4ece\u5176CDN\u4f7f\u7528\u8d44\u6e90\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u884c\u4e3a\u7531\u914d\u7f6e\u5b9a\u4e49\u3002 {% script name:\"bootstrap\", use_cdn:\"true\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05script name\uff1a\u201cbootstrap\u201d\uff0cuse_cdn\uff1a\u201ctrue\u201d\uff05}</font> <script asp-name=\"bootstrap\" use-cdn=\"true\"></script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script asp-name =\u201cbootstrap\u201duse-cdn =\u201ctrue\u201d> </ script></font>","title":"\u5f3a\u5236CDN"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#use-specific-version","text":"","title":"Use specific version"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_9","text":"This example will use the latest available version with a Major version of 3 , like 3.3.7 . If the version is not specified \u8fd9\u4e2a\u4f8b\u5b50\u5c06\u4f7f\u7528\u6700\u65b0\u7684\u53ef\u7528\u7248\u672c\u548c\u4e3b\u8981\u7248\u672c\u7684 3 \uff0c\u5982 3.3.7 \u3002\u5982\u679c\u672a\u6307\u5b9a\u7248\u672c the latest one is always used. \u6700\u65b0\u7684\u4e00\u4e2a\u603b\u662f\u4f7f\u7528\u3002 {% script name:\"bootstrap\", version:\"4\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05script name\uff1a\u201cbootstrap\u201d\uff0cversion\uff1a\u201c4\u201d\uff05}</font> <script asp-name=\"bootstrap\" version=\"3\"></script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script asp-name =\u201cbootstrap\u201dversion =\u201c3\u201d> </ script></font>","title":"\u4f7f\u7528\u7279\u5b9a\u7248\u672c"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#specify-location","text":"","title":"Specify location"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_10","text":"By default all scripts are rendered in the footer. You can override it like this: \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u811a\u672c\u90fd\u5728\u9875\u811a\u4e2d\u5448\u73b0\u3002\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u8986\u76d6\u5b83\uff1a {% script name:\"bootstrap\", at:\"Foot\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05script name\uff1a\u201cbootstrap\u201d\uff0cat\uff1a\u201cFoot\u201d\uff05}</font> <script asp-name=\"bootstrap\" at=\"Foot\"></script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script asp-name =\u201cbootstrap\u201dat =\u201cFoot\u201d> </ script></font> Styles, however, are always injected in the header section of the HTML document. \u4f46\u662f\uff0c\u6837\u5f0f\u59cb\u7ec8\u6ce8\u5165HTML\u6587\u6863\u7684\u6807\u9898\u90e8\u5206\u3002","title":"\u6307\u5b9a\u4f4d\u7f6e"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#inline-definition","text":"","title":"Inline definition"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_11","text":"You can declare a new resource directly from a view, and it will be injected only once even if the view is called multiple time. \u60a8\u53ef\u4ee5\u76f4\u63a5\u4ece\u89c6\u56fe\u58f0\u660e\u65b0\u8d44\u6e90\uff0c\u5373\u4f7f\u591a\u6b21\u8c03\u7528\u89c6\u56fe\uff0c\u5b83\u4e5f\u53ea\u4f1a\u6ce8\u5165\u4e00\u6b21\u3002 {% script source:\"/TheTheme/js/foo.min.js\", debug_src:\"/TheTheme/js/foo.js\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05script source\uff1a\u201c/ TheTheme / js / foo.min.js\u201d\uff0cdebug_src\uff1a\u201c/ TheTheme / js / foo.js\u201d\uff05}</font> <script asp-name=\"foo\" asp-src=\"/TheTheme/js/foo.min.js?v=1.0\" debug-src=\"/TheTheme/js/foo.js?v=1.0\" depends-on=\"baz:1.0\" version=\"1.0\"></script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script asp-name =\u201cfoo\u201dasp-src =\u201c/ TheTheme / js / foo.min.js\uff1fv = 1.0\u201ddebug-src =\u201c/ TheTheme / js / foo.js\uff1fv = 1.0\u201d\u4f9d\u8d56\u4e8e=\u201cbaz\uff1a1.0\u201dversion =\u201c1.0\u201d> </ script></font> In this example we also define a dependency on the script named baz with the version 1.0 . If the version was not set \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a baz \u7684\u811a\u672c\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u7248\u672c\u4e3a 1.0 \u3002\u5982\u679c\u672a\u8bbe\u7f6e\u7248\u672c the one with the highest number will be used. \u5c06\u4f7f\u7528\u7f16\u53f7\u6700\u9ad8\u7684\u90a3\u4e2a\u3002 You can also do the same for a stylesheet: \u60a8\u4e5f\u53ef\u4ee5\u5bf9\u6837\u5f0f\u8868\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff1a {% style source:\"/TheTheme/css/bar.min.css\", debug_src:\"/TheTheme/css/bar.css\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05style source\uff1a\u201c/ TheTheme / css / bar.min.css\u201d\uff0cdebug_src\uff1a\u201c/ TheTheme / css / bar.css\u201d\uff05}</font> <style asp-src=\"/TheTheme/css/bar.min.css\" debug-src=\"/TheTheme/css/bar.css\"></style> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><style asp-src =\u201c/ TheTheme / css / bar.min.css\u201ddebug-src =\u201c/ TheTheme / css / bar.css\u201d> </ style></font>","title":"\u5185\u8054\u5b9a\u4e49"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#custom-scripts","text":"","title":"Custom scripts"},{"location":"OrchardCore.Modules/OrchardCore.Resources/#_12","text":"The following example demonstrates how to inject a custom script in the footer section. \u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u5728\u9875\u811a\u90e8\u5206\u4e2d\u6ce8\u5165\u81ea\u5b9a\u4e49\u811a\u672c\u3002 <script at=\"Foot\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><script at =\u201cFoot\u201d></font> document.write('<!-- some script -->'); </script> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ SCRIPT></font>","title":"\u81ea\u5b9a\u4e49\u811a\u672c"},{"location":"OrchardCore.Modules/OrchardCore.Roles/","text":"CONFIGURATION \u7ec4\u6001 Roles can be configured through the roles menu in admin dashboard but also through a recipe step. \u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406\u4eea\u8868\u677f\u4e2d\u7684\u89d2\u8272\u83dc\u5355\u914d\u7f6e\u89d2\u8272\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u914d\u65b9\u6b65\u9aa4\u914d\u7f6e\u89d2\u8272\u3002 A sample of a roles configuration step: \u89d2\u8272\u914d\u7f6e\u6b65\u9aa4\u7684\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"roles\", \"Roles\": [ { \"Name\": \"Journalist\", \"Permissions\": [ \"PublishContent\", \"EditContent\" ] }, { \"Name\": \"Suscriber\", \"Permissions\": [ ] }, ] } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"Roles"},{"location":"OrchardCore.Modules/OrchardCore.Roles/#configuration","text":"","title":"CONFIGURATION"},{"location":"OrchardCore.Modules/OrchardCore.Roles/#_1","text":"Roles can be configured through the roles menu in admin dashboard but also through a recipe step. \u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406\u4eea\u8868\u677f\u4e2d\u7684\u89d2\u8272\u83dc\u5355\u914d\u7f6e\u89d2\u8272\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u914d\u65b9\u6b65\u9aa4\u914d\u7f6e\u89d2\u8272\u3002 A sample of a roles configuration step: \u89d2\u8272\u914d\u7f6e\u6b65\u9aa4\u7684\u793a\u4f8b\uff1a { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> \"name\": \"roles\", \"Roles\": [ { \"Name\": \"Journalist\", \"Permissions\": [ \"PublishContent\", \"EditContent\" ] }, { \"Name\": \"Suscriber\", \"Permissions\": [ ] }, ] } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u7ec4\u6001"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/","text":"Scripting (OrchardCore.Scripting) \u811a\u672c\uff08OrchardCore.Scripting\uff09 Purpose \u76ee\u7684 The scripting module provides an API allowing you to evaluate custom scripts in different languages. \u811a\u672c\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2aAPI\uff0c\u5141\u8bb8\u60a8\u8bc4\u4f30\u4e0d\u540c\u8bed\u8a00\u7684\u81ea\u5b9a\u4e49\u811a\u672c\u3002 Usage \u7528\u6cd5 Executing some script \u6267\u884c\u4e00\u4e9b\u811a\u672c The main interface is IScriptingManager . \u4e3b\u754c\u9762\u662f IScriptingManager \u3002 public interface IScriptingManager <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u63a5\u53e3IScriptingManager</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> IScriptingEngine GetScriptingEngine(string prefix); object Evaluate(string directive); IList<IGlobalMethodProvider> GlobalMethodProviders { get; } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> To evaluate an expression using a scripting engine, you must know which ones are available in the system. \u8981\u4f7f\u7528\u811a\u672c\u5f15\u64ce\u8bc4\u4f30\u8868\u8fbe\u5f0f\uff0c\u60a8\u5fc5\u987b\u77e5\u9053\u7cfb\u7edf\u4e2d\u53ef\u7528\u7684\u8868\u8fbe\u5f0f\u3002 For instance, a JavaScript one is available by default and its prefix is js . \u4f8b\u5982\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528JavaScript\uff0c\u5176\u524d\u7f00\u4e3a\u201cjs\u201d\u3002 To return the current date and time as a string we could do something like this: \u8981\u5c06\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de\uff0c\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a var scriptingManager = serviceProvider.GetService<IScriptingManager>(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var scriptingManager = serviceProvider.GetService <IScriptingManager>\uff08\uff09;</font> var date = scriptingManager.Evaluate(\"js: Date().toISOString()\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var date = scriptingManager.Evaluate\uff08\u201cjs\uff1aDate\uff08\uff09\u3002toISOString\uff08\uff09\u201d\uff09;</font> The js: prefix is used to describe in which language the code is written. Any module can provide js\uff1a \u524d\u7f00\u7528\u4e8e\u63cf\u8ff0\u4ee3\u7801\u7f16\u5199\u7684\u8bed\u8a00\u3002\u4efb\u4f55\u6a21\u5757\u90fd\u53ef\u4ee5\u63d0\u4f9b a new scripting engine by implementing the IScriptingEngine interface. \u901a\u8fc7\u5b9e\u73b0 IScriptingEngine \u63a5\u53e3\u5b9e\u73b0\u65b0\u7684\u811a\u672c\u5f15\u64ce\u3002 Customizing the scripting environment \u81ea\u5b9a\u4e49\u811a\u672c\u73af\u5883 Any module can provide custom methods for scripts independently of the chosen language. \u4efb\u4f55\u6a21\u5757\u90fd\u53ef\u4ee5\u72ec\u7acb\u4e8e\u6240\u9009\u8bed\u8a00\u4e3a\u811a\u672c\u63d0\u4f9b\u81ea\u5b9a\u4e49\u65b9\u6cd5\u3002 For instance the Contents module provides a uuid() helper method that computes a unique content item identifier. \u4f8b\u5982\uff0cContents\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a uuid\uff08\uff09 \u5e2e\u52a9\u5668\u65b9\u6cd5\uff0c\u7528\u4e8e\u8ba1\u7b97\u552f\u4e00\u7684\u5185\u5bb9\u9879\u6807\u8bc6\u7b26\u3002 To create a global method implement IGlobalMethodProvider then add it to the current IScriptingManager \u8981\u521b\u5efa\u4e00\u4e2a\u5168\u5c40\u65b9\u6cd5\u5b9e\u73b0 IGlobalMethodProvider \uff0c\u7136\u540e\u5c06\u5176\u6dfb\u52a0\u5230\u5f53\u524d\u7684 IScriptingManager instance like this: \u50cf\u8fd9\u6837\u7684\u5b9e\u4f8b\uff1a var scriptingManager = serviceProvider.GetService<IScriptingManager>(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var scriptingManager = serviceProvider.GetService <IScriptingManager>\uff08\uff09;</font> var globalMethodProvider = new MyGlobalMethodProvider(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var globalMethodProvider = new MyGlobalMethodProvider\uff08\uff09;</font> scriptingManager.GlobalMethodProviders.Add(globalMethodProvider); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">scriptingManager.GlobalMethodProviders.Add\uff08globalMethodProvider\uff09;</font> File \u6587\u4ef6 The File scripting engine provides methods to read file contents. \u6587\u4ef6\u811a\u672c\u5f15\u64ce\u63d0\u4f9b\u4e86\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u7684\u65b9\u6cd5\u3002 | Name | Example | Description | |\u540d\u79f0|\u793a\u4f8b|\u8bf4\u660e| | ---- | ---- | -------- | | ---- | ---- | -------- | | text | file:raw('../wwwroot/template.html') | Returns the content of a text file. | | text | file\uff1araw\uff08'../ wwwroot / template.html'\uff09 |\u8fd4\u56de\u6587\u672c\u6587\u4ef6\u7684\u5185\u5bb9\u3002 | | base64 | file:base64('../wwwroot/image.jpg') | Returns the base64 encoded content of a file. | | base64 | file\uff1abase64\uff08'../ wwwroot / image.jpg'\uff09 |\u8fd4\u56de\u6587\u4ef6\u7684base64\u7f16\u7801\u5185\u5bb9\u3002 |","title":"Scripting"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#scripting-orchardcorescripting","text":"","title":"Scripting (OrchardCore.Scripting)"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#orchardcorescripting","text":"","title":"\u811a\u672c\uff08OrchardCore.Scripting\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#purpose","text":"","title":"Purpose"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#_1","text":"The scripting module provides an API allowing you to evaluate custom scripts in different languages. \u811a\u672c\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2aAPI\uff0c\u5141\u8bb8\u60a8\u8bc4\u4f30\u4e0d\u540c\u8bed\u8a00\u7684\u81ea\u5b9a\u4e49\u811a\u672c\u3002","title":"\u76ee\u7684"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#usage","text":"","title":"Usage"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#_2","text":"","title":"\u7528\u6cd5"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#executing-some-script","text":"","title":"Executing some script"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#_3","text":"The main interface is IScriptingManager . \u4e3b\u754c\u9762\u662f IScriptingManager \u3002 public interface IScriptingManager <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u63a5\u53e3IScriptingManager</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> IScriptingEngine GetScriptingEngine(string prefix); object Evaluate(string directive); IList<IGlobalMethodProvider> GlobalMethodProviders { get; } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> To evaluate an expression using a scripting engine, you must know which ones are available in the system. \u8981\u4f7f\u7528\u811a\u672c\u5f15\u64ce\u8bc4\u4f30\u8868\u8fbe\u5f0f\uff0c\u60a8\u5fc5\u987b\u77e5\u9053\u7cfb\u7edf\u4e2d\u53ef\u7528\u7684\u8868\u8fbe\u5f0f\u3002 For instance, a JavaScript one is available by default and its prefix is js . \u4f8b\u5982\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528JavaScript\uff0c\u5176\u524d\u7f00\u4e3a\u201cjs\u201d\u3002 To return the current date and time as a string we could do something like this: \u8981\u5c06\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de\uff0c\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a var scriptingManager = serviceProvider.GetService<IScriptingManager>(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var scriptingManager = serviceProvider.GetService <IScriptingManager>\uff08\uff09;</font> var date = scriptingManager.Evaluate(\"js: Date().toISOString()\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var date = scriptingManager.Evaluate\uff08\u201cjs\uff1aDate\uff08\uff09\u3002toISOString\uff08\uff09\u201d\uff09;</font> The js: prefix is used to describe in which language the code is written. Any module can provide js\uff1a \u524d\u7f00\u7528\u4e8e\u63cf\u8ff0\u4ee3\u7801\u7f16\u5199\u7684\u8bed\u8a00\u3002\u4efb\u4f55\u6a21\u5757\u90fd\u53ef\u4ee5\u63d0\u4f9b a new scripting engine by implementing the IScriptingEngine interface. \u901a\u8fc7\u5b9e\u73b0 IScriptingEngine \u63a5\u53e3\u5b9e\u73b0\u65b0\u7684\u811a\u672c\u5f15\u64ce\u3002","title":"\u6267\u884c\u4e00\u4e9b\u811a\u672c"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#customizing-the-scripting-environment","text":"","title":"Customizing the scripting environment"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#_4","text":"Any module can provide custom methods for scripts independently of the chosen language. \u4efb\u4f55\u6a21\u5757\u90fd\u53ef\u4ee5\u72ec\u7acb\u4e8e\u6240\u9009\u8bed\u8a00\u4e3a\u811a\u672c\u63d0\u4f9b\u81ea\u5b9a\u4e49\u65b9\u6cd5\u3002 For instance the Contents module provides a uuid() helper method that computes a unique content item identifier. \u4f8b\u5982\uff0cContents\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a uuid\uff08\uff09 \u5e2e\u52a9\u5668\u65b9\u6cd5\uff0c\u7528\u4e8e\u8ba1\u7b97\u552f\u4e00\u7684\u5185\u5bb9\u9879\u6807\u8bc6\u7b26\u3002 To create a global method implement IGlobalMethodProvider then add it to the current IScriptingManager \u8981\u521b\u5efa\u4e00\u4e2a\u5168\u5c40\u65b9\u6cd5\u5b9e\u73b0 IGlobalMethodProvider \uff0c\u7136\u540e\u5c06\u5176\u6dfb\u52a0\u5230\u5f53\u524d\u7684 IScriptingManager instance like this: \u50cf\u8fd9\u6837\u7684\u5b9e\u4f8b\uff1a var scriptingManager = serviceProvider.GetService<IScriptingManager>(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var scriptingManager = serviceProvider.GetService <IScriptingManager>\uff08\uff09;</font> var globalMethodProvider = new MyGlobalMethodProvider(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">var globalMethodProvider = new MyGlobalMethodProvider\uff08\uff09;</font> scriptingManager.GlobalMethodProviders.Add(globalMethodProvider); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">scriptingManager.GlobalMethodProviders.Add\uff08globalMethodProvider\uff09;</font>","title":"\u81ea\u5b9a\u4e49\u811a\u672c\u73af\u5883"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#file","text":"","title":"File"},{"location":"OrchardCore.Modules/OrchardCore.Scripting/#_5","text":"The File scripting engine provides methods to read file contents. \u6587\u4ef6\u811a\u672c\u5f15\u64ce\u63d0\u4f9b\u4e86\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u7684\u65b9\u6cd5\u3002 | Name | Example | Description | |\u540d\u79f0|\u793a\u4f8b|\u8bf4\u660e| | ---- | ---- | -------- | | ---- | ---- | -------- | | text | file:raw('../wwwroot/template.html') | Returns the content of a text file. | | text | file\uff1araw\uff08'../ wwwroot / template.html'\uff09 |\u8fd4\u56de\u6587\u672c\u6587\u4ef6\u7684\u5185\u5bb9\u3002 | | base64 | file:base64('../wwwroot/image.jpg') | Returns the base64 encoded content of a file. | | base64 | file\uff1abase64\uff08'../ wwwroot / image.jpg'\uff09 |\u8fd4\u56de\u6587\u4ef6\u7684base64\u7f16\u7801\u5185\u5bb9\u3002 |","title":"\u6587\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Setup/","text":"Setup (OrchardCore.Setup) \u8bbe\u7f6e\uff08OrchardCore.Setup\uff09 Recipe Parameters \u914d\u65b9\u53c2\u6570 During setup, all recipes have access to the setup screen values using these parameters: \u5728\u8bbe\u7f6e\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u914d\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\u8bbf\u95ee\u8bbe\u7f6e\u5c4f\u5e55\u503c\uff1a | Parameter | Description | |\u53c2\u6570|\u8bf4\u660e| | --- | --- | | --- | --- | | SiteName | The name of the site | | SiteName |\u7f51\u7ad9\u7684\u540d\u79f0| | AdminUsername | The username of the super user | | AdminUsername |\u8d85\u7ea7\u7528\u6237\u7684\u7528\u6237\u540d| | AdminEmail | The email of the super user | | AdminEmail |\u8d85\u7ea7\u7528\u6237\u7684\u7535\u5b50\u90ae\u4ef6| | AdminPassword | The password of the super user | | AdminPassword |\u8d85\u7ea7\u7528\u6237\u7684\u5bc6\u7801| | DatabaseProvider | The database provider | | DatabaseProvider |\u6570\u636e\u5e93\u63d0\u4f9b\u8005| | DatabaseConnectionString | The connection string | | DatabaseConnectionString |\u8fde\u63a5\u5b57\u7b26\u4e32| | DatabaseTablePrefix | The database table prefix | | DatabaseTablePrefix |\u6570\u636e\u5e93\u8868\u524d\u7f00| These parameters can be used in the recipe using a scripted value like [js: parameters('AdminUsername')] . \u8fd9\u4e9b\u53c2\u6570\u53ef\u4ee5\u5728\u914d\u65b9\u4e2d\u4f7f\u7528\u811a\u672c\u503c\uff0c\u5982 [js\uff1aparameters\uff08'AdminUsername'\uff09] \u3002","title":"Setup"},{"location":"OrchardCore.Modules/OrchardCore.Setup/#setup-orchardcoresetup","text":"","title":"Setup (OrchardCore.Setup)"},{"location":"OrchardCore.Modules/OrchardCore.Setup/#orchardcoresetup","text":"","title":"\u8bbe\u7f6e\uff08OrchardCore.Setup\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Setup/#recipe-parameters","text":"","title":"Recipe Parameters"},{"location":"OrchardCore.Modules/OrchardCore.Setup/#_1","text":"During setup, all recipes have access to the setup screen values using these parameters: \u5728\u8bbe\u7f6e\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u914d\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\u8bbf\u95ee\u8bbe\u7f6e\u5c4f\u5e55\u503c\uff1a | Parameter | Description | |\u53c2\u6570|\u8bf4\u660e| | --- | --- | | --- | --- | | SiteName | The name of the site | | SiteName |\u7f51\u7ad9\u7684\u540d\u79f0| | AdminUsername | The username of the super user | | AdminUsername |\u8d85\u7ea7\u7528\u6237\u7684\u7528\u6237\u540d| | AdminEmail | The email of the super user | | AdminEmail |\u8d85\u7ea7\u7528\u6237\u7684\u7535\u5b50\u90ae\u4ef6| | AdminPassword | The password of the super user | | AdminPassword |\u8d85\u7ea7\u7528\u6237\u7684\u5bc6\u7801| | DatabaseProvider | The database provider | | DatabaseProvider |\u6570\u636e\u5e93\u63d0\u4f9b\u8005| | DatabaseConnectionString | The connection string | | DatabaseConnectionString |\u8fde\u63a5\u5b57\u7b26\u4e32| | DatabaseTablePrefix | The database table prefix | | DatabaseTablePrefix |\u6570\u636e\u5e93\u8868\u524d\u7f00| These parameters can be used in the recipe using a scripted value like [js: parameters('AdminUsername')] . \u8fd9\u4e9b\u53c2\u6570\u53ef\u4ee5\u5728\u914d\u65b9\u4e2d\u4f7f\u7528\u811a\u672c\u503c\uff0c\u5982 [js\uff1aparameters\uff08'AdminUsername'\uff09] \u3002","title":"\u914d\u65b9\u53c2\u6570"},{"location":"OrchardCore.Modules/OrchardCore.Templates/","text":"Templates ( OrchardCore.Templates ) \u6a21\u677f\uff08 OrchardCore.Templates \uff09 The templates module allows editors to create custom Liquid templates. \u6a21\u677f\u6a21\u5757\u5141\u8bb8\u7f16\u8f91\u8005\u521b\u5efa\u81ea\u5b9a\u4e49Liquid\u6a21\u677f\u3002 Available templates \u53ef\u7528\u6a21\u677f Templates can be defined using the web editor, or in a theme. Templates are distinguished by their name. \u53ef\u4ee5\u4f7f\u7528Web\u7f16\u8f91\u5668\u6216\u4e3b\u9898\u5b9a\u4e49\u6a21\u677f\u3002\u6a21\u677f\u4ee5\u5176\u540d\u79f0\u533a\u5206\u3002 Orchard Core doesn't render HTML directly, but instead will usually render something called a Shape , which is an object that represents Orchard Core\u4e0d\u76f4\u63a5\u5448\u73b0HTML\uff0c\u800c\u662f\u901a\u5e38\u4f1a\u5448\u73b0\u4e00\u4e2a\u540d\u4e3a Shape \u7684\u4e1c\u897f\uff0c\u5b83\u662f\u4e00\u4e2a\u4ee3\u8868\u7684\u5bf9\u8c61 the thing to render and has all the necessary data and metatada to render HTML. \u8981\u5448\u73b0\u7684\u4e1c\u897f\uff0c\u5e76\u5177\u6709\u5448\u73b0HTML\u7684\u6240\u6709\u5fc5\u8981\u6570\u636e\u548c\u5143\u6570\u636e\u3002 When rendering a Shape, Orchard Core will look for specific templates, passing the Shape to this template. \u6e32\u67d3Shape\u65f6\uff0cOrchard Core\u5c06\u67e5\u627e\u7279\u5b9a\u6a21\u677f\uff0c\u5c06Shape\u4f20\u9012\u7ed9\u6b64\u6a21\u677f\u3002 Orchard Core can match with many templates for the same Shape. Orchard Core\u53ef\u4ee5\u5339\u914d\u76f8\u540cShape\u7684\u8bb8\u591a\u6a21\u677f\u3002 These potential templates are called Alternates . \u8fd9\u4e9b\u6f5c\u5728\u7684\u6a21\u677f\u79f0\u4e3a Alternates \u3002 A Shape contains a list of acceptable template names (the alternates) and will look into providers to get the most appropriate one. Shape\u5305\u542b\u53ef\u63a5\u53d7\u7684\u6a21\u677f\u540d\u79f0\u5217\u8868\uff08\u66ff\u6362\u9879\uff09\uff0c\u5e76\u5c06\u67e5\u627e\u63d0\u4f9b\u7a0b\u5e8f\u4ee5\u83b7\u53d6\u6700\u5408\u9002\u7684\u6a21\u677f\u540d\u79f0\u3002 For instance, when rendering a Content Item of type Article, the corresponding Shape that is rendered will be configured \u4f8b\u5982\uff0c\u5728\u5448\u73b0Article\u7c7b\u578b\u7684Content Item\u65f6\uff0c\u5c06\u914d\u7f6e\u6e32\u67d3\u7684\u76f8\u5e94Shape to look for a template that handles all articles, but also one that handles an article when used in a list, and so on. \u67e5\u627e\u5904\u7406\u6240\u6709\u6587\u7ae0\u7684\u6a21\u677f\uff0c\u4ee5\u53ca\u5728\u5217\u8868\u4e2d\u4f7f\u7528\u65f6\u5904\u7406\u6587\u7ae0\u7684\u6a21\u677f\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 This document provides a list of pre-defined templates that can be used when rendering shapes. \u672c\u6587\u6863\u63d0\u4f9b\u4e86\u5728\u6e32\u67d3\u5f62\u72b6\u65f6\u53ef\u4ee5\u4f7f\u7528\u7684\u9884\u5b9a\u4e49\u6a21\u677f\u5217\u8868\u3002 It uses the internal name of a template and also the filename in case it's provided by a Theme. \u5b83\u4f7f\u7528\u6a21\u677f\u7684\u5185\u90e8\u540d\u79f0\u4ee5\u53ca\u6587\u4ef6\u540d\uff0c\u4ee5\u9632\u4e3b\u9898\u63d0\u4f9b\u3002 Content templates \u5185\u5bb9\u6a21\u677f Content__[ContentType] \u5185\u5bb9__ [ContentType\u7684] This template is called when displaying a content item with the Detail display type, for instance when accessed from its own URL. \u5f53\u663e\u793a\u5177\u6709\u201cDetail\u201d\u663e\u793a\u7c7b\u578b\u7684\u5185\u5bb9\u9879\u65f6\uff0c\u4f8b\u5982\u5f53\u4ece\u5176\u81ea\u5df1\u7684URL\u8bbf\u95ee\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Content__BlogPost | Content-BlogPost.cshtml | | Content__BlogPost | Content-BlogPost.cshtml | | Content__Article | Content-Article.cshtml | | Content__Article | Content-Article.cshtml | Available properties \u53ef\u7528\u7684\u5c5e\u6027 | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.Content | A zone shape that contains all the shapes generated by the content's parts and fields. | | Model.Content |\u5305\u542b\u5185\u5bb9\u90e8\u4ef6\u548c\u5b57\u6bb5\u751f\u6210\u7684\u6240\u6709\u5f62\u72b6\u7684\u533a\u57df\u5f62\u72b6\u3002 | | Model.ContentItem | Represents the current content item being rendered by the template. | | Model.ContentItem |\u8868\u793a\u6a21\u677f\u5448\u73b0\u7684\u5f53\u524d\u5185\u5bb9\u9879\u3002 | | Model.ContentItem.Content | A Json object containing all the data of the content item. | | Model.ContentItem.Content |\u5305\u542b\u5185\u5bb9\u9879\u7684\u6240\u6709\u6570\u636e\u7684Json\u5bf9\u8c61\u3002 | Content_[DisplayType]__[ContentType] Content_ [\u663e\u793a\u7c7b\u578b] __ [ContentType\u7684] This template is called when displaying a content item with a specific display type. \u663e\u793a\u5177\u6709\u7279\u5b9a\u663e\u793a\u7c7b\u578b\u7684\u5185\u5bb9\u9879\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 For instance, when a content item is displayed in a list, the Summary display type is commonly used. \u4f8b\u5982\uff0c\u5f53\u5728\u5217\u8868\u4e2d\u663e\u793a\u5185\u5bb9\u9879\u65f6\uff0c\u901a\u5e38\u4f7f\u7528\u201c\u6458\u8981\u201d\u663e\u793a\u7c7b\u578b\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Content_Summary__BlogPost | Content-BlogPost.Summary.cshtml | | Content_Summary__BlogPost | Content-BlogPost.Summary.cshtml | | Content_Summary__Article | Content-Article.Summary.cshtml | | Content_Summary__Article | Content-Article.Summary.cshtml | Widget templates \u5c0f\u90e8\u4ef6\u6a21\u677f Widget__[ContentType] \u7684widget __ [ContentType\u7684] This template is called when a widget is rendered on a page. \u5728\u9875\u9762\u4e0a\u5448\u73b0\u7a97\u53e3\u5c0f\u90e8\u4ef6\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Widget__Paragraph | Widget-Paragraph.cshtml | | Widget__Paragraph | Widget-Paragraph.cshtml | | Widget__Blockquote | Widget-Blockquote.cshtml | | Widget__Blockquote | Widget-Blockquote.cshtml | Available properties \u53ef\u7528\u7684\u5c5e\u6027 | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.Content | A zone shape that contains all the shapes generated by the widget's parts and fields. | | Model.Content |\u533a\u57df\u5f62\u72b6\uff0c\u5305\u542b\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u90e8\u4ef6\u548c\u5b57\u6bb5\u751f\u6210\u7684\u6240\u6709\u5f62\u72b6\u3002 | | Model.ContentItem | Represents the current content item being rendered by the template. | | Model.ContentItem |\u8868\u793a\u6a21\u677f\u5448\u73b0\u7684\u5f53\u524d\u5185\u5bb9\u9879\u3002 | | Model.ContentItem.Content | A Json object containing all the data of the content item. | | Model.ContentItem.Content |\u5305\u542b\u5185\u5bb9\u9879\u7684\u6240\u6709\u6570\u636e\u7684Json\u5bf9\u8c61\u3002 | | Model.Classes | An array of all the classes attached to the widget. | | Model.Classes |\u9644\u52a0\u5230\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u6240\u6709\u7c7b\u7684\u6570\u7ec4\u3002 | Content Part templates \u5185\u5bb9\u90e8\u5206\u6a21\u677f Each driver is free to return a shape type of its choosing, but the usage is \u6bcf\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u81ea\u7531\u8fd4\u56de\u5176\u9009\u62e9\u7684\u5f62\u72b6\u7c7b\u578b\uff0c\u4f46\u7528\u6cd5\u662f to render a content part using a shape with a name that matches the type name. \u4f7f\u7528\u540d\u79f0\u4e0e\u7c7b\u578b\u540d\u79f0\u5339\u914d\u7684\u5f62\u72b6\u5448\u73b0\u5185\u5bb9\u90e8\u4ef6\u3002 For instance the HtmlBodyPart content part will return a single shape of type HtmlBodyPart , but the ListPart returns many \u4f8b\u5982\uff0c HtmlBodyPart \u5185\u5bb9\u90e8\u5206\u5c06\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b\u4e3a HtmlBodyPart \u7684\u5f62\u72b6\uff0c\u4f46 ListPart \u8fd4\u56de\u8bb8\u591a shapes, one among them being ListPart . \u5f62\u72b6\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f ListPart \u3002 As a consequence the following list of templates use the [ShapeType] term where \u56e0\u6b64\uff0c\u4ee5\u4e0b\u6a21\u677f\u5217\u8868\u4f7f\u7528 [ShapeType] \u672f\u8bedwhere most of the time it will be equal to the name of the content part. The examples use \u5927\u90e8\u5206\u65f6\u95f4\u5b83\u5c06\u7b49\u4e8e\u5185\u5bb9\u90e8\u5206\u7684\u540d\u79f0\u3002\u8fd9\u4e9b\u4f8b\u5b50\u4f7f\u7528 common content part names for this reason. \u56e0\u6b64\uff0c\u5171\u540c\u5185\u5bb9\u90e8\u5206\u540d\u79f0\u3002 Properties \u5c5e\u6027 The properties available on a shape rendered for a content part are unique for each content \u4e3a\u5185\u5bb9\u90e8\u4ef6\u5448\u73b0\u7684\u5f62\u72b6\u4e0a\u53ef\u7528\u7684\u5c5e\u6027\u5bf9\u4e8e\u6bcf\u4e2a\u5185\u5bb9\u90fd\u662f\u552f\u4e00\u7684 part. Please refer to each content part documentation. \u90e8\u5206\u3002\u8bf7\u53c2\u9605\u6bcf\u4e2a\u5185\u5bb9\u90e8\u5206\u6587\u6863\u3002 [ShapeType] [ShapeType] This template is called when a Content Part is rendered. \u5448\u73b0\u5185\u5bb9\u90e8\u4ef6\u65f6\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | HtmlBodyPart | HtmlBodyPart.cshtml | | HtmlBodyPart | HtmlBodyPart.cshtml | | ListPartFeed | ListPartFeed.cshtml | | ListPartFeed | ListPartFeed.cshtml | [ShapeType]_[DisplayType] [ShapeType] _ [\u663e\u793a\u7c7b\u578b] This template is called when a Content Part shape type is rendered in a specific display type. \u5728\u7279\u5b9a\u663e\u793a\u7c7b\u578b\u4e2d\u5448\u73b0\u5185\u5bb9\u90e8\u4ef6\u5f62\u72b6\u7c7b\u578b\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | HtmlBodyPart_Summary | HtmlBodyPart.Summary.cshtml | | HtmlBodyPart_Summary | HtmlBodyPart.Summary.cshtml | [ContentType]_[DisplayType]__[PartType] [ContentType\u7684] _ [\u663e\u793a\u7c7b\u578b] __ [PartType] This template is called when a content part type is rendered for a given content type, with or without a given display type. \u5728\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u90e8\u4ef6\u7c7b\u578b\u65f6\u8c03\u7528\u6b64\u6a21\u677f\uff0c\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u7684\u663e\u793a\u7c7b\u578b\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__HtmlBodyPart | Blog-HtmlBodyPart.cshtml | | Blog__HtmlBodyPart | Blog-HtmlBodyPart.cshtml | | LandingPage__BagPart | LandingPage-BagPart.cshtml | | LandingPage__BagPart | LandingPage-BagPart.cshtml | | Blog_Summary__HtmlBodyPart | Blog-HtmlBodyPart.Summary.cshtml | | Blog_Summary__HtmlBodyPart | Blog-HtmlBodyPart.Summary.cshtml | | LandingPage_Summary__BagPart | LandingPage-BagPart.Summary.cshtml | | LandingPage_Summary__BagPart | LandingPage-BagPart.Summary.cshtml | [ContentType]``_[DisplayType]__[PartName] [ContentType\u7684]``_ [\u663e\u793a\u7c7b\u578b] __ [\u96f6\u4ef6\u540d\u79f0] This template is called when a content part name is rendered for a given content type, with or without a given display type. \u5728\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u90e8\u4ef6\u540d\u79f0\u65f6\uff0c\u65e0\u8bba\u662f\u5426\u5177\u6709\u7ed9\u5b9a\u7684\u663e\u793a\u7c7b\u578b\uff0c\u90fd\u4f1a\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | LandingPage__Services | LandingPage-Services.cshtml | | LandingPage__Services | LandingPage-Services.cshtml | | LandingPage_Summary__Services | LandingPage-Services.Summary.cshtml | | LandingPage_Summary__Services | LandingPage-Services.Summary.cshtml | [ContentType]_[DisplayType]__[PartType]__[ShapeType] [ContentType\u7684] _ [\u663e\u793a\u7c7b\u578b] __ [PartType] __ [ShapeType] This template is called when a shape type is rendered in a given content part type for a given content type, with or without a given display type. \u5728\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u7684\u7ed9\u5b9a\u5185\u5bb9\u90e8\u4ef6\u7c7b\u578b\u4e2d\u5448\u73b0\u5f62\u72b6\u7c7b\u578b\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__ListPart__ListPartFeed | Blog__ListPart__ListPartFeed.cshtml | | Blog__ListPart__ListPartFeed | Blog__ListPart__ListPartFeed.cshtml | | Blog_Summary__ListPart__ListPartFeed | Blog__ListPart__ListPartFeed.Summary.cshtml | | Blog_Summary__ListPart__ListPartFeed | Blog__ListPart__ListPartFeed.Summary.cshtml | [ContentType]_[DisplayType]__[PartName]__[ShapeType] [ContentType\u7684] _ [\u663e\u793a\u7c7b\u578b] __ [\u96f6\u4ef6\u540d\u79f0] __ [ShapeType] This template is called when a shape type is rendered in a given content part name for a given content type, with or without a given display type. \u5728\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u7684\u7ed9\u5b9a\u5185\u5bb9\u90e8\u4ef6\u540d\u79f0\u4e2d\u5448\u73b0\u5f62\u72b6\u7c7b\u578b\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | LandingPage__Services__CustomShape | LandingPage-Services-CustomShape.cshtml | | LandingPage__Services__CustomShape | LandingPage-Services-CustomShape.cshtml | | LandingPage_Summary__Services__CustomShape | LandingPage-Services-CustomShape.Summary.cshtml | | LandingPage_Summary__Services__CustomShape | LandingPage-Services-CustomShape.Summary.cshtml | Content Field templates \u5185\u5bb9\u5b57\u6bb5\u6a21\u677f Each driver is free to return a shape type of its choosing but the usage is \u6bcf\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u81ea\u7531\u8fd4\u56de\u5176\u9009\u62e9\u7684\u5f62\u72b6\u7c7b\u578b\uff0c\u4f46\u7528\u9014\u662f to render a content field using a shape with the same type name. \u4f7f\u7528\u5177\u6709\u76f8\u540c\u7c7b\u578b\u540d\u79f0\u7684\u5f62\u72b6\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u3002 For instance the TextField content field will return a single shape of type TextField , \u4f8b\u5982\uff0c TextField \u5185\u5bb9\u5b57\u6bb5\u5c06\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b\u4e3a TextField \u7684\u5f62\u72b6\uff0c but other fields might return many shapes. \u4f46\u5176\u4ed6\u9886\u57df\u53ef\u80fd\u4f1a\u8fd4\u56de\u8bb8\u591a\u5f62\u72b6\u3002 Properties \u5c5e\u6027 The properties available on a shape rendered for a content field are unique for each content \u4e3a\u5185\u5bb9\u5b57\u6bb5\u5448\u73b0\u7684\u5f62\u72b6\u4e0a\u53ef\u7528\u7684\u5c5e\u6027\u5bf9\u4e8e\u6bcf\u4e2a\u5185\u5bb9\u90fd\u662f\u552f\u4e00\u7684 field. Please refer to each content field documentation. \u9886\u57df\u3002\u8bf7\u53c2\u9605\u6bcf\u4e2a\u5185\u5bb9\u5b57\u6bb5\u6587\u6863\u3002 [ShapeType]_[DisplayType] [ShapeType] _ [\u663e\u793a\u7c7b\u578b] This template is called when a content field type is rendered in given display type. \u5728\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\u4e2d\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u7c7b\u578b\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | TextField_Summary | TextField.Summary.cshtml | | TextField_Summary | TextField.Summary.cshtml | [PartType]__[FieldName] [PartType] __ [\u5b57\u6bb5\u540d] This template is called when a content field name is rendered for a given content part type when the shape type matches the field type, with or without a given display type. \u5f53\u5f62\u72b6\u7c7b\u578b\u4e0e\u5b57\u6bb5\u7c7b\u578b\u5339\u914d\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u90e8\u4ef6\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | HtmlBodyPart__Description | HtmlBodyPart-Description.cshtml | | HtmlBodyPart__Description | HtmlBodyPart-Description.cshtml | | HtmlBodyPart_Summary__Description | HtmlBodyPart-Description.Summary.cshtml | | HtmlBodyPart_Summary__Description | HtmlBodyPart-Description.Summary.cshtml | [ContentType]__[PartName]__[FieldName] [ContentType\u7684] __ [\u96f6\u4ef6\u540d\u79f0] __ [\u5b57\u6bb5\u540d] This template is called when a content field name is rendered for a given content type and content part name when the shape type matches the field type, with or without a given display type. \u5f53\u5f62\u72b6\u7c7b\u578b\u4e0e\u5b57\u6bb5\u7c7b\u578b\u5339\u914d\u65f6\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u548c\u5185\u5bb9\u90e8\u4ef6\u540d\u79f0\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\uff0c\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u7684\u663e\u793a\u7c7b\u578b\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__HtmlBodyPart__Description | Blog-HtmlBodyPart-Description.cshtml | | Blog__HtmlBodyPart__Description | Blog-HtmlBodyPart-Description.cshtml | | LandingPage__Services__Image | LandingPage-Services-Image.cshtml | | LandingPage__Services__Image | LandingPage-Services-Image.cshtml | | Blog_Summary__HtmlBodyPart__Description | Blog-HtmlBodyPart-Description.Summary.cshtml | | Blog_Summary__HtmlBodyPart__Description | Blog-HtmlBodyPart-Description.Summary.cshtml | | LandingPage_Summary__Services__Image | LandingPage-Services-Image.Summary.cshtml | | LandingPage_Summary__Services__Image | LandingPage-Services-Image.Summary.cshtml | [ContentType]__[FieldType] [ContentType\u7684] __ [\u7684FieldType] This template is called when a content field type is rendered for a given content type when the shape type matches the field type, with or without a given display type. \u5f53\u5f62\u72b6\u7c7b\u578b\u4e0e\u5b57\u6bb5\u7c7b\u578b\u5339\u914d\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u7c7b\u578b\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__TextField | Blog-TextField.cshtml | | Blog__TextField | Blog-TextField.cshtml | | LandingPage__TextField | LandingPage-TextField.cshtml | | LandingPage__TextField | LandingPage-TextField.cshtml | [FieldType]__[ShapeType] [\u7684FieldType] __ [ShapeType] This template is called when a content field shape type is rendered for a given content field type, with or without a given display type. \u5f53\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u5b57\u6bb5\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u5f62\u72b6\u7c7b\u578b\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | CustomField__CustomFieldSummary | CustomField-CustomFieldSummary.cshtml | | CustomField__CustomFieldSummary | CustomField-CustomFieldSummary.cshtml | | CustomField_Summary__CustomFieldSummary | CustomField-CustomFieldSummary.Summary.cshtml | | CustomField_Summary__CustomFieldSummary | CustomField-CustomFieldSummary.Summary.cshtml | [PartType]__[FieldName]__[ShapeType] [PartType] __ [\u5b57\u6bb5\u540d] __ [ShapeType] This template is called when a content field shape type is rendered for a given content field name in a given content part type, with or without a given display type. \u5f53\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u90e8\u4ef6\u7c7b\u578b\u4e2d\u7684\u7ed9\u5b9a\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u5f62\u72b6\u7c7b\u578b\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | HtmlBodyPart__Description__CustomFieldSummary | HtmlBodyPart__Description__CustomFieldSummary.cshtml | | HtmlBodyPart__Description__CustomFieldSummary | HtmlBodyPart__Description__CustomFieldSummary.cshtml | | HtmlBodyPart_Summary__Description__CustomFieldSummary | HtmlBodyPart__Description__CustomFieldSummary.Summary.cshtml | | HtmlBodyPart_Summary__Description__CustomFieldSummary | HtmlBodyPart__Description__CustomFieldSummary.Summary.cshtml | [ContentType]__[PartName]__[FieldName]__[ShapeType] [ContentType\u7684] __ [\u96f6\u4ef6\u540d\u79f0] __ [\u5b57\u6bb5\u540d] __ [ShapeType] This template is called when a content field shape type is rendered for a given content field name in a given content part name in a given content type, with or without a given display type. \u5f53\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u4e2d\u7ed9\u5b9a\u5185\u5bb9\u90e8\u5206\u540d\u79f0\u4e2d\u7684\u7ed9\u5b9a\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u5f62\u72b6\u7c7b\u578b\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__HtmlBodyPart__Description__CustomFieldSummary | Blog-HtmlBodyPart-Description-CustomFieldSummary.cshtml | | Blog__HtmlBodyPart__Description__CustomFieldSummary | Blog-HtmlBodyPart-Description-CustomFieldSummary.cshtml | | LandingPage__Services__Description__CustomFieldSummary | LandingPage-Services-Description-CustomFieldSummary.cshtml | | LandingPage__Services__Description__CustomFieldSummary | LandingPage-Services-Description-CustomFieldSummary.cshtml | | Blog_Summary__HtmlBodyPart__Description__CustomFieldSummary | Blog-HtmlBodyPart-Description-CustomFieldSummary.Summary.cshtml | | Blog_Summary__HtmlBodyPart__Description__CustomFieldSummary | Blog-HtmlBodyPart-Description-CustomFieldSummary.Summary.cshtml | | LandingPage_Summary__Services__Description__CustomFieldSummary | LandingPage-Services-Description-CustomFieldSummary.Summary.cshtml | | LandingPage_Summary__Services__Description__CustomFieldSummary | LandingPage-Services-Description-CustomFieldSummary.Summary.cshtml | [ContentType]__[FieldType]__[ShapeType] [ContentType\u7684] __ [\u7684FieldType] __ [ShapeType] This template is called when a content field shape type is rendered for a given content field type in a given content type, with or without a given display type. \u5f53\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u4e2d\u7684\u7ed9\u5b9a\u5185\u5bb9\u5b57\u6bb5\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u5f62\u72b6\u7c7b\u578b\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 Examples \u4f8b\u5b50 | Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__TextField__TextFieldSummary | Blog-TextField-TextFieldSummary.cshtml | | Blog__TextField__TextFieldSummary | Blog-TextField-TextFieldSummary.cshtml | | LandingPage__TextField__TextFieldSummary | LandingPage-TextField-TextFieldSummary.cshtml | | LandingPage__TextField__TextFieldSummary | LandingPage-TextField-TextFieldSummary.cshtml | Shape differentiators \u5f62\u72b6\u5dee\u5f02\u5316 The differentiator uniquely identifies a shape in a zone. When rendering a content item, the shape has a Content property that contains \u5fae\u5206\u5668\u552f\u4e00\u5730\u6807\u8bc6\u533a\u57df\u4e2d\u7684\u5f62\u72b6\u3002\u6e32\u67d3\u5185\u5bb9\u9879\u65f6\uff0c\u5f62\u72b6\u5177\u6709\u5305\u542b\u7684\u201cContent\u201d\u5c5e\u6027 all the shapes provided by content display drivers, including the ones for content parts and content fields. \u5185\u5bb9\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u7684\u6240\u6709\u5f62\u72b6\uff0c\u5305\u62ec\u5185\u5bb9\u90e8\u5206\u548c\u5185\u5bb9\u5b57\u6bb5\u7684\u5f62\u72b6\u3002 Differentiators can be used to configure the placement information (c.f. Placement documentation page ), or to access specific shapes in a zone using these template helpers: \u5fae\u5206\u5668\u53ef\u7528\u4e8e\u914d\u7f6e\u653e\u7f6e\u4fe1\u606f\uff08c.f\u3002[\u653e\u7f6e\u6587\u6863\u9875\u9762]\uff08../../ OrchardCore / OrchardCore.DisplayManagement / README\uff09\uff09\uff0c\u6216\u4f7f\u7528\u8fd9\u4e9b\u6a21\u677f\u52a9\u624b\u8bbf\u95ee\u533a\u57df\u4e2d\u7684\u7279\u5b9a\u5f62\u72b6\uff1a Content Part differentiator \u5185\u5bb9\u90e8\u5206\u5dee\u5f02\u5316 If the shape type is the same as the content part name, the shape will be named [PartName] , e.g. HtmlBodyPart , Services . \u5982\u679c\u5f62\u72b6\u7c7b\u578b\u4e0e\u5185\u5bb9\u90e8\u5206\u540d\u79f0\u76f8\u540c\uff0c\u5219\u5f62\u72b6\u5c06\u547d\u540d\u4e3a\u201c[PartName]\u201d\uff0c\u4f8b\u5982 HtmlBodyPart \uff0c Services \u3002 If the shape type is different than the content part name, it will be [PartName]-[ShapeType] , e.g. ListPart-ListPartFeed \u5982\u679c\u5f62\u72b6\u7c7b\u578b\u4e0e\u5185\u5bb9\u90e8\u5206\u540d\u79f0\u4e0d\u540c\uff0c\u5219\u5b83\u5c06\u662f\u201c[PartName] - [ShapeType]\u201d\uff0c\u4f8b\u5982 ListPart-ListPartFeed Content Field differentiator \u5185\u5bb9\u9886\u57df\u5dee\u5f02\u5316 If the shape type is the same as the content field name, the shape will be named [PartName]-[FieldName] , e.g. HtmlBodyPart-Description , Services-Image . \u5982\u679c\u5f62\u72b6\u7c7b\u578b\u4e0e\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\u76f8\u540c\uff0c\u5219\u5f62\u72b6\u5c06\u547d\u540d\u4e3a\u201c[PartName] - [FieldName] \uff0c\u4f8b\u5982\uff0c HtmlBodyPart-Description \uff0c Services-Image`\u3002 If the shape type is different than the content field name, it will be [PartName]-[FieldName]-[ShapeType] , e.g. HtmlBodyPart-Description-CustomFieldSummary , Services-Image-ImageFieldSummary \u5982\u679c\u5f62\u72b6\u7c7b\u578b\u4e0e\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\u4e0d\u540c\uff0c\u5219\u5b83\u5c06\u662f\u201c[PartName] - [FieldName] - [ShapeType]\u201d\uff0c\u4f8b\u5982 HtmlBodyPart-Description-CustomFieldSummary \uff0c Services-Image-ImageFieldSummary Razor \u5243\u5200 Access a specific shape by name \u6309\u540d\u79f0\u8bbf\u95ee\u7279\u5b9a\u5f62\u72b6 Model.Content.HtmlBodyPart <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">Model.Content.HtmlBodyPart</font> Removing a specific shape by name \u6309\u540d\u79f0\u5220\u9664\u7279\u5b9a\u5f62\u72b6 Model.Content.Remove(\"HtmlBodyPart\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">Model.Content.Remove\uff08 \u201cHtmlBodyPart\u201d\uff09;</font> Liquid \u6db2\u4f53 Display a shape after removing a specific shape by name \u6309\u540d\u79f0\u5220\u9664\u7279\u5b9a\u5f62\u72b6\u540e\u663e\u793a\u5f62\u72b6 {% shape_remove_item Model.Content \"HtmlBodyPart\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_remove_item Model.Content\u201cHtmlBodyPart\u201d\uff05}</font> {{ Model.Content | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content | shape_render}}</font> Display a specific shape by name \u6309\u540d\u79f0\u663e\u793a\u7279\u5b9a\u5f62\u72b6 {{ Model.Content.HtmlBodyPart | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content.HtmlBodyPart | shape_render}}</font> To access or render the shapes for a field that is added to the content type directly, the [PartName] is equal to the content type. \u8981\u8bbf\u95ee\u6216\u5448\u73b0\u76f4\u63a5\u6dfb\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u7684\u5b57\u6bb5\u7684\u5f62\u72b6\uff0c [PartName] \u7b49\u4e8e\u5185\u5bb9\u7c7b\u578b\u3002 For instance, given a content type Article with a Text field named Description , the shapes for this field would be named \"Article-Description\" . Render these shapes in Liquid would be: \u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u5e26\u6709\u540d\u4e3a Description \u7684Text\u5b57\u6bb5\u7684\u5185\u5bb9\u7c7b\u578b Article \uff0c\u8be5\u5b57\u6bb5\u7684\u5f62\u72b6\u5c06\u88ab\u547d\u540d\u4e3a \u201cArticle-Description\u201d \u3002\u5728Liquid\u4e2d\u6e32\u67d3\u8fd9\u4e9b\u5f62\u72b6\u5c06\u662f\uff1a {{ Model.Content[\"Article-Description\"] | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content [\u201cArticle-Description\u201d] | shape_render}}</font> In this example the indexer syntax is necessary as the name of the differentiator is not compatible with Liquid language. \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u7d22\u5f15\u5668\u8bed\u6cd5\u662f\u5fc5\u9700\u7684\uff0c\u56e0\u4e3a\u5fae\u5206\u5668\u7684\u540d\u79f0\u4e0eLiquid\u8bed\u8a00\u4e0d\u517c\u5bb9\u3002 Instead of rendering the shape directly, you can also access its properties. In the case of a text field you have access to the Field property which has a Text property. \u60a8\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5176\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u6e32\u67d3\u5f62\u72b6\u3002\u5728\u6587\u672c\u5b57\u6bb5\u7684\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee\u5177\u6709\u201cText\u201d\u5c5e\u6027\u7684 Field \u5c5e\u6027\u3002 {{ Model.Content[\"Article-Description\"].Field.Text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content [\u201cArticle-Description\u201d]\u3002Field.Text}}</font>","title":"Templates"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#templates-orchardcoretemplates","text":"","title":"Templates (OrchardCore.Templates)"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#orchardcoretemplates","text":"The templates module allows editors to create custom Liquid templates. \u6a21\u677f\u6a21\u5757\u5141\u8bb8\u7f16\u8f91\u8005\u521b\u5efa\u81ea\u5b9a\u4e49Liquid\u6a21\u677f\u3002","title":"\u6a21\u677f\uff08OrchardCore.Templates\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#available-templates","text":"","title":"Available templates"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_1","text":"Templates can be defined using the web editor, or in a theme. Templates are distinguished by their name. \u53ef\u4ee5\u4f7f\u7528Web\u7f16\u8f91\u5668\u6216\u4e3b\u9898\u5b9a\u4e49\u6a21\u677f\u3002\u6a21\u677f\u4ee5\u5176\u540d\u79f0\u533a\u5206\u3002 Orchard Core doesn't render HTML directly, but instead will usually render something called a Shape , which is an object that represents Orchard Core\u4e0d\u76f4\u63a5\u5448\u73b0HTML\uff0c\u800c\u662f\u901a\u5e38\u4f1a\u5448\u73b0\u4e00\u4e2a\u540d\u4e3a Shape \u7684\u4e1c\u897f\uff0c\u5b83\u662f\u4e00\u4e2a\u4ee3\u8868\u7684\u5bf9\u8c61 the thing to render and has all the necessary data and metatada to render HTML. \u8981\u5448\u73b0\u7684\u4e1c\u897f\uff0c\u5e76\u5177\u6709\u5448\u73b0HTML\u7684\u6240\u6709\u5fc5\u8981\u6570\u636e\u548c\u5143\u6570\u636e\u3002 When rendering a Shape, Orchard Core will look for specific templates, passing the Shape to this template. \u6e32\u67d3Shape\u65f6\uff0cOrchard Core\u5c06\u67e5\u627e\u7279\u5b9a\u6a21\u677f\uff0c\u5c06Shape\u4f20\u9012\u7ed9\u6b64\u6a21\u677f\u3002 Orchard Core can match with many templates for the same Shape. Orchard Core\u53ef\u4ee5\u5339\u914d\u76f8\u540cShape\u7684\u8bb8\u591a\u6a21\u677f\u3002 These potential templates are called Alternates . \u8fd9\u4e9b\u6f5c\u5728\u7684\u6a21\u677f\u79f0\u4e3a Alternates \u3002 A Shape contains a list of acceptable template names (the alternates) and will look into providers to get the most appropriate one. Shape\u5305\u542b\u53ef\u63a5\u53d7\u7684\u6a21\u677f\u540d\u79f0\u5217\u8868\uff08\u66ff\u6362\u9879\uff09\uff0c\u5e76\u5c06\u67e5\u627e\u63d0\u4f9b\u7a0b\u5e8f\u4ee5\u83b7\u53d6\u6700\u5408\u9002\u7684\u6a21\u677f\u540d\u79f0\u3002 For instance, when rendering a Content Item of type Article, the corresponding Shape that is rendered will be configured \u4f8b\u5982\uff0c\u5728\u5448\u73b0Article\u7c7b\u578b\u7684Content Item\u65f6\uff0c\u5c06\u914d\u7f6e\u6e32\u67d3\u7684\u76f8\u5e94Shape to look for a template that handles all articles, but also one that handles an article when used in a list, and so on. \u67e5\u627e\u5904\u7406\u6240\u6709\u6587\u7ae0\u7684\u6a21\u677f\uff0c\u4ee5\u53ca\u5728\u5217\u8868\u4e2d\u4f7f\u7528\u65f6\u5904\u7406\u6587\u7ae0\u7684\u6a21\u677f\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 This document provides a list of pre-defined templates that can be used when rendering shapes. \u672c\u6587\u6863\u63d0\u4f9b\u4e86\u5728\u6e32\u67d3\u5f62\u72b6\u65f6\u53ef\u4ee5\u4f7f\u7528\u7684\u9884\u5b9a\u4e49\u6a21\u677f\u5217\u8868\u3002 It uses the internal name of a template and also the filename in case it's provided by a Theme. \u5b83\u4f7f\u7528\u6a21\u677f\u7684\u5185\u90e8\u540d\u79f0\u4ee5\u53ca\u6587\u4ef6\u540d\uff0c\u4ee5\u9632\u4e3b\u9898\u63d0\u4f9b\u3002","title":"\u53ef\u7528\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#content-templates","text":"","title":"Content templates"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_2","text":"","title":"\u5185\u5bb9\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#content__contenttype","text":"","title":"Content__[ContentType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#__-contenttype","text":"This template is called when displaying a content item with the Detail display type, for instance when accessed from its own URL. \u5f53\u663e\u793a\u5177\u6709\u201cDetail\u201d\u663e\u793a\u7c7b\u578b\u7684\u5185\u5bb9\u9879\u65f6\uff0c\u4f8b\u5982\u5f53\u4ece\u5176\u81ea\u5df1\u7684URL\u8bbf\u95ee\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"\u5185\u5bb9__ [ContentType\u7684]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_3","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Content__BlogPost | Content-BlogPost.cshtml | | Content__BlogPost | Content-BlogPost.cshtml | | Content__Article | Content-Article.cshtml | | Content__Article | Content-Article.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#available-properties","text":"","title":"Available properties"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_4","text":"| Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.Content | A zone shape that contains all the shapes generated by the content's parts and fields. | | Model.Content |\u5305\u542b\u5185\u5bb9\u90e8\u4ef6\u548c\u5b57\u6bb5\u751f\u6210\u7684\u6240\u6709\u5f62\u72b6\u7684\u533a\u57df\u5f62\u72b6\u3002 | | Model.ContentItem | Represents the current content item being rendered by the template. | | Model.ContentItem |\u8868\u793a\u6a21\u677f\u5448\u73b0\u7684\u5f53\u524d\u5185\u5bb9\u9879\u3002 | | Model.ContentItem.Content | A Json object containing all the data of the content item. | | Model.ContentItem.Content |\u5305\u542b\u5185\u5bb9\u9879\u7684\u6240\u6709\u6570\u636e\u7684Json\u5bf9\u8c61\u3002 |","title":"\u53ef\u7528\u7684\u5c5e\u6027"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#content_displaytype__contenttype","text":"","title":"Content_[DisplayType]__[ContentType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#content_-__-contenttype","text":"This template is called when displaying a content item with a specific display type. \u663e\u793a\u5177\u6709\u7279\u5b9a\u663e\u793a\u7c7b\u578b\u7684\u5185\u5bb9\u9879\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002 For instance, when a content item is displayed in a list, the Summary display type is commonly used. \u4f8b\u5982\uff0c\u5f53\u5728\u5217\u8868\u4e2d\u663e\u793a\u5185\u5bb9\u9879\u65f6\uff0c\u901a\u5e38\u4f7f\u7528\u201c\u6458\u8981\u201d\u663e\u793a\u7c7b\u578b\u3002","title":"Content_ [\u663e\u793a\u7c7b\u578b] __ [ContentType\u7684]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_1","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_5","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Content_Summary__BlogPost | Content-BlogPost.Summary.cshtml | | Content_Summary__BlogPost | Content-BlogPost.Summary.cshtml | | Content_Summary__Article | Content-Article.Summary.cshtml | | Content_Summary__Article | Content-Article.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#widget-templates","text":"","title":"Widget templates"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_6","text":"","title":"\u5c0f\u90e8\u4ef6\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#widget__contenttype","text":"","title":"Widget__[ContentType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#widget-__-contenttype","text":"This template is called when a widget is rendered on a page. \u5728\u9875\u9762\u4e0a\u5448\u73b0\u7a97\u53e3\u5c0f\u90e8\u4ef6\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"\u7684widget __ [ContentType\u7684]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_2","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_7","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Widget__Paragraph | Widget-Paragraph.cshtml | | Widget__Paragraph | Widget-Paragraph.cshtml | | Widget__Blockquote | Widget-Blockquote.cshtml | | Widget__Blockquote | Widget-Blockquote.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#available-properties_1","text":"","title":"Available properties"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_8","text":"| Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.Content | A zone shape that contains all the shapes generated by the widget's parts and fields. | | Model.Content |\u533a\u57df\u5f62\u72b6\uff0c\u5305\u542b\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u90e8\u4ef6\u548c\u5b57\u6bb5\u751f\u6210\u7684\u6240\u6709\u5f62\u72b6\u3002 | | Model.ContentItem | Represents the current content item being rendered by the template. | | Model.ContentItem |\u8868\u793a\u6a21\u677f\u5448\u73b0\u7684\u5f53\u524d\u5185\u5bb9\u9879\u3002 | | Model.ContentItem.Content | A Json object containing all the data of the content item. | | Model.ContentItem.Content |\u5305\u542b\u5185\u5bb9\u9879\u7684\u6240\u6709\u6570\u636e\u7684Json\u5bf9\u8c61\u3002 | | Model.Classes | An array of all the classes attached to the widget. | | Model.Classes |\u9644\u52a0\u5230\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u6240\u6709\u7c7b\u7684\u6570\u7ec4\u3002 |","title":"\u53ef\u7528\u7684\u5c5e\u6027"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#content-part-templates","text":"","title":"Content Part templates"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_9","text":"Each driver is free to return a shape type of its choosing, but the usage is \u6bcf\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u81ea\u7531\u8fd4\u56de\u5176\u9009\u62e9\u7684\u5f62\u72b6\u7c7b\u578b\uff0c\u4f46\u7528\u6cd5\u662f to render a content part using a shape with a name that matches the type name. \u4f7f\u7528\u540d\u79f0\u4e0e\u7c7b\u578b\u540d\u79f0\u5339\u914d\u7684\u5f62\u72b6\u5448\u73b0\u5185\u5bb9\u90e8\u4ef6\u3002 For instance the HtmlBodyPart content part will return a single shape of type HtmlBodyPart , but the ListPart returns many \u4f8b\u5982\uff0c HtmlBodyPart \u5185\u5bb9\u90e8\u5206\u5c06\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b\u4e3a HtmlBodyPart \u7684\u5f62\u72b6\uff0c\u4f46 ListPart \u8fd4\u56de\u8bb8\u591a shapes, one among them being ListPart . \u5f62\u72b6\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f ListPart \u3002 As a consequence the following list of templates use the [ShapeType] term where \u56e0\u6b64\uff0c\u4ee5\u4e0b\u6a21\u677f\u5217\u8868\u4f7f\u7528 [ShapeType] \u672f\u8bedwhere most of the time it will be equal to the name of the content part. The examples use \u5927\u90e8\u5206\u65f6\u95f4\u5b83\u5c06\u7b49\u4e8e\u5185\u5bb9\u90e8\u5206\u7684\u540d\u79f0\u3002\u8fd9\u4e9b\u4f8b\u5b50\u4f7f\u7528 common content part names for this reason. \u56e0\u6b64\uff0c\u5171\u540c\u5185\u5bb9\u90e8\u5206\u540d\u79f0\u3002","title":"\u5185\u5bb9\u90e8\u5206\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#properties","text":"","title":"Properties"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_10","text":"The properties available on a shape rendered for a content part are unique for each content \u4e3a\u5185\u5bb9\u90e8\u4ef6\u5448\u73b0\u7684\u5f62\u72b6\u4e0a\u53ef\u7528\u7684\u5c5e\u6027\u5bf9\u4e8e\u6bcf\u4e2a\u5185\u5bb9\u90fd\u662f\u552f\u4e00\u7684 part. Please refer to each content part documentation. \u90e8\u5206\u3002\u8bf7\u53c2\u9605\u6bcf\u4e2a\u5185\u5bb9\u90e8\u5206\u6587\u6863\u3002","title":"\u5c5e\u6027"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#shapetype","text":"","title":"[ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#shapetype_1","text":"This template is called when a Content Part is rendered. \u5448\u73b0\u5185\u5bb9\u90e8\u4ef6\u65f6\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_3","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_11","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | HtmlBodyPart | HtmlBodyPart.cshtml | | HtmlBodyPart | HtmlBodyPart.cshtml | | ListPartFeed | ListPartFeed.cshtml | | ListPartFeed | ListPartFeed.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#shapetype_displaytype","text":"","title":"[ShapeType]_[DisplayType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#shapetype-_","text":"This template is called when a Content Part shape type is rendered in a specific display type. \u5728\u7279\u5b9a\u663e\u793a\u7c7b\u578b\u4e2d\u5448\u73b0\u5185\u5bb9\u90e8\u4ef6\u5f62\u72b6\u7c7b\u578b\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[ShapeType] _ [\u663e\u793a\u7c7b\u578b]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_4","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_12","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | HtmlBodyPart_Summary | HtmlBodyPart.Summary.cshtml | | HtmlBodyPart_Summary | HtmlBodyPart.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype_displaytype__parttype","text":"","title":"[ContentType]_[DisplayType]__[PartType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype-_-__-parttype","text":"This template is called when a content part type is rendered for a given content type, with or without a given display type. \u5728\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u90e8\u4ef6\u7c7b\u578b\u65f6\u8c03\u7528\u6b64\u6a21\u677f\uff0c\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u7684\u663e\u793a\u7c7b\u578b\u3002","title":"[ContentType\u7684] _ [\u663e\u793a\u7c7b\u578b] __ [PartType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_5","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_13","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__HtmlBodyPart | Blog-HtmlBodyPart.cshtml | | Blog__HtmlBodyPart | Blog-HtmlBodyPart.cshtml | | LandingPage__BagPart | LandingPage-BagPart.cshtml | | LandingPage__BagPart | LandingPage-BagPart.cshtml | | Blog_Summary__HtmlBodyPart | Blog-HtmlBodyPart.Summary.cshtml | | Blog_Summary__HtmlBodyPart | Blog-HtmlBodyPart.Summary.cshtml | | LandingPage_Summary__BagPart | LandingPage-BagPart.Summary.cshtml | | LandingPage_Summary__BagPart | LandingPage-BagPart.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype_displaytype__partname","text":"","title":"[ContentType]``_[DisplayType]__[PartName]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype_-__","text":"This template is called when a content part name is rendered for a given content type, with or without a given display type. \u5728\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u90e8\u4ef6\u540d\u79f0\u65f6\uff0c\u65e0\u8bba\u662f\u5426\u5177\u6709\u7ed9\u5b9a\u7684\u663e\u793a\u7c7b\u578b\uff0c\u90fd\u4f1a\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[ContentType\u7684]``_ [\u663e\u793a\u7c7b\u578b] __ [\u96f6\u4ef6\u540d\u79f0]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_6","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_14","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | LandingPage__Services | LandingPage-Services.cshtml | | LandingPage__Services | LandingPage-Services.cshtml | | LandingPage_Summary__Services | LandingPage-Services.Summary.cshtml | | LandingPage_Summary__Services | LandingPage-Services.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype_displaytype__parttype__shapetype","text":"","title":"[ContentType]_[DisplayType]__[PartType]__[ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype-_-__-parttype-__-shapetype","text":"This template is called when a shape type is rendered in a given content part type for a given content type, with or without a given display type. \u5728\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u7684\u7ed9\u5b9a\u5185\u5bb9\u90e8\u4ef6\u7c7b\u578b\u4e2d\u5448\u73b0\u5f62\u72b6\u7c7b\u578b\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[ContentType\u7684] _ [\u663e\u793a\u7c7b\u578b] __ [PartType] __ [ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_7","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_15","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__ListPart__ListPartFeed | Blog__ListPart__ListPartFeed.cshtml | | Blog__ListPart__ListPartFeed | Blog__ListPart__ListPartFeed.cshtml | | Blog_Summary__ListPart__ListPartFeed | Blog__ListPart__ListPartFeed.Summary.cshtml | | Blog_Summary__ListPart__ListPartFeed | Blog__ListPart__ListPartFeed.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype_displaytype__partname__shapetype","text":"","title":"[ContentType]_[DisplayType]__[PartName]__[ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype-_-__-__-shapetype","text":"This template is called when a shape type is rendered in a given content part name for a given content type, with or without a given display type. \u5728\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u7684\u7ed9\u5b9a\u5185\u5bb9\u90e8\u4ef6\u540d\u79f0\u4e2d\u5448\u73b0\u5f62\u72b6\u7c7b\u578b\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[ContentType\u7684] _ [\u663e\u793a\u7c7b\u578b] __ [\u96f6\u4ef6\u540d\u79f0] __ [ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_8","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_16","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | LandingPage__Services__CustomShape | LandingPage-Services-CustomShape.cshtml | | LandingPage__Services__CustomShape | LandingPage-Services-CustomShape.cshtml | | LandingPage_Summary__Services__CustomShape | LandingPage-Services-CustomShape.Summary.cshtml | | LandingPage_Summary__Services__CustomShape | LandingPage-Services-CustomShape.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#content-field-templates","text":"","title":"Content Field templates"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_17","text":"Each driver is free to return a shape type of its choosing but the usage is \u6bcf\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u81ea\u7531\u8fd4\u56de\u5176\u9009\u62e9\u7684\u5f62\u72b6\u7c7b\u578b\uff0c\u4f46\u7528\u9014\u662f to render a content field using a shape with the same type name. \u4f7f\u7528\u5177\u6709\u76f8\u540c\u7c7b\u578b\u540d\u79f0\u7684\u5f62\u72b6\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u3002 For instance the TextField content field will return a single shape of type TextField , \u4f8b\u5982\uff0c TextField \u5185\u5bb9\u5b57\u6bb5\u5c06\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b\u4e3a TextField \u7684\u5f62\u72b6\uff0c but other fields might return many shapes. \u4f46\u5176\u4ed6\u9886\u57df\u53ef\u80fd\u4f1a\u8fd4\u56de\u8bb8\u591a\u5f62\u72b6\u3002","title":"\u5185\u5bb9\u5b57\u6bb5\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#properties_1","text":"","title":"Properties"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_18","text":"The properties available on a shape rendered for a content field are unique for each content \u4e3a\u5185\u5bb9\u5b57\u6bb5\u5448\u73b0\u7684\u5f62\u72b6\u4e0a\u53ef\u7528\u7684\u5c5e\u6027\u5bf9\u4e8e\u6bcf\u4e2a\u5185\u5bb9\u90fd\u662f\u552f\u4e00\u7684 field. Please refer to each content field documentation. \u9886\u57df\u3002\u8bf7\u53c2\u9605\u6bcf\u4e2a\u5185\u5bb9\u5b57\u6bb5\u6587\u6863\u3002","title":"\u5c5e\u6027"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#shapetype_displaytype_1","text":"","title":"[ShapeType]_[DisplayType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#shapetype-__1","text":"This template is called when a content field type is rendered in given display type. \u5728\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\u4e2d\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u7c7b\u578b\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[ShapeType] _ [\u663e\u793a\u7c7b\u578b]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_9","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_19","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | TextField_Summary | TextField.Summary.cshtml | | TextField_Summary | TextField.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#parttype__fieldname","text":"","title":"[PartType]__[FieldName]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#parttype-__","text":"This template is called when a content field name is rendered for a given content part type when the shape type matches the field type, with or without a given display type. \u5f53\u5f62\u72b6\u7c7b\u578b\u4e0e\u5b57\u6bb5\u7c7b\u578b\u5339\u914d\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u90e8\u4ef6\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[PartType] __ [\u5b57\u6bb5\u540d]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_10","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_20","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | HtmlBodyPart__Description | HtmlBodyPart-Description.cshtml | | HtmlBodyPart__Description | HtmlBodyPart-Description.cshtml | | HtmlBodyPart_Summary__Description | HtmlBodyPart-Description.Summary.cshtml | | HtmlBodyPart_Summary__Description | HtmlBodyPart-Description.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype__partname__fieldname","text":"","title":"[ContentType]__[PartName]__[FieldName]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype-__-__","text":"This template is called when a content field name is rendered for a given content type and content part name when the shape type matches the field type, with or without a given display type. \u5f53\u5f62\u72b6\u7c7b\u578b\u4e0e\u5b57\u6bb5\u7c7b\u578b\u5339\u914d\u65f6\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u548c\u5185\u5bb9\u90e8\u4ef6\u540d\u79f0\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\uff0c\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u7684\u663e\u793a\u7c7b\u578b\u3002","title":"[ContentType\u7684] __ [\u96f6\u4ef6\u540d\u79f0] __ [\u5b57\u6bb5\u540d]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_11","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_21","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__HtmlBodyPart__Description | Blog-HtmlBodyPart-Description.cshtml | | Blog__HtmlBodyPart__Description | Blog-HtmlBodyPart-Description.cshtml | | LandingPage__Services__Image | LandingPage-Services-Image.cshtml | | LandingPage__Services__Image | LandingPage-Services-Image.cshtml | | Blog_Summary__HtmlBodyPart__Description | Blog-HtmlBodyPart-Description.Summary.cshtml | | Blog_Summary__HtmlBodyPart__Description | Blog-HtmlBodyPart-Description.Summary.cshtml | | LandingPage_Summary__Services__Image | LandingPage-Services-Image.Summary.cshtml | | LandingPage_Summary__Services__Image | LandingPage-Services-Image.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype__fieldtype","text":"","title":"[ContentType]__[FieldType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype-__-fieldtype","text":"This template is called when a content field type is rendered for a given content type when the shape type matches the field type, with or without a given display type. \u5f53\u5f62\u72b6\u7c7b\u578b\u4e0e\u5b57\u6bb5\u7c7b\u578b\u5339\u914d\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u7c7b\u578b\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[ContentType\u7684] __ [\u7684FieldType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_12","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_22","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__TextField | Blog-TextField.cshtml | | Blog__TextField | Blog-TextField.cshtml | | LandingPage__TextField | LandingPage-TextField.cshtml | | LandingPage__TextField | LandingPage-TextField.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#fieldtype__shapetype","text":"","title":"[FieldType]__[ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#fieldtype-__-shapetype","text":"This template is called when a content field shape type is rendered for a given content field type, with or without a given display type. \u5f53\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u5b57\u6bb5\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u5f62\u72b6\u7c7b\u578b\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[\u7684FieldType] __ [ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_13","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_23","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | CustomField__CustomFieldSummary | CustomField-CustomFieldSummary.cshtml | | CustomField__CustomFieldSummary | CustomField-CustomFieldSummary.cshtml | | CustomField_Summary__CustomFieldSummary | CustomField-CustomFieldSummary.Summary.cshtml | | CustomField_Summary__CustomFieldSummary | CustomField-CustomFieldSummary.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#parttype__fieldname__shapetype","text":"","title":"[PartType]__[FieldName]__[ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#parttype-__-__-shapetype","text":"This template is called when a content field shape type is rendered for a given content field name in a given content part type, with or without a given display type. \u5f53\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u90e8\u4ef6\u7c7b\u578b\u4e2d\u7684\u7ed9\u5b9a\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u5f62\u72b6\u7c7b\u578b\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[PartType] __ [\u5b57\u6bb5\u540d] __ [ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_14","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_24","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | HtmlBodyPart__Description__CustomFieldSummary | HtmlBodyPart__Description__CustomFieldSummary.cshtml | | HtmlBodyPart__Description__CustomFieldSummary | HtmlBodyPart__Description__CustomFieldSummary.cshtml | | HtmlBodyPart_Summary__Description__CustomFieldSummary | HtmlBodyPart__Description__CustomFieldSummary.Summary.cshtml | | HtmlBodyPart_Summary__Description__CustomFieldSummary | HtmlBodyPart__Description__CustomFieldSummary.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype__partname__fieldname__shapetype","text":"","title":"[ContentType]__[PartName]__[FieldName]__[ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype-__-__-__-shapetype","text":"This template is called when a content field shape type is rendered for a given content field name in a given content part name in a given content type, with or without a given display type. \u5f53\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u4e2d\u7ed9\u5b9a\u5185\u5bb9\u90e8\u5206\u540d\u79f0\u4e2d\u7684\u7ed9\u5b9a\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u5f62\u72b6\u7c7b\u578b\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[ContentType\u7684] __ [\u96f6\u4ef6\u540d\u79f0] __ [\u5b57\u6bb5\u540d] __ [ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_15","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_25","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__HtmlBodyPart__Description__CustomFieldSummary | Blog-HtmlBodyPart-Description-CustomFieldSummary.cshtml | | Blog__HtmlBodyPart__Description__CustomFieldSummary | Blog-HtmlBodyPart-Description-CustomFieldSummary.cshtml | | LandingPage__Services__Description__CustomFieldSummary | LandingPage-Services-Description-CustomFieldSummary.cshtml | | LandingPage__Services__Description__CustomFieldSummary | LandingPage-Services-Description-CustomFieldSummary.cshtml | | Blog_Summary__HtmlBodyPart__Description__CustomFieldSummary | Blog-HtmlBodyPart-Description-CustomFieldSummary.Summary.cshtml | | Blog_Summary__HtmlBodyPart__Description__CustomFieldSummary | Blog-HtmlBodyPart-Description-CustomFieldSummary.Summary.cshtml | | LandingPage_Summary__Services__Description__CustomFieldSummary | LandingPage-Services-Description-CustomFieldSummary.Summary.cshtml | | LandingPage_Summary__Services__Description__CustomFieldSummary | LandingPage-Services-Description-CustomFieldSummary.Summary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype__fieldtype__shapetype","text":"","title":"[ContentType]__[FieldType]__[ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#contenttype-__-fieldtype-__-shapetype","text":"This template is called when a content field shape type is rendered for a given content field type in a given content type, with or without a given display type. \u5f53\u4e3a\u7ed9\u5b9a\u5185\u5bb9\u7c7b\u578b\u4e2d\u7684\u7ed9\u5b9a\u5185\u5bb9\u5b57\u6bb5\u7c7b\u578b\u5448\u73b0\u5185\u5bb9\u5b57\u6bb5\u5f62\u72b6\u7c7b\u578b\uff08\u5177\u6709\u6216\u4e0d\u5177\u6709\u7ed9\u5b9a\u663e\u793a\u7c7b\u578b\uff09\u65f6\uff0c\u5c06\u8c03\u7528\u6b64\u6a21\u677f\u3002","title":"[ContentType\u7684] __ [\u7684FieldType] __ [ShapeType]"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#examples_16","text":"","title":"Examples"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_26","text":"| Template | Filename| |\u6a21\u677f|\u6587\u4ef6\u540d| | --------- | ------------ | | --------- | ------------ | | Blog__TextField__TextFieldSummary | Blog-TextField-TextFieldSummary.cshtml | | Blog__TextField__TextFieldSummary | Blog-TextField-TextFieldSummary.cshtml | | LandingPage__TextField__TextFieldSummary | LandingPage-TextField-TextFieldSummary.cshtml | | LandingPage__TextField__TextFieldSummary | LandingPage-TextField-TextFieldSummary.cshtml |","title":"\u4f8b\u5b50"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#shape-differentiators","text":"","title":"Shape differentiators"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_27","text":"The differentiator uniquely identifies a shape in a zone. When rendering a content item, the shape has a Content property that contains \u5fae\u5206\u5668\u552f\u4e00\u5730\u6807\u8bc6\u533a\u57df\u4e2d\u7684\u5f62\u72b6\u3002\u6e32\u67d3\u5185\u5bb9\u9879\u65f6\uff0c\u5f62\u72b6\u5177\u6709\u5305\u542b\u7684\u201cContent\u201d\u5c5e\u6027 all the shapes provided by content display drivers, including the ones for content parts and content fields. \u5185\u5bb9\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u7684\u6240\u6709\u5f62\u72b6\uff0c\u5305\u62ec\u5185\u5bb9\u90e8\u5206\u548c\u5185\u5bb9\u5b57\u6bb5\u7684\u5f62\u72b6\u3002 Differentiators can be used to configure the placement information (c.f. Placement documentation page ), or to access specific shapes in a zone using these template helpers: \u5fae\u5206\u5668\u53ef\u7528\u4e8e\u914d\u7f6e\u653e\u7f6e\u4fe1\u606f\uff08c.f\u3002[\u653e\u7f6e\u6587\u6863\u9875\u9762]\uff08../../ OrchardCore / OrchardCore.DisplayManagement / README\uff09\uff09\uff0c\u6216\u4f7f\u7528\u8fd9\u4e9b\u6a21\u677f\u52a9\u624b\u8bbf\u95ee\u533a\u57df\u4e2d\u7684\u7279\u5b9a\u5f62\u72b6\uff1a","title":"\u5f62\u72b6\u5dee\u5f02\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#content-part-differentiator","text":"","title":"Content Part differentiator"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_28","text":"If the shape type is the same as the content part name, the shape will be named [PartName] , e.g. HtmlBodyPart , Services . \u5982\u679c\u5f62\u72b6\u7c7b\u578b\u4e0e\u5185\u5bb9\u90e8\u5206\u540d\u79f0\u76f8\u540c\uff0c\u5219\u5f62\u72b6\u5c06\u547d\u540d\u4e3a\u201c[PartName]\u201d\uff0c\u4f8b\u5982 HtmlBodyPart \uff0c Services \u3002 If the shape type is different than the content part name, it will be [PartName]-[ShapeType] , e.g. ListPart-ListPartFeed \u5982\u679c\u5f62\u72b6\u7c7b\u578b\u4e0e\u5185\u5bb9\u90e8\u5206\u540d\u79f0\u4e0d\u540c\uff0c\u5219\u5b83\u5c06\u662f\u201c[PartName] - [ShapeType]\u201d\uff0c\u4f8b\u5982 ListPart-ListPartFeed","title":"\u5185\u5bb9\u90e8\u5206\u5dee\u5f02\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#content-field-differentiator","text":"","title":"Content Field differentiator"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_29","text":"If the shape type is the same as the content field name, the shape will be named [PartName]-[FieldName] , e.g. HtmlBodyPart-Description , Services-Image . \u5982\u679c\u5f62\u72b6\u7c7b\u578b\u4e0e\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\u76f8\u540c\uff0c\u5219\u5f62\u72b6\u5c06\u547d\u540d\u4e3a\u201c[PartName] - [FieldName] \uff0c\u4f8b\u5982\uff0c HtmlBodyPart-Description \uff0c Services-Image`\u3002 If the shape type is different than the content field name, it will be [PartName]-[FieldName]-[ShapeType] , e.g. HtmlBodyPart-Description-CustomFieldSummary , Services-Image-ImageFieldSummary \u5982\u679c\u5f62\u72b6\u7c7b\u578b\u4e0e\u5185\u5bb9\u5b57\u6bb5\u540d\u79f0\u4e0d\u540c\uff0c\u5219\u5b83\u5c06\u662f\u201c[PartName] - [FieldName] - [ShapeType]\u201d\uff0c\u4f8b\u5982 HtmlBodyPart-Description-CustomFieldSummary \uff0c Services-Image-ImageFieldSummary","title":"\u5185\u5bb9\u9886\u57df\u5dee\u5f02\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#razor","text":"","title":"Razor"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_30","text":"Access a specific shape by name \u6309\u540d\u79f0\u8bbf\u95ee\u7279\u5b9a\u5f62\u72b6 Model.Content.HtmlBodyPart <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">Model.Content.HtmlBodyPart</font> Removing a specific shape by name \u6309\u540d\u79f0\u5220\u9664\u7279\u5b9a\u5f62\u72b6 Model.Content.Remove(\"HtmlBodyPart\"); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">Model.Content.Remove\uff08 \u201cHtmlBodyPart\u201d\uff09;</font>","title":"\u5243\u5200"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#liquid","text":"","title":"Liquid"},{"location":"OrchardCore.Modules/OrchardCore.Templates/#_31","text":"Display a shape after removing a specific shape by name \u6309\u540d\u79f0\u5220\u9664\u7279\u5b9a\u5f62\u72b6\u540e\u663e\u793a\u5f62\u72b6 {% shape_remove_item Model.Content \"HtmlBodyPart\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{\uff05shape_remove_item Model.Content\u201cHtmlBodyPart\u201d\uff05}</font> {{ Model.Content | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content | shape_render}}</font> Display a specific shape by name \u6309\u540d\u79f0\u663e\u793a\u7279\u5b9a\u5f62\u72b6 {{ Model.Content.HtmlBodyPart | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content.HtmlBodyPart | shape_render}}</font> To access or render the shapes for a field that is added to the content type directly, the [PartName] is equal to the content type. \u8981\u8bbf\u95ee\u6216\u5448\u73b0\u76f4\u63a5\u6dfb\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u7684\u5b57\u6bb5\u7684\u5f62\u72b6\uff0c [PartName] \u7b49\u4e8e\u5185\u5bb9\u7c7b\u578b\u3002 For instance, given a content type Article with a Text field named Description , the shapes for this field would be named \"Article-Description\" . Render these shapes in Liquid would be: \u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u5e26\u6709\u540d\u4e3a Description \u7684Text\u5b57\u6bb5\u7684\u5185\u5bb9\u7c7b\u578b Article \uff0c\u8be5\u5b57\u6bb5\u7684\u5f62\u72b6\u5c06\u88ab\u547d\u540d\u4e3a \u201cArticle-Description\u201d \u3002\u5728Liquid\u4e2d\u6e32\u67d3\u8fd9\u4e9b\u5f62\u72b6\u5c06\u662f\uff1a {{ Model.Content[\"Article-Description\"] | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content [\u201cArticle-Description\u201d] | shape_render}}</font> In this example the indexer syntax is necessary as the name of the differentiator is not compatible with Liquid language. \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u7d22\u5f15\u5668\u8bed\u6cd5\u662f\u5fc5\u9700\u7684\uff0c\u56e0\u4e3a\u5fae\u5206\u5668\u7684\u540d\u79f0\u4e0eLiquid\u8bed\u8a00\u4e0d\u517c\u5bb9\u3002 Instead of rendering the shape directly, you can also access its properties. In the case of a text field you have access to the Field property which has a Text property. \u60a8\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5176\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u6e32\u67d3\u5f62\u72b6\u3002\u5728\u6587\u672c\u5b57\u6bb5\u7684\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee\u5177\u6709\u201cText\u201d\u5c5e\u6027\u7684 Field \u5c5e\u6027\u3002 {{ Model.Content[\"Article-Description\"].Field.Text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content [\u201cArticle-Description\u201d]\u3002Field.Text}}</font>","title":"\u6db2\u4f53"},{"location":"OrchardCore.Modules/OrchardCore.Tenants/","text":"Tenants (OrchardCore.Tenants) \u79df\u6237\uff08OrchardCore.Tenants\uff09 The Tenants module allows to manage tenants. \u79df\u6237\u6a21\u5757\u5141\u8bb8\u7ba1\u7406\u79df\u6237\u3002 Static File Provider Feature \u9759\u6001\u6587\u4ef6\u63d0\u4f9b\u7a0b\u5e8f\u529f\u80fd This feature registers a file provider for each tenant in order to serve custom files \u6b64\u529f\u80fd\u4e3a\u6bcf\u4e2a\u79df\u6237\u6ce8\u518c\u6587\u4ef6\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u63d0\u4f9b\u81ea\u5b9a\u4e49\u6587\u4ef6 per tenant, even if they have the same names. \u6bcf\u4e2a\u79df\u6237\uff0c\u5373\u4f7f\u4ed6\u4eec\u6709\u76f8\u540c\u7684\u540d\u5b57\u3002 Once enabled on a tenant, a folder wwwroot is created in the App_Data folder. Any \u4e00\u65e6\u5728\u79df\u6237\u4e0a\u542f\u7528\uff0c\u5c31\u4f1a\u5728 App_Data \u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 wwwroot \u3002\u4efb\u4f55 file that is placed in this folder will be served under the same domain and prefix as \u653e\u7f6e\u5728\u6b64\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u5c06\u5728\u76f8\u540c\u7684\u57df\u548c\u524d\u7f00\u4e0b\u63d0\u4f9b the tenant. \u79df\u5ba2\u3002 Any static file that is placed in the content root folder of the website will be served \u5c06\u63d0\u4f9b\u653e\u7f6e\u5728\u7f51\u7ad9\u7684\u5185\u5bb9\u6839\u6587\u4ef6\u5939\u4e2d\u7684\u4efb\u4f55\u9759\u6001\u6587\u4ef6 first. \u7b2c\u4e00\u3002","title":"Tenants"},{"location":"OrchardCore.Modules/OrchardCore.Tenants/#tenants-orchardcoretenants","text":"","title":"Tenants (OrchardCore.Tenants)"},{"location":"OrchardCore.Modules/OrchardCore.Tenants/#orchardcoretenants","text":"The Tenants module allows to manage tenants. \u79df\u6237\u6a21\u5757\u5141\u8bb8\u7ba1\u7406\u79df\u6237\u3002","title":"\u79df\u6237\uff08OrchardCore.Tenants\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Tenants/#static-file-provider-feature","text":"","title":"Static File Provider Feature"},{"location":"OrchardCore.Modules/OrchardCore.Tenants/#_1","text":"This feature registers a file provider for each tenant in order to serve custom files \u6b64\u529f\u80fd\u4e3a\u6bcf\u4e2a\u79df\u6237\u6ce8\u518c\u6587\u4ef6\u63d0\u4f9b\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u63d0\u4f9b\u81ea\u5b9a\u4e49\u6587\u4ef6 per tenant, even if they have the same names. \u6bcf\u4e2a\u79df\u6237\uff0c\u5373\u4f7f\u4ed6\u4eec\u6709\u76f8\u540c\u7684\u540d\u5b57\u3002 Once enabled on a tenant, a folder wwwroot is created in the App_Data folder. Any \u4e00\u65e6\u5728\u79df\u6237\u4e0a\u542f\u7528\uff0c\u5c31\u4f1a\u5728 App_Data \u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 wwwroot \u3002\u4efb\u4f55 file that is placed in this folder will be served under the same domain and prefix as \u653e\u7f6e\u5728\u6b64\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u5c06\u5728\u76f8\u540c\u7684\u57df\u548c\u524d\u7f00\u4e0b\u63d0\u4f9b the tenant. \u79df\u5ba2\u3002 Any static file that is placed in the content root folder of the website will be served \u5c06\u63d0\u4f9b\u653e\u7f6e\u5728\u7f51\u7ad9\u7684\u5185\u5bb9\u6839\u6587\u4ef6\u5939\u4e2d\u7684\u4efb\u4f55\u9759\u6001\u6587\u4ef6 first. \u7b2c\u4e00\u3002","title":"\u9759\u6001\u6587\u4ef6\u63d0\u4f9b\u7a0b\u5e8f\u529f\u80fd"},{"location":"OrchardCore.Modules/OrchardCore.Themes/","text":"Orchard Core Theming explained Orchard Core Theming\u89e3\u91ca\u9053 This article explains how a Content Item is rendered, and the many ways in which the HTML that is rendered can be customized. \u672c\u6587\u4ecb\u7ecd\u4e86\u5982\u4f55\u5448\u73b0\u5185\u5bb9\u9879\uff0c\u4ee5\u53ca\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5448\u73b0\u7684HTML\u7684\u591a\u79cd\u65b9\u5f0f\u3002 It also explains the fundamental theming concepts, namely Shapes , Alternates , Templates , Differentiators , Content Zones and Display Types . \u5b83\u8fd8\u89e3\u91ca\u4e86\u57fa\u672c\u7684\u4e3b\u9898\u6982\u5ff5\uff0c\u5373__Shapes \uff0c Alternates \uff0c__Templates \uff0c _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ Goals \u76ee\u6807 Let's assume we want to add a portfolio section to our Blog where we could list all the projects we are working on, and be able to manage these projects individually, as opposed to having an static page where we would have to copy-paste the HTML for each project. \u5047\u8bbe\u6211\u4eec\u60f3\u5728\u6211\u4eec\u7684\u535a\u5ba2\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6295\u8d44\u7ec4\u5408\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u6211\u4eec\u6b63\u5728\u5904\u7406\u7684\u6240\u6709\u9879\u76ee\uff0c\u5e76\u4e14\u80fd\u591f\u5355\u72ec\u7ba1\u7406\u8fd9\u4e9b\u9879\u76ee\uff0c\u800c\u4e0d\u662f\u62e5\u6709\u4e00\u4e2a\u9759\u6001\u9875\u9762\uff0c\u6211\u4eec\u5fc5\u987b\u590d\u5236\u7c98\u8d34HTML\u4e3a\u6bcf\u4e2a\u9879\u76ee\u3002 The portfolio should have its own URL like /portfolio , and should display the projects in \u6295\u8d44\u7ec4\u5408\u5e94\u8be5\u6709\u81ea\u5df1\u7684URL\uff0c\u5982 / portfolio \uff0c\u5e76\u4e14\u5e94\u8be5\u663e\u793a\u9879\u76ee a predefined order. \u9884\u5b9a\u4e49\u7684\u8ba2\u5355\u3002 The end result would look like this: \u6700\u7ec8\u7ed3\u679c\u5982\u4e0b\uff1a Modeling the content \u5efa\u6a21\u5185\u5bb9 The only obvious thing that is required is to create a new Project content type. \u552f\u4e00\u663e\u800c\u6613\u89c1\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u201cProject\u201d\u5185\u5bb9\u7c7b\u578b\u3002 However there are many different ways to model the content to represent a portfolio: \u4f46\u662f\uff0c\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u5bf9\u5185\u5bb9\u8fdb\u884c\u5efa\u6a21\u4ee5\u8868\u793a\u6295\u8d44\u7ec4\u5408\uff1a Create a Portfolio content type with a List content part that is limited to Project content items. In this case, projects are independent from the list and can be reused elsewhere in the site (they are referenced by the portfolio). \u521b\u5efa\u4e00\u4e2a Portfolio \u5185\u5bb9\u7c7b\u578b\uff0c\u5176\u4e2d List \u5185\u5bb9\u90e8\u5206\u4ec5\u9650\u4e8e Project \u5185\u5bb9\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9879\u76ee\u72ec\u7acb\u4e8e\u5217\u8868\uff0c\u53ef\u4ee5\u5728\u7ad9\u70b9\u7684\u5176\u4ed6\u4f4d\u7f6e\u91cd\u7528\uff08\u5b83\u4eec\u7531\u7ec4\u5408\u5f15\u7528\uff09\u3002 Create a Portfolio content type with a BagPart content part that is limited to Project content items. In this case project content items live inside the portfolio content item (they are contained by the portfolio). \u4f7f\u7528\u201cBagPart\u201d\u5185\u5bb9\u90e8\u5206\u521b\u5efa\u4e00\u4e2a\u201cPortfolio\u201d\u5185\u5bb9\u7c7b\u578b\uff0c\u8be5\u5185\u5bb9\u90e8\u5206\u4ec5\u9650\u4e8e\u201cProject\u201d\u5185\u5bb9\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9879\u76ee\u5185\u5bb9\u9879\u76ee\u4f4d\u4e8e\u9879\u76ee\u7ec4\u5408\u5185\u5bb9\u9879\u76ee\u5185\uff08\u5b83\u4eec\u7531\u9879\u76ee\u7ec4\u5408\u5305\u542b\uff09\u3002 Create a Liquid Page content item to query and render all content items of type Project . \u521b\u5efa\u4e00\u4e2a Liquid Page \u5185\u5bb9\u9879\u6765\u67e5\u8be2\u548c\u5448\u73b0\u201cProject\u201d\u7c7b\u578b\u7684\u6240\u6709\u5185\u5bb9\u9879\u3002 Create a Razor Page that will use a query to load all the project content items. \u521b\u5efa\u4e00\u4e2a\u5c06\u4f7f\u7528\u67e5\u8be2\u52a0\u8f7d\u6240\u6709\u9879\u76ee\u5185\u5bb9\u9879\u7684Razor\u9875\u9762\u3002 This article will explain how to do it with a BagPart as it will provide the best performance by issuing a single database query, while allowing to do everything from the admin UI. \u672c\u6587\u5c06\u89e3\u91ca\u5982\u4f55\u4f7f\u7528 BagPart \u6765\u5b9e\u73b0\u5b83\uff0c\u56e0\u4e3a\u5b83\u5c06\u901a\u8fc7\u53d1\u51fa\u5355\u4e2a\u6570\u636e\u5e93\u67e5\u8be2\u63d0\u4f9b\u6700\u4f73\u6027\u80fd\uff0c\u540c\u65f6\u5141\u8bb8\u4ece\u7ba1\u7406UI\u6267\u884c\u6240\u6709\u64cd\u4f5c\u3002 Creating the content types \u521b\u5efa\u5185\u5bb9\u7c7b\u578b Project is a content type that will be composed of: a Title part to set a custom name \u7528\u4e8e\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u540d\u79f0\u7684 Title \u90e8\u5206 a Text field to store the link to the project \u4e00\u4e2a Text \u5b57\u6bb5\uff0c\u7528\u4e8e\u5b58\u50a8\u9879\u76ee\u7684\u94fe\u63a5 a Markdown part to provide a description in markdown format \u201cMarkdown\u201d\u90e8\u5206\u4ee5\u6807\u8bb0\u683c\u5f0f\u63d0\u4f9b\u63cf\u8ff0 In the admin, select Content Definition then Content Types and create a new type named Project . Click Create . \u5728\u7ba1\u7406\u5458\u4e2d\uff0c\u9009\u62e9__Content Definition__\u7136\u540e\u9009\u62e9__Content Types__\u5e76\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Project \u7684\u65b0\u7c7b\u578b\u3002\u5355\u51fb\u201c\u521b\u5efa\u201d\u3002 Select Title and Markdown for the parts we can add already, then click Save . \u9009\u62e9__Title__\u548c__Markdown__\u4f5c\u4e3a\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u7684\u90e8\u5206\uff0c\u7136\u540e\u5355\u51fb__Save__\u3002 Click Edit for the Markdown part. Select Wysiwyg editor and click Save . This will provide a richer markdown editing experience. \u5355\u51fb__Edit__\u4f5c\u4e3a__Markdown__\u90e8\u5206\u3002\u9009\u62e9__Wysiwyg editor__\u5e76\u5355\u51fb__Save__\u3002\u8fd9\u5c06\u63d0\u4f9b\u66f4\u4e30\u5bcc\u7684\u964d\u4ef7\u7f16\u8f91\u4f53\u9a8c\u3002 Click Add Field , give it a display name Url , and select Text Field . Click Save then Save again. \u5355\u51fb__Add Field__\uff0c\u4e3a\u5176\u6307\u5b9a\u663e\u793a\u540d\u79f0 Url \uff0c\u7136\u540e\u9009\u62e9__Text Field__\u3002\u518d\u6b21\u5355\u51fb__Save__\u7136\u540e__Save__\u3002 Take the time to drag and drop the Title part at the top of the list such that it will appear first in the editor. Then click Save . \u82b1\u70b9\u65f6\u95f4\u5c06__Title__\u90e8\u5206\u62d6\u653e\u5230\u5217\u8868\u9876\u90e8\uff0c\u4f7f\u5176\u9996\u5148\u51fa\u73b0\u5728\u7f16\u8f91\u5668\u4e2d\u3002\u7136\u540e\u5355\u51fb__Save__\u3002 At that point you could already create all the Project content items you want very easily. However we need to create a Portfolio type to contain and organize them. \u6b64\u65f6\uff0c\u60a8\u53ef\u4ee5\u975e\u5e38\u8f7b\u677e\u5730\u521b\u5efa\u6240\u9700\u7684\u6240\u6709\u9879\u76ee\u5185\u5bb9\u9879\u3002\u4f46\u662f\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u201cPortfolio\u201d\u7c7b\u578b\u6765\u5305\u542b\u548c\u7ec4\u7ec7\u5b83\u4eec\u3002 In the admin, select Content Definition then Content Types and create a new type named Portfolio . Click Create . \u5728\u7ba1\u7406\u5458\u4e2d\uff0c\u9009\u62e9__Content Definition__\u7136\u540e\u9009\u62e9__Content Types__\u5e76\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Portfolio \u7684\u65b0\u7c7b\u578b\u3002\u5355\u51fb\u201c\u521b\u5efa\u201d\u3002 Select Title , Autoroute and Bag , then click Save . \u9009\u62e9__Title \uff0c Autoroute__\u548c__Bag__\uff0c\u7136\u540e\u5355\u51fb__Save__\u3002 Now we can configure the Portfolio content type to only accept Project content items in its bag. \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06 Portfolio \u5185\u5bb9\u7c7b\u578b\u914d\u7f6e\u4e3a\u4ec5\u63a5\u53d7\u5176\u5305\u4e2d\u7684 Project \u5185\u5bb9\u9879\u3002 Click Edit for the Bag part. Check Project and click Save . \u5355\u51fb__Edit__\u4f5c\u4e3a__Bag__\u90e8\u5206\u3002\u68c0\u67e5__Project__\u5e76\u5355\u51fb__Save__\u3002 Click Edit for the Autoroute part. Enter {{ ContentItem | display_text | slugify }} and check Allow custom path . Click Save . This will generate a customizable url or used what the user defines. \u5355\u51fb__Edit__\u4f5c\u4e3a__Autoroute__\u90e8\u5206\u3002\u8f93\u5165 {{ContentItem | display_text | slugify}} \u5e76\u68c0\u67e5__Allow\u81ea\u5b9a\u4e49\u8def\u5f84 \u3002\u5355\u51fb _Save \u3002\u8fd9\u5c06\u751f\u6210\u53ef\u81ea\u5b9a\u4e49\u7684URL\u6216\u4f7f\u7528\u7528\u6237\u5b9a\u4e49\u7684\u5185\u5bb9\u3002 Take the time to drag and drop the Title part at the top of the list such that it will appear first in the editor. Then click Save . \u82b1\u70b9\u65f6\u95f4\u5c06__Title__\u90e8\u5206\u62d6\u653e\u5230\u5217\u8868\u9876\u90e8\uff0c\u4f7f\u5176\u9996\u5148\u51fa\u73b0\u5728\u7f16\u8f91\u5668\u4e2d\u3002\u7136\u540e\u5355\u51fb__Save__\u3002 Creating the Portfolio \u521b\u5efa\u6295\u8d44\u7ec4\u5408 Click on New , then Portfolio . \u5355\u51fb__New__\uff0c\u7136\u540e\u5355\u51fb__Portfolio__\u3002 Give it a title like My Project . \u7ed9\u5b83\u4e00\u4e2a\u50cf\u201c\u6211\u7684\u9879\u76ee\u201d\u8fd9\u6837\u7684\u6807\u9898\u3002 In Permalink enter portfolio . This will be the url to display this content item. \u5728__Permalink__\u4e2d\u8f93\u5165 portfolio \u3002\u8fd9\u5c06\u662f\u663e\u793a\u6b64\u5185\u5bb9\u9879\u7684URL\u3002 As you click on Add Item you'll notice that only Project is available as configured in the Bag part for Portfolio . \u5f53\u60a8\u5355\u51fb__Add Item__\u65f6\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u53ea\u6709__Project__\u53ef\u7528\u4e8e Portfolio \u90e8\u5206\u7684 Bag \u90e8\u5206\u3002 Create a few Projects, then click Publish . \u521b\u5efa\u4e00\u4e9b\u9879\u76ee\uff0c\u7136\u540e\u5355\u51fb__Publish__\u3002 Click on the View button to see how it looks like already. \u5355\u51fb__View__\u6309\u94ae\u4ee5\u67e5\u770b\u5b83\u7684\u6837\u5b50\u3002 At that point it already looks like something that could be shipped, and all the information that was entered is rendered in some way. Next step is to understand how all this content got rendered. \u6b64\u65f6\u5b83\u5df2\u7ecf\u770b\u8d77\u6765\u50cf\u662f\u53ef\u4ee5\u53d1\u9001\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u8f93\u5165\u7684\u6240\u6709\u4fe1\u606f\u90fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5448\u73b0\u3002\u4e0b\u4e00\u6b65\u662f\u4e86\u89e3\u6240\u6709\u8fd9\u4e9b\u5185\u5bb9\u662f\u5982\u4f55\u5448\u73b0\u7684\u3002 Rendering logic \u6e32\u67d3\u903b\u8f91 Loading the portfolio from the database \u4ece\u6570\u636e\u5e93\u52a0\u8f7d\u6295\u8d44\u7ec4\u5408 When the url /portfolio is requested, a custom action is called to render the content item that is associated with this URL. \u5f53\u8bf7\u6c42url / portfolio \u65f6\uff0c\u5c06\u8c03\u7528\u81ea\u5b9a\u4e49\u64cd\u4f5c\u6765\u5448\u73b0\u4e0e\u6b64URL\u5173\u8054\u7684\u5185\u5bb9\u9879\u3002 The URL got associated with the portfolio thanks to the Aurotoute part that provides this mechanism. \u7531\u4e8e\u63d0\u4f9b\u6b64\u673a\u5236\u7684__Aurotoute__\u90e8\u5206\uff0cURL\u4e0e\u7ec4\u5408\u76f8\u5173\u8054\u3002 The autoroute registers a custom URL and stores the associated content item id. autoroute\u6ce8\u518c\u81ea\u5b9a\u4e49URL\u5e76\u5b58\u50a8\u5173\u8054\u7684\u5185\u5bb9\u9879ID\u3002 At this point the action will issue a database request to load the portfolio in its entirety, including the projects, as this is how it was modeled with the Bag part. \u6b64\u65f6\uff0c\u64cd\u4f5c\u5c06\u53d1\u51fa\u6570\u636e\u5e93\u8bf7\u6c42\u4ee5\u5b8c\u6574\u5730\u52a0\u8f7d\u9879\u76ee\u7ec4\u5408\uff0c\u5305\u62ec\u9879\u76ee\uff0c\u56e0\u4e3a\u8fd9\u662f\u4f7f\u7528__Bag__\u90e8\u5206\u5efa\u6a21\u7684\u65b9\u5f0f\u3002 How a Content Item is displayed \u5982\u4f55\u663e\u793a\u5185\u5bb9\u9879 With the portfolio in memory, the theming engine is invoked to render the content item. \u4f7f\u7528\u5185\u5b58\u4e2d\u7684\u6295\u8d44\u7ec4\u5408\uff0c\u8c03\u7528\u4e3b\u9898\u5f15\u64ce\u6765\u5448\u73b0\u5185\u5bb9\u9879\u3002 What happens at that moment is that all the components which want to participate in the rendering of a content item are invoked (the Display Drivers), and each component can return an object representing what to render (the Shapes). \u6b64\u65f6\u53d1\u751f\u7684\u662f\u8c03\u7528\u6240\u6709\u60f3\u8981\u53c2\u4e0e\u5185\u5bb9\u9879\u5448\u73b0\u7684\u7ec4\u4ef6\uff08\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\uff09\uff0c\u5e76\u4e14\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u8fd4\u56de\u8868\u793a\u8981\u5448\u73b0\u5185\u5bb9\u7684\u5bf9\u8c61\uff08\u5f62\u72b6\uff09\u3002 In our case, the Title and Bag parts are provided by custom modules that have specific a Display Driver for each of these parts. \u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c Title__\u548c__Bag__\u90e8\u5206\u7531\u81ea\u5b9a\u4e49\u6a21\u5757\u63d0\u4f9b\uff0c\u8fd9\u4e9b\u6a21\u5757\u5177\u6709\u9488\u5bf9\u6bcf\u4e2a\u90e8\u5206\u7684\u7279\u5b9a__Display Driver \u3002 Then another display driver will be invoked for each Text field. \u7136\u540e\u5c06\u4e3a\u6bcf\u4e2a__Text__\u5b57\u6bb5\u8c03\u7528\u53e6\u4e00\u4e2a\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u3002 The Bag part will invoke all available display drivers recursively, to render the Project content items it owns. __Bag__\u90e8\u5206\u5c06\u9012\u5f52\u8c03\u7528\u6240\u6709\u53ef\u7528\u7684\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4ee5\u5448\u73b0\u5b83\u62e5\u6709\u7684 Project \u5185\u5bb9\u9879\u3002 Each of these drivers return one or more shapes that are added to named zones (or sections) of a global Shape called the Content shape. \u8fd9\u4e9b\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u8fd4\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\u5f62\u72b6\uff0c\u8fd9\u4e9b\u5f62\u72b6\u88ab\u6dfb\u52a0\u5230\u79f0\u4e3a\u201cContent\u201d\u5f62\u72b6\u7684\u5168\u5c40__Shape__\u7684\u547d\u540d\u533a\u57df\uff08\u6216\u90e8\u5206\uff09\u4e2d\u3002 For instance the TitleDisplayDriver class will return a shape of type TitlePart in the Header zone of the main shape at position 5 . See TitlePartDisplay \u4f8b\u5982\uff0c TitleDisplayDriver \u7c7b\u5c06\u5728\u4f4d\u7f6e\u4e3a\u201c5\u201d\u7684\u4e3b\u5f62\u72b6\u7684\u201c\u6807\u9898\u201d\u533a\u57df\u4e2d\u8fd4\u56de\u7c7b\u578b\u4e3a\u201cTitlePart\u201d\u7684\u5f62\u72b6\u3002\u53c2\u89c1[TitlePartDisplay]\uff08../ OrchardCore.Title / Drivers / TitlePartDisplay.cs\uff03L14-L20\uff09 Then the BagPart shape is added in the Content zone of the main shape at the position 5 . See BagPartDisplay . \u7136\u540e\u5c06'BagPart`\u5f62\u72b6\u6dfb\u52a0\u5230\u4f4d\u4e8e\u201c5\u201d\u7684\u4e3b\u5f62\u72b6\u7684\u201c\u5185\u5bb9\u201d\u533a\u57df\u4e2d\u3002\u53c2\u89c1[BagPartDisplay]\uff08../ OrchardCore.Flows / Drivers / BagPartDisplay.cs\uff03L39-L45\uff09\u3002 Once all the drivers for all the parts and all the fields have returned their shapes to specific zones of the main Content shape, Orchard will look for a matching template. \u4e00\u65e6\u6240\u6709\u90e8\u4ef6\u548c\u6240\u6709\u5b57\u6bb5\u7684\u6240\u6709\u9a71\u52a8\u7a0b\u5e8f\u5c06\u5176\u5f62\u72b6\u8fd4\u56de\u5230\u4e3b\u8981\u201cContent\u201d\u5f62\u72b6\u7684\u7279\u5b9a\u533a\u57df\uff0cOrchard\u5c06\u67e5\u627e\u5339\u914d\u7684\u6a21\u677f\u3002 Template matching is done dynamically, and if no specific ones are created for a Content Type, then the file Content.cshtml (or Content.liquid ) is used. \u6a21\u677f\u5339\u914d\u662f\u52a8\u6001\u5b8c\u6210\u7684\uff0c\u5982\u679c\u6ca1\u6709\u4e3a\u5185\u5bb9\u7c7b\u578b\u521b\u5efa\u7279\u5b9a\u7684\u5339\u914d\uff0c\u5219\u4f7f\u7528\u6587\u4ef6 Content.cshtml \uff08\u6216 Content.liquid \uff09\u3002 The default template will go over all the zones it knows about and render the shapes that are inside each of them. \u9ed8\u8ba4\u6a21\u677f\u5c06\u904d\u5386\u5b83\u6240\u77e5\u9053\u7684\u6240\u6709\u533a\u57df\uff0c\u5e76\u6e32\u67d3\u6bcf\u4e2a\u533a\u57df\u5185\u7684\u5f62\u72b6\u3002 See Header where the Header zone shapes are rendered (the TitlePart shape) and also Content where the Content zone shapes are rendered ( BagPart and TextField shapes). \u53c2\u89c1[Header]\uff08../ OrchardCore.Contents / Views / Content.cshtml\uff03L17\uff09\uff0c\u5176\u4e2d\u5448\u73b0 Header \u533a\u57df\u5f62\u72b6\uff08 TitlePart \u5f62\u72b6\uff09\u548c[Content]\uff08../ OrchardCore.Contents / Views /Content.cshtml#L24\uff09\u5448\u73b0 Content \u533a\u57df\u5f62\u72b6\uff08 BagPart \u548c TextField \u5f62\u72b6\uff09\u3002 Customizing templates \u81ea\u5b9a\u4e49\u6a21\u677f We can already see that many shapes, and thus templates, are used to render a single content item. But every piece of HTML can be replaced, locally (for a page) or globally (over the site). \u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u770b\u5230\u8bb8\u591a\u5f62\u72b6\u548c\u6a21\u677f\u7528\u4e8e\u5448\u73b0\u5355\u4e2a\u5185\u5bb9\u9879\u3002\u4f46\u662f\uff0c\u6bcf\u4e2aHTML\u90fd\u53ef\u4ee5\u66ff\u6362\uff0c\u672c\u5730\uff08\u5bf9\u4e8e\u9875\u9762\uff09\u6216\u5168\u5c40\uff08\u901a\u8fc7\u7ad9\u70b9\uff09\u3002 Templates are usually provided by the modules that create the corresponding shape types, but can always be redefined by a Theme. \u6a21\u677f\u901a\u5e38\u7531\u521b\u5efa\u76f8\u5e94\u5f62\u72b6\u7c7b\u578b\u7684\u6a21\u5757\u63d0\u4f9b\uff0c\u4f46\u59cb\u7ec8\u53ef\u4ee5\u901a\u8fc7\u4e3b\u9898\u91cd\u65b0\u5b9a\u4e49\u3002 Themes are able to provide custom templates that will be used instead of the default ones. This means that a template can be copied to a theme in order to be customized. \u4e3b\u9898\u80fd\u591f\u63d0\u4f9b\u5c06\u4f7f\u7528\u7684\u81ea\u5b9a\u4e49\u6a21\u677f\uff0c\u800c\u4e0d\u662f\u9ed8\u8ba4\u6a21\u677f\u3002\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u5c06\u6a21\u677f\u590d\u5236\u5230\u4e3b\u9898\u4ee5\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002 Alternates \u5019\u8865 When the Content shape is rendered into HTML, it is done using the Content.cshtml file as mentioned earlier. \u5f53__Content__\u5f62\u72b6\u5448\u73b0\u4e3aHTML\u65f6\uff0c\u5b83\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684 Content.cshtml \u6587\u4ef6\u5b8c\u6210\u3002 Similarly, the TitlePart shape will be converted using a TitlePart.cshtml template. \u540c\u6837\uff0c__TitlePart__\u5f62\u72b6\u5c06\u4f7f\u7528 TitlePart.cshtml \u6a21\u677f\u8fdb\u884c\u8f6c\u6362\u3002 This means that we can copy the Content.cshtml file from the OrchardCore.Contents module in order to customize how the Content shape is rendered. \u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4ece__OrchardCore.Contents__\u6a21\u5757\u590d\u5236 Content.cshtml \u6587\u4ef6\uff0c\u4ee5\u81ea\u5b9a\u4e49__Content__\u5f62\u72b6\u7684\u5448\u73b0\u65b9\u5f0f\u3002 One issue with customizing the Content.cshtml file is that it would change how any content item is rendered. \u81ea\u5b9a\u4e49 Content.cshtml \u6587\u4ef6\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u5b83\u4f1a\u6539\u53d8\u4efb\u4f55\u5185\u5bb9\u9879\u7684\u5448\u73b0\u65b9\u5f0f\u3002 The original file is generic enough to be usable with any content type, and does so by rendering a generic <article> element with a <header> , a body and a <footer> . \u539f\u59cb\u6587\u4ef6\u8db3\u591f\u901a\u7528\uff0c\u53ef\u7528\u4e8e\u4efb\u4f55\u5185\u5bb9\u7c7b\u578b\uff0c\u5e76\u901a\u8fc7\u4f7f\u7528 <header> \uff0cbody\u548c <footer> \u5448\u73b0\u901a\u7528 <article> \u5143\u7d20\u6765\u5b9e\u73b0\u3002 Each driver provides shapes that will target these predefined zones, and the Content.cshtml default template just renders them all in order. \u6bcf\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u5c06\u5b9a\u4f4d\u8fd9\u4e9b\u9884\u5b9a\u4e49\u533a\u57df\u7684\u5f62\u72b6\uff0c\u800c\u201cContent.cshtml\u201d\u9ed8\u8ba4\u6a21\u677f\u53ea\u662f\u6309\u987a\u5e8f\u5448\u73b0\u5b83\u4eec\u3002 For this reason it is not recommended to change this file as it may impact too many pages, unless you decide to change the way content items are rendered by default. \u56e0\u6b64\uff0c\u5efa\u8bae\u4e0d\u8981\u66f4\u6539\u6b64\u6587\u4ef6\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4f1a\u5f71\u54cd\u592a\u591a\u9875\u9762\uff0c\u9664\u975e\u60a8\u51b3\u5b9a\u66f4\u6539\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5448\u73b0\u5185\u5bb9\u9879\u7684\u65b9\u5f0f\u3002 To be able to change how specific content types are rendered the theming engine provide the concept of Alternates . \u4e3a\u4e86\u80fd\u591f\u66f4\u6539\u7279\u5b9a\u5185\u5bb9\u7c7b\u578b\u7684\u5448\u73b0\u65b9\u5f0f\uff0c\u4e3b\u9898\u5f15\u64ce\u63d0\u4f9b\u4e86__Alternates__\u7684\u6982\u5ff5\u3002 An alternate is an optional shape type that should be used if a template can be found for it. \u66ff\u4ee3\u662f\u53ef\u9009\u7684\u5f62\u72b6\u7c7b\u578b\uff0c\u5982\u679c\u53ef\u4ee5\u4e3a\u5176\u627e\u5230\u6a21\u677f\uff0c\u5219\u5e94\u4f7f\u7528\u8be5\u5f62\u72b6\u7c7b\u578b\u3002 Alternates provide more specific ways to customize templates. \u66ff\u4ee3\u63d0\u4f9b\u4e86\u66f4\u5177\u4f53\u7684\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u6a21\u677f\u3002 In the case of our Portfolio Content shape, a special alternate named Content__Portfolio is added so that we can provide a template for the Content shape that will be used only for Portfolio content items. \u5728\u6211\u4eec\u7684Portfolio __Content__\u5f62\u72b6\u7684\u60c5\u51b5\u4e0b\uff0c\u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a Content__Portfolio \u7684\u7279\u6b8a\u66ff\u6362\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u4e3a__Content__\u5f62\u72b6\u63d0\u4f9b\u4ec5\u7528\u4e8e__Portfolio__\u5185\u5bb9\u9879\u7684\u6a21\u677f\u3002 When a shape contains __ in its name, the theming engine will match a file with a - instead. \u5f53\u4e00\u4e2a\u5f62\u72b6\u5728\u5176\u540d\u79f0\u4e2d\u5305\u542b __ \u65f6\uff0c\u4e3b\u9898\u5f15\u64ce\u5c06\u5339\u914d\u4e00\u4e2a\u5e26\u6709 - \u7684\u6587\u4ef6\u3002 In this case we can provide a template named Content-Portfolio.cshtml in order to customize how a Portfolio content item is rendered. \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u4f9b\u540d\u4e3a Content-Portfolio.cshtml \u7684\u6a21\u677f\uff0c\u4ee5\u4fbf\u81ea\u5b9a\u4e49__Portfolio__\u5185\u5bb9\u9879\u7684\u5448\u73b0\u65b9\u5f0f\u3002 This file can be created by copying the original Content.cshtml file or by creating a brand new one. \u53ef\u4ee5\u901a\u8fc7\u590d\u5236\u539f\u59cb\u7684 Content.cshtml \u6587\u4ef6\u6216\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684\u6587\u4ef6\u6765\u521b\u5efa\u6b64\u6587\u4ef6\u3002 Many other alternates are available to be able to selectively create templates for a content item. \u8bb8\u591a\u5176\u4ed6\u66ff\u4ee3\u65b9\u6848\u53ef\u7528\u4e8e\u9009\u62e9\u6027\u5730\u4e3a\u5185\u5bb9\u9879\u521b\u5efa\u6a21\u677f\u3002 See Content templates \u8bf7\u53c2\u9605[\u5185\u5bb9\u6a21\u677f]\uff08../ OrchardCore.Templates / README / #content-templates\uff09 Customizing Part templates \u81ea\u5b9a\u4e49\u96f6\u4ef6\u6a21\u677f It might not be necessary to change the Content template, but only to change how a single part or field is rendered. \u53ef\u80fd\u6ca1\u6709\u5fc5\u8981\u66f4\u6539__Content__\u6a21\u677f\uff0c\u4f46\u53ea\u66f4\u6539\u5355\u4e2a\u90e8\u4ef6\u6216\u5b57\u6bb5\u7684\u5448\u73b0\u65b9\u5f0f\u3002 These are also rendered as shapes and have specific templates that can be customized. \u5b83\u4eec\u4e5f\u5448\u73b0\u4e3a\u5f62\u72b6\uff0c\u5e76\u5177\u6709\u53ef\u81ea\u5b9a\u4e49\u7684\u7279\u5b9a\u6a21\u677f\u3002 The Title part can be customized by creating a template for the TitlePart shape. See Title \u53ef\u4ee5\u901a\u8fc7\u4e3a TitlePart \u5f62\u72b6\u521b\u5efa\u6a21\u677f\u6765\u81ea\u5b9a\u4e49__Title__\u90e8\u5206\u3002\u89c1[\u6807\u9898]\uff08../ OrchardCore.Title / README /\uff09 Changing how the title is rendered for every content items would mean creating one of these files: \u66f4\u6539\u6bcf\u4e2a\u5185\u5bb9\u9879\u7684\u6807\u9898\u5448\u73b0\u65b9\u5f0f\u610f\u5473\u7740\u521b\u5efa\u4ee5\u4e0b\u6587\u4ef6\u4e4b\u4e00\uff1a TitlePart.cshtml TitlePart.cshtml <h1>@Model.Title</h1> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><H1> @ Model.Title </ H1></font> TitlePart.liquid TitlePart.liquid <h1>{{ Model.Title }}</h1> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><h1> {{Model.Title}} </ h1></font> Assuming only the title of Portfolio content items should be customized, alternates can be used to create a specialized template. Content part shapes have alternates specific to their parent content type, in this case Portfolio__TitlePart . see Content type, Display type, Part type \u5047\u8bbe\u53ea\u5e94\u5b9a\u5236__Portfolio__\u5185\u5bb9\u9879\u7684\u6807\u9898\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u66ff\u6362\u9879\u521b\u5efa\u4e13\u7528\u6a21\u677f\u3002\u5185\u5bb9\u90e8\u5206\u5f62\u72b6\u5177\u6709\u7279\u5b9a\u4e8e\u5176\u7236\u5185\u5bb9\u7c7b\u578b\u7684\u66ff\u4ee3\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e3a\u201cPortfolio__TitlePart\u201d\u3002\u53c2\u89c1[\u5185\u5bb9\u7c7b\u578b\uff0c\u663e\u793a\u7c7b\u578b\uff0c\u96f6\u4ef6\u7c7b\u578b]\uff08../ OrchardCore.Templates / README /\uff03contentstype_displaytype__parttype\uff09 The template file name for this shape is Portfolio-TitlePart.cshtml . \u6b64\u5f62\u72b6\u7684\u6a21\u677f\u6587\u4ef6\u540d\u662f Portfolio-TitlePart.cshtml \u3002 Customizing Field templates \u81ea\u5b9a\u4e49\u5b57\u6bb5\u6a21\u677f Because multiple fields of the same type can be added to the same content type or even the same content part, their shape type is not the optimal way to customize the template. Fortunately different alternates based on their name are available. \u7531\u4e8e\u53ef\u4ee5\u5c06\u76f8\u540c\u7c7b\u578b\u7684\u591a\u4e2a\u5b57\u6bb5\u6dfb\u52a0\u5230\u540c\u4e00\u5185\u5bb9\u7c7b\u578b\u6216\u751a\u81f3\u76f8\u540c\u7684\u5185\u5bb9\u90e8\u5206\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u5f62\u72b6\u7c7b\u578b\u4e0d\u662f\u81ea\u5b9a\u4e49\u6a21\u677f\u7684\u6700\u4f73\u65b9\u5f0f\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u57fa\u4e8e\u4ed6\u4eec\u7684\u540d\u5b57\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u66ff\u4ee3\u54c1\u3002 For a list of available shape alternates for fields see Content field templates \u6709\u5173\u5b57\u6bb5\u7684\u53ef\u7528\u5f62\u72b6\u66ff\u6362\u5217\u8868\uff0c\u8bf7\u53c2\u9605[\u5185\u5bb9\u5b57\u6bb5\u6a21\u677f]\uff08../ OrchardCore.Templates / README /\uff03contents-field-templates\uff09 In our case, the Project has a Text field named Url . The best shape to override in this case is Project__Url which will match the template Project-Url.cshtml . \u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c__Project__\u6709\u4e00\u4e2a\u540d\u4e3a Url \u7684__Text__\u5b57\u6bb5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8981\u8986\u76d6\u7684\u6700\u4f73\u5f62\u72b6\u662f Project__Url \uff0c\u5b83\u5c06\u5339\u914d\u6a21\u677f Project-Url.cshtml \u3002 The model accessible from this field is described here Available fields \u6b64\u5b57\u6bb5\u4e2d\u53ef\u8bbf\u95ee\u7684\u6a21\u578b\u5728\u6b64\u5904\u63cf\u8ff0[\u53ef\u7528\u5b57\u6bb5]\uff08../ OrchardCore.ContentFields / README / #available-fields\uff09 This page explains that the Text field contains a property Text that contains the value of the field. \u6b64\u9875\u9762\u89e3\u91ca__Text__\u5b57\u6bb5\u5305\u542b\u5c5e\u6027 Text \uff0c\u5176\u4e2d\u5305\u542b\u5b57\u6bb5\u7684\u503c\u3002 To create a link for this field we can create these templates. \u8981\u4e3a\u6b64\u5b57\u6bb5\u521b\u5efa\u94fe\u63a5\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u8fd9\u4e9b\u6a21\u677f\u3002 Project-Url.cshtml \u9879\u76eeUrl.cshtml <a href=\"@Model.Field.Text\">External url</a> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><a href=\\\"@Model.Field.Text\\\">\u5916\u90e8\u7f51\u5740</a></font> Project-Url.liquid \u9879\u76eeUrl.liquid <a href=\"{{ Model.Field.Text }}\">External url</a> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><a href=\\\"{{ Model.Field.Text}}\u201c>\u5916\u90e8\u7f51\u5740</a></font> Display types \u663e\u793a\u7c7b\u578b When a content item is rendered by the theming engine, a specific Display Type is provided as a context of how rendered elements will be used. The default display type is called Detail . This is the one that is used to render a content item in its entirety. \u5f53\u4e3b\u9898\u5f15\u64ce\u5448\u73b0\u5185\u5bb9\u9879\u65f6\uff0c\u63d0\u4f9b\u7279\u5b9a\u7684__Display Type__\u4f5c\u4e3a\u5982\u4f55\u4f7f\u7528\u5448\u73b0\u5143\u7d20\u7684\u4e0a\u4e0b\u6587\u3002\u9ed8\u8ba4\u663e\u793a\u7c7b\u578b\u79f0\u4e3a__Detail__\u3002\u8fd9\u662f\u7528\u4e8e\u5b8c\u6574\u5448\u73b0\u5185\u5bb9\u9879\u7684\u90a3\u4e2a\u3002 When content items are rendered in a list, the convention is to use the Summary display type. \u5f53\u5185\u5bb9\u9879\u5728\u5217\u8868\u4e2d\u5448\u73b0\u65f6\uff0c\u7ea6\u5b9a\u662f\u4f7f\u7528\u201c\u6458\u8981\u201d\u663e\u793a\u7c7b\u578b\u3002 Looking at how our Portfolio content item is rendered, the Project content items are displayed as a list, using the Summary display type. \u67e5\u770b\u6211\u4eec\u7684__Portfolio__\u5185\u5bb9\u9879\u662f\u5982\u4f55\u5448\u73b0\u7684\uff0c__Project__\u5185\u5bb9\u9879\u4f7f\u7528 Summary \u663e\u793a\u7c7b\u578b\u663e\u793a\u4e3a\u5217\u8868\u3002 Alternates exist to target templates for a specific display type. \u5b58\u5728\u7528\u4e8e\u7279\u5b9a\u663e\u793a\u7c7b\u578b\u7684\u76ee\u6807\u6a21\u677f\u7684\u66ff\u4ee3\u3002 For instance we can customize how Project content items are displayed when rendered as part of a list by create a template for the shape Content_Summary__Project , which corresponds to the file Content-Project.Summary.cshtml . \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5f62\u72b6\u4e3a\u201cContent_Summary__Project\u201d\u7684\u6a21\u677f\u6765\u5b9a\u5236\u5728\u4f5c\u4e3a\u5217\u8868\u7684\u4e00\u90e8\u5206\u5448\u73b0\u65f6\u5982\u4f55\u663e\u793a__Project__\u5185\u5bb9\u9879\uff0c\u8be5\u6a21\u677f\u5bf9\u5e94\u4e8e\u6587\u4ef6\u201cContent-Project.Summary.cshtml\u201d\u3002 See Templates documentation \u8bf7\u53c2\u9605[\u6a21\u677f\u6587\u6863]\uff08../ OrchardCore.Templates / README / #content_displaytype__contenttype\uff09 Here, the _ in the shape name is replaced by a dot ( . ) in the template name, and the dotted portion of the name is moved at the end. \u8fd9\u91cc\uff0c\u5f62\u72b6\u540d\u79f0\u4e2d\u7684 _ \u88ab\u6a21\u677f\u540d\u79f0\u4e2d\u7684\u70b9\uff08 . \uff09\u66ff\u6362\uff0c\u540d\u79f0\u7684\u865a\u7ebf\u90e8\u5206\u5728\u672b\u5c3e\u79fb\u52a8\u3002 Content zones, differentiators \u5185\u5bb9\u533a\uff0c\u5dee\u5f02\u5316 As previously stated, the Content shape is made of zones that contains all the shapes which were provided by the display drivers, and ways to customize the templates for theses shapes was explained. \u5982\u524d\u6240\u8ff0\uff0c__Content__\u5f62\u72b6\u7531\u5305\u542b\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u7684\u6240\u6709\u5f62\u72b6\u7684\u533a\u57df\u7ec4\u6210\uff0c\u5e76\u89e3\u91ca\u4e86\u4e3a\u8fd9\u4e9b\u5f62\u72b6\u81ea\u5b9a\u4e49\u6a21\u677f\u7684\u65b9\u6cd5\u3002 Sometimes it is necessary to be able to reorganize the list of shapes that are added in these zones, for instance to remove some shapes of the list, or move them to a different location. \u6709\u65f6\u9700\u8981\u80fd\u591f\u91cd\u65b0\u7ec4\u7ec7\u5728\u8fd9\u4e9b\u533a\u57df\u4e2d\u6dfb\u52a0\u7684\u5f62\u72b6\u5217\u8868\uff0c\u4f8b\u5982\u5220\u9664\u5217\u8868\u7684\u67d0\u4e9b\u5f62\u72b6\uff0c\u6216\u5c06\u5b83\u4eec\u79fb\u52a8\u5230\u5176\u4ed6\u4f4d\u7f6e\u3002 In the case of the Project main content shape, the Content zone contains two shapes: \u5bf9\u4e8e__Project__\u4e3b\u8981\u5185\u5bb9\u5f62\u72b6\uff0c\u201cContent\u201d\u533a\u57df\u5305\u542b\u4e24\u4e2a\u5f62\u72b6\uff1a TextField TextField MarkdownPart MarkdownPart The TitlePart shape is rendered in the zone called Header . TitlePart \u5f62\u72b6\u5728\u540d\u4e3a Header \u7684\u533a\u57df\u4e2d\u5448\u73b0\u3002 Some templating helpers provide ways to select and remove these shapes. \u4e00\u4e9b\u6a21\u677f\u52a9\u624b\u63d0\u4f9b\u4e86\u9009\u62e9\u548c\u5220\u9664\u8fd9\u4e9b\u5f62\u72b6\u7684\u65b9\u6cd5\u3002 In order to cherrypick specific shapes from a zone, shapes are given a nickname called a Differentiator . \u4e3a\u4e86\u4ece\u533a\u57df\u4e2d\u6311\u9009\u7279\u5b9a\u5f62\u72b6\uff0c\u5f62\u72b6\u88ab\u8d4b\u4e88\u79f0\u4e3a__Differentiator__\u7684\u6635\u79f0\u3002 This is necessary, as multiple identical shape types can be added to content zones. See Shape differentiators \u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u5c06\u591a\u4e2a\u76f8\u540c\u7684\u5f62\u72b6\u7c7b\u578b\u6dfb\u52a0\u5230\u5185\u5bb9\u533a\u57df\u3002\u53c2\u89c1[\u5f62\u72b6\u5fae\u5206\u5668]\uff08../ OrchardCore.Templates / README /\uff03shape-differentiationators\uff09 For the Url text field the differentiator is Project-Url . For the Markdown part it is MarkdownPart . \u5bf9\u4e8e Url \u6587\u672c\u5b57\u6bb5\uff0c\u533a\u522b\u7b26\u662f Project-Url \u3002\u5bf9\u4e8e__Markdown__\u90e8\u5206\uff0c\u5b83\u662f MarkdownPart \u3002 This lets us customize the Content shape template for Project . \u8fd9\u8ba9\u6211\u4eec\u53ef\u4ee5\u4e3a__Project__\u81ea\u5b9a\u4e49__Content__\u5f62\u72b6\u6a21\u677f\u3002 Content-Project.cshtml \u5185\u5bb9Project.cshtml <article> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><\u6587\u7ae0></font> <header> @await DisplayAsync(Model.Header.TitlePart) @{ Model.Header.Remove(\"TitlePart\") } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @await DisplayAsync(Model.Header) </header> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @await DisplayAsync(Model.Content[\"Project-Url\"]) @{ Model.Content.Remove(\"Project-Url\") } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @await DisplayAsync(Model.Content.MarkdownPart) @{ Model.Content.Remove(\"MarkdownPart\") } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @await DisplayAsync(Model.Content) <footer> @await DisplayAsync(Model.Footer) </footer> </article> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></\u6587\u7ae0></font> Content-Project.liquid \u5185\u5bb9Project.liquid <article> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><\u6587\u7ae0></font> <header> {{ Model.Header.TitlePart | shape_render }} {% shape_remove_item Model.Header \"TitlePart\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {{ Model.Header | shape_render }} </header> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {{ Model.Content[\"Project-Url\"] | shape_render }} {% shape_remove_item Model.Content \"Project-Url\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {{ Model.Content.MarkdownPart | shape_render }} {% shape_remove_item Model.Content \"MarkdownPart\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {{ Model.Content | shape_render }} <footer> @await DisplayAsync(Model.Footer) </footer> </article> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></\u6587\u7ae0></font> Here the known shapes are extracted from their respective zones, then rendered explicitly. \u8fd9\u91cc\uff0c\u5df2\u77e5\u7684\u5f62\u72b6\u4ece\u5b83\u4eec\u5404\u81ea\u7684\u533a\u57df\u4e2d\u63d0\u53d6\uff0c\u7136\u540e\u660e\u786e\u5730\u5448\u73b0\u3002 Finally the rest of the shapes in each zones are rendered in case more content fields or parts are added later on to the content type. \u6700\u540e\uff0c\u5982\u679c\u7a0d\u540e\u5c06\u66f4\u591a\u5185\u5bb9\u5b57\u6bb5\u6216\u90e8\u5206\u6dfb\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\uff0c\u5219\u5448\u73b0\u6bcf\u4e2a\u533a\u57df\u4e2d\u7684\u5176\u4f59\u5f62\u72b6\u3002 If the zones weren't being rendered, the new elements would not show up automatically. \u5982\u679c\u672a\u6e32\u67d3\u533a\u57df\uff0c\u5219\u65b0\u5143\u7d20\u4e0d\u4f1a\u81ea\u52a8\u663e\u793a\u3002 Instead of rendering the shapes that have been removed from the zone, some custom rendering can be applied directly. \u53ef\u4ee5\u76f4\u63a5\u5e94\u7528\u67d0\u4e9b\u81ea\u5b9a\u4e49\u6e32\u67d3\uff0c\u800c\u4e0d\u662f\u6e32\u67d3\u5df2\u4ece\u533a\u57df\u4e2d\u5220\u9664\u7684\u5f62\u72b6\u3002 One advantage of reusing the shape is that its template might contain some complex logic that is not easily reusable. \u91cd\u7528\u5f62\u72b6\u7684\u4e00\u4e2a\u4f18\u70b9\u662f\u5176\u6a21\u677f\u53ef\u80fd\u5305\u542b\u4e00\u4e9b\u4e0d\u6613\u91cd\u590d\u4f7f\u7528\u7684\u590d\u6742\u903b\u8f91\u3002 This is the case for the MarkdownPart shape for instance, as it will have to convert some markdown content to HTML. \u4f8b\u5982\uff0c\u201cMarkdownPart\u201d\u5f62\u72b6\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u5c06\u4e00\u4e9b\u964d\u4ef7\u5185\u5bb9\u8f6c\u6362\u4e3aHTML\u3002 The TitlePart however could easily be ignored and the Content template directly access the Title property of this shape. \u7136\u800c\uff0c TitlePart \u5f88\u5bb9\u6613\u88ab\u5ffd\u7565\uff0c\u800c__Content__\u6a21\u677f\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e2a\u5f62\u72b6\u7684 Title \u5c5e\u6027\u3002","title":"Themes"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#orchard-core-theming-explained","text":"","title":"Orchard Core Theming explained"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#orchard-core-theming","text":"This article explains how a Content Item is rendered, and the many ways in which the HTML that is rendered can be customized. \u672c\u6587\u4ecb\u7ecd\u4e86\u5982\u4f55\u5448\u73b0\u5185\u5bb9\u9879\uff0c\u4ee5\u53ca\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5448\u73b0\u7684HTML\u7684\u591a\u79cd\u65b9\u5f0f\u3002 It also explains the fundamental theming concepts, namely Shapes , Alternates , Templates , Differentiators , Content Zones and Display Types . \u5b83\u8fd8\u89e3\u91ca\u4e86\u57fa\u672c\u7684\u4e3b\u9898\u6982\u5ff5\uff0c\u5373__Shapes \uff0c Alternates \uff0c__Templates \uff0c _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _","title":"Orchard Core Theming\u89e3\u91ca\u9053"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#goals","text":"","title":"Goals"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_1","text":"Let's assume we want to add a portfolio section to our Blog where we could list all the projects we are working on, and be able to manage these projects individually, as opposed to having an static page where we would have to copy-paste the HTML for each project. \u5047\u8bbe\u6211\u4eec\u60f3\u5728\u6211\u4eec\u7684\u535a\u5ba2\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6295\u8d44\u7ec4\u5408\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u6211\u4eec\u6b63\u5728\u5904\u7406\u7684\u6240\u6709\u9879\u76ee\uff0c\u5e76\u4e14\u80fd\u591f\u5355\u72ec\u7ba1\u7406\u8fd9\u4e9b\u9879\u76ee\uff0c\u800c\u4e0d\u662f\u62e5\u6709\u4e00\u4e2a\u9759\u6001\u9875\u9762\uff0c\u6211\u4eec\u5fc5\u987b\u590d\u5236\u7c98\u8d34HTML\u4e3a\u6bcf\u4e2a\u9879\u76ee\u3002 The portfolio should have its own URL like /portfolio , and should display the projects in \u6295\u8d44\u7ec4\u5408\u5e94\u8be5\u6709\u81ea\u5df1\u7684URL\uff0c\u5982 / portfolio \uff0c\u5e76\u4e14\u5e94\u8be5\u663e\u793a\u9879\u76ee a predefined order. \u9884\u5b9a\u4e49\u7684\u8ba2\u5355\u3002 The end result would look like this: \u6700\u7ec8\u7ed3\u679c\u5982\u4e0b\uff1a","title":"\u76ee\u6807"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#modeling-the-content","text":"","title":"Modeling the content"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_2","text":"The only obvious thing that is required is to create a new Project content type. \u552f\u4e00\u663e\u800c\u6613\u89c1\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u201cProject\u201d\u5185\u5bb9\u7c7b\u578b\u3002 However there are many different ways to model the content to represent a portfolio: \u4f46\u662f\uff0c\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u5bf9\u5185\u5bb9\u8fdb\u884c\u5efa\u6a21\u4ee5\u8868\u793a\u6295\u8d44\u7ec4\u5408\uff1a Create a Portfolio content type with a List content part that is limited to Project content items. In this case, projects are independent from the list and can be reused elsewhere in the site (they are referenced by the portfolio). \u521b\u5efa\u4e00\u4e2a Portfolio \u5185\u5bb9\u7c7b\u578b\uff0c\u5176\u4e2d List \u5185\u5bb9\u90e8\u5206\u4ec5\u9650\u4e8e Project \u5185\u5bb9\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9879\u76ee\u72ec\u7acb\u4e8e\u5217\u8868\uff0c\u53ef\u4ee5\u5728\u7ad9\u70b9\u7684\u5176\u4ed6\u4f4d\u7f6e\u91cd\u7528\uff08\u5b83\u4eec\u7531\u7ec4\u5408\u5f15\u7528\uff09\u3002 Create a Portfolio content type with a BagPart content part that is limited to Project content items. In this case project content items live inside the portfolio content item (they are contained by the portfolio). \u4f7f\u7528\u201cBagPart\u201d\u5185\u5bb9\u90e8\u5206\u521b\u5efa\u4e00\u4e2a\u201cPortfolio\u201d\u5185\u5bb9\u7c7b\u578b\uff0c\u8be5\u5185\u5bb9\u90e8\u5206\u4ec5\u9650\u4e8e\u201cProject\u201d\u5185\u5bb9\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9879\u76ee\u5185\u5bb9\u9879\u76ee\u4f4d\u4e8e\u9879\u76ee\u7ec4\u5408\u5185\u5bb9\u9879\u76ee\u5185\uff08\u5b83\u4eec\u7531\u9879\u76ee\u7ec4\u5408\u5305\u542b\uff09\u3002 Create a Liquid Page content item to query and render all content items of type Project . \u521b\u5efa\u4e00\u4e2a Liquid Page \u5185\u5bb9\u9879\u6765\u67e5\u8be2\u548c\u5448\u73b0\u201cProject\u201d\u7c7b\u578b\u7684\u6240\u6709\u5185\u5bb9\u9879\u3002 Create a Razor Page that will use a query to load all the project content items. \u521b\u5efa\u4e00\u4e2a\u5c06\u4f7f\u7528\u67e5\u8be2\u52a0\u8f7d\u6240\u6709\u9879\u76ee\u5185\u5bb9\u9879\u7684Razor\u9875\u9762\u3002 This article will explain how to do it with a BagPart as it will provide the best performance by issuing a single database query, while allowing to do everything from the admin UI. \u672c\u6587\u5c06\u89e3\u91ca\u5982\u4f55\u4f7f\u7528 BagPart \u6765\u5b9e\u73b0\u5b83\uff0c\u56e0\u4e3a\u5b83\u5c06\u901a\u8fc7\u53d1\u51fa\u5355\u4e2a\u6570\u636e\u5e93\u67e5\u8be2\u63d0\u4f9b\u6700\u4f73\u6027\u80fd\uff0c\u540c\u65f6\u5141\u8bb8\u4ece\u7ba1\u7406UI\u6267\u884c\u6240\u6709\u64cd\u4f5c\u3002","title":"\u5efa\u6a21\u5185\u5bb9"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#creating-the-content-types","text":"","title":"Creating the content types"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_3","text":"Project is a content type that will be composed of: a Title part to set a custom name \u7528\u4e8e\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u540d\u79f0\u7684 Title \u90e8\u5206 a Text field to store the link to the project \u4e00\u4e2a Text \u5b57\u6bb5\uff0c\u7528\u4e8e\u5b58\u50a8\u9879\u76ee\u7684\u94fe\u63a5 a Markdown part to provide a description in markdown format \u201cMarkdown\u201d\u90e8\u5206\u4ee5\u6807\u8bb0\u683c\u5f0f\u63d0\u4f9b\u63cf\u8ff0 In the admin, select Content Definition then Content Types and create a new type named Project . Click Create . \u5728\u7ba1\u7406\u5458\u4e2d\uff0c\u9009\u62e9__Content Definition__\u7136\u540e\u9009\u62e9__Content Types__\u5e76\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Project \u7684\u65b0\u7c7b\u578b\u3002\u5355\u51fb\u201c\u521b\u5efa\u201d\u3002 Select Title and Markdown for the parts we can add already, then click Save . \u9009\u62e9__Title__\u548c__Markdown__\u4f5c\u4e3a\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u7684\u90e8\u5206\uff0c\u7136\u540e\u5355\u51fb__Save__\u3002 Click Edit for the Markdown part. Select Wysiwyg editor and click Save . This will provide a richer markdown editing experience. \u5355\u51fb__Edit__\u4f5c\u4e3a__Markdown__\u90e8\u5206\u3002\u9009\u62e9__Wysiwyg editor__\u5e76\u5355\u51fb__Save__\u3002\u8fd9\u5c06\u63d0\u4f9b\u66f4\u4e30\u5bcc\u7684\u964d\u4ef7\u7f16\u8f91\u4f53\u9a8c\u3002 Click Add Field , give it a display name Url , and select Text Field . Click Save then Save again. \u5355\u51fb__Add Field__\uff0c\u4e3a\u5176\u6307\u5b9a\u663e\u793a\u540d\u79f0 Url \uff0c\u7136\u540e\u9009\u62e9__Text Field__\u3002\u518d\u6b21\u5355\u51fb__Save__\u7136\u540e__Save__\u3002 Take the time to drag and drop the Title part at the top of the list such that it will appear first in the editor. Then click Save . \u82b1\u70b9\u65f6\u95f4\u5c06__Title__\u90e8\u5206\u62d6\u653e\u5230\u5217\u8868\u9876\u90e8\uff0c\u4f7f\u5176\u9996\u5148\u51fa\u73b0\u5728\u7f16\u8f91\u5668\u4e2d\u3002\u7136\u540e\u5355\u51fb__Save__\u3002 At that point you could already create all the Project content items you want very easily. However we need to create a Portfolio type to contain and organize them. \u6b64\u65f6\uff0c\u60a8\u53ef\u4ee5\u975e\u5e38\u8f7b\u677e\u5730\u521b\u5efa\u6240\u9700\u7684\u6240\u6709\u9879\u76ee\u5185\u5bb9\u9879\u3002\u4f46\u662f\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u201cPortfolio\u201d\u7c7b\u578b\u6765\u5305\u542b\u548c\u7ec4\u7ec7\u5b83\u4eec\u3002 In the admin, select Content Definition then Content Types and create a new type named Portfolio . Click Create . \u5728\u7ba1\u7406\u5458\u4e2d\uff0c\u9009\u62e9__Content Definition__\u7136\u540e\u9009\u62e9__Content Types__\u5e76\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Portfolio \u7684\u65b0\u7c7b\u578b\u3002\u5355\u51fb\u201c\u521b\u5efa\u201d\u3002 Select Title , Autoroute and Bag , then click Save . \u9009\u62e9__Title \uff0c Autoroute__\u548c__Bag__\uff0c\u7136\u540e\u5355\u51fb__Save__\u3002 Now we can configure the Portfolio content type to only accept Project content items in its bag. \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06 Portfolio \u5185\u5bb9\u7c7b\u578b\u914d\u7f6e\u4e3a\u4ec5\u63a5\u53d7\u5176\u5305\u4e2d\u7684 Project \u5185\u5bb9\u9879\u3002 Click Edit for the Bag part. Check Project and click Save . \u5355\u51fb__Edit__\u4f5c\u4e3a__Bag__\u90e8\u5206\u3002\u68c0\u67e5__Project__\u5e76\u5355\u51fb__Save__\u3002 Click Edit for the Autoroute part. Enter {{ ContentItem | display_text | slugify }} and check Allow custom path . Click Save . This will generate a customizable url or used what the user defines. \u5355\u51fb__Edit__\u4f5c\u4e3a__Autoroute__\u90e8\u5206\u3002\u8f93\u5165 {{ContentItem | display_text | slugify}} \u5e76\u68c0\u67e5__Allow\u81ea\u5b9a\u4e49\u8def\u5f84 \u3002\u5355\u51fb _Save \u3002\u8fd9\u5c06\u751f\u6210\u53ef\u81ea\u5b9a\u4e49\u7684URL\u6216\u4f7f\u7528\u7528\u6237\u5b9a\u4e49\u7684\u5185\u5bb9\u3002 Take the time to drag and drop the Title part at the top of the list such that it will appear first in the editor. Then click Save . \u82b1\u70b9\u65f6\u95f4\u5c06__Title__\u90e8\u5206\u62d6\u653e\u5230\u5217\u8868\u9876\u90e8\uff0c\u4f7f\u5176\u9996\u5148\u51fa\u73b0\u5728\u7f16\u8f91\u5668\u4e2d\u3002\u7136\u540e\u5355\u51fb__Save__\u3002","title":"\u521b\u5efa\u5185\u5bb9\u7c7b\u578b"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#creating-the-portfolio","text":"","title":"Creating the Portfolio"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_4","text":"Click on New , then Portfolio . \u5355\u51fb__New__\uff0c\u7136\u540e\u5355\u51fb__Portfolio__\u3002 Give it a title like My Project . \u7ed9\u5b83\u4e00\u4e2a\u50cf\u201c\u6211\u7684\u9879\u76ee\u201d\u8fd9\u6837\u7684\u6807\u9898\u3002 In Permalink enter portfolio . This will be the url to display this content item. \u5728__Permalink__\u4e2d\u8f93\u5165 portfolio \u3002\u8fd9\u5c06\u662f\u663e\u793a\u6b64\u5185\u5bb9\u9879\u7684URL\u3002 As you click on Add Item you'll notice that only Project is available as configured in the Bag part for Portfolio . \u5f53\u60a8\u5355\u51fb__Add Item__\u65f6\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u53ea\u6709__Project__\u53ef\u7528\u4e8e Portfolio \u90e8\u5206\u7684 Bag \u90e8\u5206\u3002 Create a few Projects, then click Publish . \u521b\u5efa\u4e00\u4e9b\u9879\u76ee\uff0c\u7136\u540e\u5355\u51fb__Publish__\u3002 Click on the View button to see how it looks like already. \u5355\u51fb__View__\u6309\u94ae\u4ee5\u67e5\u770b\u5b83\u7684\u6837\u5b50\u3002 At that point it already looks like something that could be shipped, and all the information that was entered is rendered in some way. Next step is to understand how all this content got rendered. \u6b64\u65f6\u5b83\u5df2\u7ecf\u770b\u8d77\u6765\u50cf\u662f\u53ef\u4ee5\u53d1\u9001\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u8f93\u5165\u7684\u6240\u6709\u4fe1\u606f\u90fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5448\u73b0\u3002\u4e0b\u4e00\u6b65\u662f\u4e86\u89e3\u6240\u6709\u8fd9\u4e9b\u5185\u5bb9\u662f\u5982\u4f55\u5448\u73b0\u7684\u3002","title":"\u521b\u5efa\u6295\u8d44\u7ec4\u5408"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#rendering-logic","text":"","title":"Rendering logic"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_5","text":"","title":"\u6e32\u67d3\u903b\u8f91"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#loading-the-portfolio-from-the-database","text":"","title":"Loading the portfolio from the database"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_6","text":"When the url /portfolio is requested, a custom action is called to render the content item that is associated with this URL. \u5f53\u8bf7\u6c42url / portfolio \u65f6\uff0c\u5c06\u8c03\u7528\u81ea\u5b9a\u4e49\u64cd\u4f5c\u6765\u5448\u73b0\u4e0e\u6b64URL\u5173\u8054\u7684\u5185\u5bb9\u9879\u3002 The URL got associated with the portfolio thanks to the Aurotoute part that provides this mechanism. \u7531\u4e8e\u63d0\u4f9b\u6b64\u673a\u5236\u7684__Aurotoute__\u90e8\u5206\uff0cURL\u4e0e\u7ec4\u5408\u76f8\u5173\u8054\u3002 The autoroute registers a custom URL and stores the associated content item id. autoroute\u6ce8\u518c\u81ea\u5b9a\u4e49URL\u5e76\u5b58\u50a8\u5173\u8054\u7684\u5185\u5bb9\u9879ID\u3002 At this point the action will issue a database request to load the portfolio in its entirety, including the projects, as this is how it was modeled with the Bag part. \u6b64\u65f6\uff0c\u64cd\u4f5c\u5c06\u53d1\u51fa\u6570\u636e\u5e93\u8bf7\u6c42\u4ee5\u5b8c\u6574\u5730\u52a0\u8f7d\u9879\u76ee\u7ec4\u5408\uff0c\u5305\u62ec\u9879\u76ee\uff0c\u56e0\u4e3a\u8fd9\u662f\u4f7f\u7528__Bag__\u90e8\u5206\u5efa\u6a21\u7684\u65b9\u5f0f\u3002","title":"\u4ece\u6570\u636e\u5e93\u52a0\u8f7d\u6295\u8d44\u7ec4\u5408"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#how-a-content-item-is-displayed","text":"","title":"How a Content Item is displayed"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_7","text":"With the portfolio in memory, the theming engine is invoked to render the content item. \u4f7f\u7528\u5185\u5b58\u4e2d\u7684\u6295\u8d44\u7ec4\u5408\uff0c\u8c03\u7528\u4e3b\u9898\u5f15\u64ce\u6765\u5448\u73b0\u5185\u5bb9\u9879\u3002 What happens at that moment is that all the components which want to participate in the rendering of a content item are invoked (the Display Drivers), and each component can return an object representing what to render (the Shapes). \u6b64\u65f6\u53d1\u751f\u7684\u662f\u8c03\u7528\u6240\u6709\u60f3\u8981\u53c2\u4e0e\u5185\u5bb9\u9879\u5448\u73b0\u7684\u7ec4\u4ef6\uff08\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\uff09\uff0c\u5e76\u4e14\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u8fd4\u56de\u8868\u793a\u8981\u5448\u73b0\u5185\u5bb9\u7684\u5bf9\u8c61\uff08\u5f62\u72b6\uff09\u3002 In our case, the Title and Bag parts are provided by custom modules that have specific a Display Driver for each of these parts. \u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c Title__\u548c__Bag__\u90e8\u5206\u7531\u81ea\u5b9a\u4e49\u6a21\u5757\u63d0\u4f9b\uff0c\u8fd9\u4e9b\u6a21\u5757\u5177\u6709\u9488\u5bf9\u6bcf\u4e2a\u90e8\u5206\u7684\u7279\u5b9a__Display Driver \u3002 Then another display driver will be invoked for each Text field. \u7136\u540e\u5c06\u4e3a\u6bcf\u4e2a__Text__\u5b57\u6bb5\u8c03\u7528\u53e6\u4e00\u4e2a\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u3002 The Bag part will invoke all available display drivers recursively, to render the Project content items it owns. __Bag__\u90e8\u5206\u5c06\u9012\u5f52\u8c03\u7528\u6240\u6709\u53ef\u7528\u7684\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4ee5\u5448\u73b0\u5b83\u62e5\u6709\u7684 Project \u5185\u5bb9\u9879\u3002 Each of these drivers return one or more shapes that are added to named zones (or sections) of a global Shape called the Content shape. \u8fd9\u4e9b\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u8fd4\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\u5f62\u72b6\uff0c\u8fd9\u4e9b\u5f62\u72b6\u88ab\u6dfb\u52a0\u5230\u79f0\u4e3a\u201cContent\u201d\u5f62\u72b6\u7684\u5168\u5c40__Shape__\u7684\u547d\u540d\u533a\u57df\uff08\u6216\u90e8\u5206\uff09\u4e2d\u3002 For instance the TitleDisplayDriver class will return a shape of type TitlePart in the Header zone of the main shape at position 5 . See TitlePartDisplay \u4f8b\u5982\uff0c TitleDisplayDriver \u7c7b\u5c06\u5728\u4f4d\u7f6e\u4e3a\u201c5\u201d\u7684\u4e3b\u5f62\u72b6\u7684\u201c\u6807\u9898\u201d\u533a\u57df\u4e2d\u8fd4\u56de\u7c7b\u578b\u4e3a\u201cTitlePart\u201d\u7684\u5f62\u72b6\u3002\u53c2\u89c1[TitlePartDisplay]\uff08../ OrchardCore.Title / Drivers / TitlePartDisplay.cs\uff03L14-L20\uff09 Then the BagPart shape is added in the Content zone of the main shape at the position 5 . See BagPartDisplay . \u7136\u540e\u5c06'BagPart`\u5f62\u72b6\u6dfb\u52a0\u5230\u4f4d\u4e8e\u201c5\u201d\u7684\u4e3b\u5f62\u72b6\u7684\u201c\u5185\u5bb9\u201d\u533a\u57df\u4e2d\u3002\u53c2\u89c1[BagPartDisplay]\uff08../ OrchardCore.Flows / Drivers / BagPartDisplay.cs\uff03L39-L45\uff09\u3002 Once all the drivers for all the parts and all the fields have returned their shapes to specific zones of the main Content shape, Orchard will look for a matching template. \u4e00\u65e6\u6240\u6709\u90e8\u4ef6\u548c\u6240\u6709\u5b57\u6bb5\u7684\u6240\u6709\u9a71\u52a8\u7a0b\u5e8f\u5c06\u5176\u5f62\u72b6\u8fd4\u56de\u5230\u4e3b\u8981\u201cContent\u201d\u5f62\u72b6\u7684\u7279\u5b9a\u533a\u57df\uff0cOrchard\u5c06\u67e5\u627e\u5339\u914d\u7684\u6a21\u677f\u3002 Template matching is done dynamically, and if no specific ones are created for a Content Type, then the file Content.cshtml (or Content.liquid ) is used. \u6a21\u677f\u5339\u914d\u662f\u52a8\u6001\u5b8c\u6210\u7684\uff0c\u5982\u679c\u6ca1\u6709\u4e3a\u5185\u5bb9\u7c7b\u578b\u521b\u5efa\u7279\u5b9a\u7684\u5339\u914d\uff0c\u5219\u4f7f\u7528\u6587\u4ef6 Content.cshtml \uff08\u6216 Content.liquid \uff09\u3002 The default template will go over all the zones it knows about and render the shapes that are inside each of them. \u9ed8\u8ba4\u6a21\u677f\u5c06\u904d\u5386\u5b83\u6240\u77e5\u9053\u7684\u6240\u6709\u533a\u57df\uff0c\u5e76\u6e32\u67d3\u6bcf\u4e2a\u533a\u57df\u5185\u7684\u5f62\u72b6\u3002 See Header where the Header zone shapes are rendered (the TitlePart shape) and also Content where the Content zone shapes are rendered ( BagPart and TextField shapes). \u53c2\u89c1[Header]\uff08../ OrchardCore.Contents / Views / Content.cshtml\uff03L17\uff09\uff0c\u5176\u4e2d\u5448\u73b0 Header \u533a\u57df\u5f62\u72b6\uff08 TitlePart \u5f62\u72b6\uff09\u548c[Content]\uff08../ OrchardCore.Contents / Views /Content.cshtml#L24\uff09\u5448\u73b0 Content \u533a\u57df\u5f62\u72b6\uff08 BagPart \u548c TextField \u5f62\u72b6\uff09\u3002","title":"\u5982\u4f55\u663e\u793a\u5185\u5bb9\u9879"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#customizing-templates","text":"","title":"Customizing templates"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_8","text":"We can already see that many shapes, and thus templates, are used to render a single content item. But every piece of HTML can be replaced, locally (for a page) or globally (over the site). \u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u770b\u5230\u8bb8\u591a\u5f62\u72b6\u548c\u6a21\u677f\u7528\u4e8e\u5448\u73b0\u5355\u4e2a\u5185\u5bb9\u9879\u3002\u4f46\u662f\uff0c\u6bcf\u4e2aHTML\u90fd\u53ef\u4ee5\u66ff\u6362\uff0c\u672c\u5730\uff08\u5bf9\u4e8e\u9875\u9762\uff09\u6216\u5168\u5c40\uff08\u901a\u8fc7\u7ad9\u70b9\uff09\u3002 Templates are usually provided by the modules that create the corresponding shape types, but can always be redefined by a Theme. \u6a21\u677f\u901a\u5e38\u7531\u521b\u5efa\u76f8\u5e94\u5f62\u72b6\u7c7b\u578b\u7684\u6a21\u5757\u63d0\u4f9b\uff0c\u4f46\u59cb\u7ec8\u53ef\u4ee5\u901a\u8fc7\u4e3b\u9898\u91cd\u65b0\u5b9a\u4e49\u3002 Themes are able to provide custom templates that will be used instead of the default ones. This means that a template can be copied to a theme in order to be customized. \u4e3b\u9898\u80fd\u591f\u63d0\u4f9b\u5c06\u4f7f\u7528\u7684\u81ea\u5b9a\u4e49\u6a21\u677f\uff0c\u800c\u4e0d\u662f\u9ed8\u8ba4\u6a21\u677f\u3002\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u5c06\u6a21\u677f\u590d\u5236\u5230\u4e3b\u9898\u4ee5\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002","title":"\u81ea\u5b9a\u4e49\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#alternates","text":"","title":"Alternates"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_9","text":"When the Content shape is rendered into HTML, it is done using the Content.cshtml file as mentioned earlier. \u5f53__Content__\u5f62\u72b6\u5448\u73b0\u4e3aHTML\u65f6\uff0c\u5b83\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684 Content.cshtml \u6587\u4ef6\u5b8c\u6210\u3002 Similarly, the TitlePart shape will be converted using a TitlePart.cshtml template. \u540c\u6837\uff0c__TitlePart__\u5f62\u72b6\u5c06\u4f7f\u7528 TitlePart.cshtml \u6a21\u677f\u8fdb\u884c\u8f6c\u6362\u3002 This means that we can copy the Content.cshtml file from the OrchardCore.Contents module in order to customize how the Content shape is rendered. \u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4ece__OrchardCore.Contents__\u6a21\u5757\u590d\u5236 Content.cshtml \u6587\u4ef6\uff0c\u4ee5\u81ea\u5b9a\u4e49__Content__\u5f62\u72b6\u7684\u5448\u73b0\u65b9\u5f0f\u3002 One issue with customizing the Content.cshtml file is that it would change how any content item is rendered. \u81ea\u5b9a\u4e49 Content.cshtml \u6587\u4ef6\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u5b83\u4f1a\u6539\u53d8\u4efb\u4f55\u5185\u5bb9\u9879\u7684\u5448\u73b0\u65b9\u5f0f\u3002 The original file is generic enough to be usable with any content type, and does so by rendering a generic <article> element with a <header> , a body and a <footer> . \u539f\u59cb\u6587\u4ef6\u8db3\u591f\u901a\u7528\uff0c\u53ef\u7528\u4e8e\u4efb\u4f55\u5185\u5bb9\u7c7b\u578b\uff0c\u5e76\u901a\u8fc7\u4f7f\u7528 <header> \uff0cbody\u548c <footer> \u5448\u73b0\u901a\u7528 <article> \u5143\u7d20\u6765\u5b9e\u73b0\u3002 Each driver provides shapes that will target these predefined zones, and the Content.cshtml default template just renders them all in order. \u6bcf\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u5c06\u5b9a\u4f4d\u8fd9\u4e9b\u9884\u5b9a\u4e49\u533a\u57df\u7684\u5f62\u72b6\uff0c\u800c\u201cContent.cshtml\u201d\u9ed8\u8ba4\u6a21\u677f\u53ea\u662f\u6309\u987a\u5e8f\u5448\u73b0\u5b83\u4eec\u3002 For this reason it is not recommended to change this file as it may impact too many pages, unless you decide to change the way content items are rendered by default. \u56e0\u6b64\uff0c\u5efa\u8bae\u4e0d\u8981\u66f4\u6539\u6b64\u6587\u4ef6\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4f1a\u5f71\u54cd\u592a\u591a\u9875\u9762\uff0c\u9664\u975e\u60a8\u51b3\u5b9a\u66f4\u6539\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5448\u73b0\u5185\u5bb9\u9879\u7684\u65b9\u5f0f\u3002 To be able to change how specific content types are rendered the theming engine provide the concept of Alternates . \u4e3a\u4e86\u80fd\u591f\u66f4\u6539\u7279\u5b9a\u5185\u5bb9\u7c7b\u578b\u7684\u5448\u73b0\u65b9\u5f0f\uff0c\u4e3b\u9898\u5f15\u64ce\u63d0\u4f9b\u4e86__Alternates__\u7684\u6982\u5ff5\u3002 An alternate is an optional shape type that should be used if a template can be found for it. \u66ff\u4ee3\u662f\u53ef\u9009\u7684\u5f62\u72b6\u7c7b\u578b\uff0c\u5982\u679c\u53ef\u4ee5\u4e3a\u5176\u627e\u5230\u6a21\u677f\uff0c\u5219\u5e94\u4f7f\u7528\u8be5\u5f62\u72b6\u7c7b\u578b\u3002 Alternates provide more specific ways to customize templates. \u66ff\u4ee3\u63d0\u4f9b\u4e86\u66f4\u5177\u4f53\u7684\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u6a21\u677f\u3002 In the case of our Portfolio Content shape, a special alternate named Content__Portfolio is added so that we can provide a template for the Content shape that will be used only for Portfolio content items. \u5728\u6211\u4eec\u7684Portfolio __Content__\u5f62\u72b6\u7684\u60c5\u51b5\u4e0b\uff0c\u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a Content__Portfolio \u7684\u7279\u6b8a\u66ff\u6362\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u4e3a__Content__\u5f62\u72b6\u63d0\u4f9b\u4ec5\u7528\u4e8e__Portfolio__\u5185\u5bb9\u9879\u7684\u6a21\u677f\u3002 When a shape contains __ in its name, the theming engine will match a file with a - instead. \u5f53\u4e00\u4e2a\u5f62\u72b6\u5728\u5176\u540d\u79f0\u4e2d\u5305\u542b __ \u65f6\uff0c\u4e3b\u9898\u5f15\u64ce\u5c06\u5339\u914d\u4e00\u4e2a\u5e26\u6709 - \u7684\u6587\u4ef6\u3002 In this case we can provide a template named Content-Portfolio.cshtml in order to customize how a Portfolio content item is rendered. \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u4f9b\u540d\u4e3a Content-Portfolio.cshtml \u7684\u6a21\u677f\uff0c\u4ee5\u4fbf\u81ea\u5b9a\u4e49__Portfolio__\u5185\u5bb9\u9879\u7684\u5448\u73b0\u65b9\u5f0f\u3002 This file can be created by copying the original Content.cshtml file or by creating a brand new one. \u53ef\u4ee5\u901a\u8fc7\u590d\u5236\u539f\u59cb\u7684 Content.cshtml \u6587\u4ef6\u6216\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684\u6587\u4ef6\u6765\u521b\u5efa\u6b64\u6587\u4ef6\u3002 Many other alternates are available to be able to selectively create templates for a content item. \u8bb8\u591a\u5176\u4ed6\u66ff\u4ee3\u65b9\u6848\u53ef\u7528\u4e8e\u9009\u62e9\u6027\u5730\u4e3a\u5185\u5bb9\u9879\u521b\u5efa\u6a21\u677f\u3002 See Content templates \u8bf7\u53c2\u9605[\u5185\u5bb9\u6a21\u677f]\uff08../ OrchardCore.Templates / README / #content-templates\uff09","title":"\u5019\u8865"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#customizing-part-templates","text":"","title":"Customizing Part templates"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_10","text":"It might not be necessary to change the Content template, but only to change how a single part or field is rendered. \u53ef\u80fd\u6ca1\u6709\u5fc5\u8981\u66f4\u6539__Content__\u6a21\u677f\uff0c\u4f46\u53ea\u66f4\u6539\u5355\u4e2a\u90e8\u4ef6\u6216\u5b57\u6bb5\u7684\u5448\u73b0\u65b9\u5f0f\u3002 These are also rendered as shapes and have specific templates that can be customized. \u5b83\u4eec\u4e5f\u5448\u73b0\u4e3a\u5f62\u72b6\uff0c\u5e76\u5177\u6709\u53ef\u81ea\u5b9a\u4e49\u7684\u7279\u5b9a\u6a21\u677f\u3002 The Title part can be customized by creating a template for the TitlePart shape. See Title \u53ef\u4ee5\u901a\u8fc7\u4e3a TitlePart \u5f62\u72b6\u521b\u5efa\u6a21\u677f\u6765\u81ea\u5b9a\u4e49__Title__\u90e8\u5206\u3002\u89c1[\u6807\u9898]\uff08../ OrchardCore.Title / README /\uff09 Changing how the title is rendered for every content items would mean creating one of these files: \u66f4\u6539\u6bcf\u4e2a\u5185\u5bb9\u9879\u7684\u6807\u9898\u5448\u73b0\u65b9\u5f0f\u610f\u5473\u7740\u521b\u5efa\u4ee5\u4e0b\u6587\u4ef6\u4e4b\u4e00\uff1a","title":"\u81ea\u5b9a\u4e49\u96f6\u4ef6\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#titlepartcshtml","text":"","title":"TitlePart.cshtml"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#titlepartcshtml_1","text":"<h1>@Model.Title</h1> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><H1> @ Model.Title </ H1></font>","title":"TitlePart.cshtml"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#titlepartliquid","text":"","title":"TitlePart.liquid"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#titlepartliquid_1","text":"<h1>{{ Model.Title }}</h1> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><h1> {{Model.Title}} </ h1></font> Assuming only the title of Portfolio content items should be customized, alternates can be used to create a specialized template. Content part shapes have alternates specific to their parent content type, in this case Portfolio__TitlePart . see Content type, Display type, Part type \u5047\u8bbe\u53ea\u5e94\u5b9a\u5236__Portfolio__\u5185\u5bb9\u9879\u7684\u6807\u9898\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u66ff\u6362\u9879\u521b\u5efa\u4e13\u7528\u6a21\u677f\u3002\u5185\u5bb9\u90e8\u5206\u5f62\u72b6\u5177\u6709\u7279\u5b9a\u4e8e\u5176\u7236\u5185\u5bb9\u7c7b\u578b\u7684\u66ff\u4ee3\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e3a\u201cPortfolio__TitlePart\u201d\u3002\u53c2\u89c1[\u5185\u5bb9\u7c7b\u578b\uff0c\u663e\u793a\u7c7b\u578b\uff0c\u96f6\u4ef6\u7c7b\u578b]\uff08../ OrchardCore.Templates / README /\uff03contentstype_displaytype__parttype\uff09 The template file name for this shape is Portfolio-TitlePart.cshtml . \u6b64\u5f62\u72b6\u7684\u6a21\u677f\u6587\u4ef6\u540d\u662f Portfolio-TitlePart.cshtml \u3002","title":"TitlePart.liquid"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#customizing-field-templates","text":"","title":"Customizing Field templates"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_11","text":"Because multiple fields of the same type can be added to the same content type or even the same content part, their shape type is not the optimal way to customize the template. Fortunately different alternates based on their name are available. \u7531\u4e8e\u53ef\u4ee5\u5c06\u76f8\u540c\u7c7b\u578b\u7684\u591a\u4e2a\u5b57\u6bb5\u6dfb\u52a0\u5230\u540c\u4e00\u5185\u5bb9\u7c7b\u578b\u6216\u751a\u81f3\u76f8\u540c\u7684\u5185\u5bb9\u90e8\u5206\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u5f62\u72b6\u7c7b\u578b\u4e0d\u662f\u81ea\u5b9a\u4e49\u6a21\u677f\u7684\u6700\u4f73\u65b9\u5f0f\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u57fa\u4e8e\u4ed6\u4eec\u7684\u540d\u5b57\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u66ff\u4ee3\u54c1\u3002 For a list of available shape alternates for fields see Content field templates \u6709\u5173\u5b57\u6bb5\u7684\u53ef\u7528\u5f62\u72b6\u66ff\u6362\u5217\u8868\uff0c\u8bf7\u53c2\u9605[\u5185\u5bb9\u5b57\u6bb5\u6a21\u677f]\uff08../ OrchardCore.Templates / README /\uff03contents-field-templates\uff09 In our case, the Project has a Text field named Url . The best shape to override in this case is Project__Url which will match the template Project-Url.cshtml . \u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c__Project__\u6709\u4e00\u4e2a\u540d\u4e3a Url \u7684__Text__\u5b57\u6bb5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8981\u8986\u76d6\u7684\u6700\u4f73\u5f62\u72b6\u662f Project__Url \uff0c\u5b83\u5c06\u5339\u914d\u6a21\u677f Project-Url.cshtml \u3002 The model accessible from this field is described here Available fields \u6b64\u5b57\u6bb5\u4e2d\u53ef\u8bbf\u95ee\u7684\u6a21\u578b\u5728\u6b64\u5904\u63cf\u8ff0[\u53ef\u7528\u5b57\u6bb5]\uff08../ OrchardCore.ContentFields / README / #available-fields\uff09 This page explains that the Text field contains a property Text that contains the value of the field. \u6b64\u9875\u9762\u89e3\u91ca__Text__\u5b57\u6bb5\u5305\u542b\u5c5e\u6027 Text \uff0c\u5176\u4e2d\u5305\u542b\u5b57\u6bb5\u7684\u503c\u3002 To create a link for this field we can create these templates. \u8981\u4e3a\u6b64\u5b57\u6bb5\u521b\u5efa\u94fe\u63a5\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u8fd9\u4e9b\u6a21\u677f\u3002","title":"\u81ea\u5b9a\u4e49\u5b57\u6bb5\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#project-urlcshtml","text":"","title":"Project-Url.cshtml"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#urlcshtml","text":"<a href=\"@Model.Field.Text\">External url</a> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><a href=\\\"@Model.Field.Text\\\">\u5916\u90e8\u7f51\u5740</a></font>","title":"\u9879\u76eeUrl.cshtml"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#project-urlliquid","text":"","title":"Project-Url.liquid"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#urlliquid","text":"<a href=\"{{ Model.Field.Text }}\">External url</a> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><a href=\\\"{{ Model.Field.Text}}\u201c>\u5916\u90e8\u7f51\u5740</a></font>","title":"\u9879\u76eeUrl.liquid"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#display-types","text":"","title":"Display types"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_12","text":"When a content item is rendered by the theming engine, a specific Display Type is provided as a context of how rendered elements will be used. The default display type is called Detail . This is the one that is used to render a content item in its entirety. \u5f53\u4e3b\u9898\u5f15\u64ce\u5448\u73b0\u5185\u5bb9\u9879\u65f6\uff0c\u63d0\u4f9b\u7279\u5b9a\u7684__Display Type__\u4f5c\u4e3a\u5982\u4f55\u4f7f\u7528\u5448\u73b0\u5143\u7d20\u7684\u4e0a\u4e0b\u6587\u3002\u9ed8\u8ba4\u663e\u793a\u7c7b\u578b\u79f0\u4e3a__Detail__\u3002\u8fd9\u662f\u7528\u4e8e\u5b8c\u6574\u5448\u73b0\u5185\u5bb9\u9879\u7684\u90a3\u4e2a\u3002 When content items are rendered in a list, the convention is to use the Summary display type. \u5f53\u5185\u5bb9\u9879\u5728\u5217\u8868\u4e2d\u5448\u73b0\u65f6\uff0c\u7ea6\u5b9a\u662f\u4f7f\u7528\u201c\u6458\u8981\u201d\u663e\u793a\u7c7b\u578b\u3002 Looking at how our Portfolio content item is rendered, the Project content items are displayed as a list, using the Summary display type. \u67e5\u770b\u6211\u4eec\u7684__Portfolio__\u5185\u5bb9\u9879\u662f\u5982\u4f55\u5448\u73b0\u7684\uff0c__Project__\u5185\u5bb9\u9879\u4f7f\u7528 Summary \u663e\u793a\u7c7b\u578b\u663e\u793a\u4e3a\u5217\u8868\u3002 Alternates exist to target templates for a specific display type. \u5b58\u5728\u7528\u4e8e\u7279\u5b9a\u663e\u793a\u7c7b\u578b\u7684\u76ee\u6807\u6a21\u677f\u7684\u66ff\u4ee3\u3002 For instance we can customize how Project content items are displayed when rendered as part of a list by create a template for the shape Content_Summary__Project , which corresponds to the file Content-Project.Summary.cshtml . \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5f62\u72b6\u4e3a\u201cContent_Summary__Project\u201d\u7684\u6a21\u677f\u6765\u5b9a\u5236\u5728\u4f5c\u4e3a\u5217\u8868\u7684\u4e00\u90e8\u5206\u5448\u73b0\u65f6\u5982\u4f55\u663e\u793a__Project__\u5185\u5bb9\u9879\uff0c\u8be5\u6a21\u677f\u5bf9\u5e94\u4e8e\u6587\u4ef6\u201cContent-Project.Summary.cshtml\u201d\u3002 See Templates documentation \u8bf7\u53c2\u9605[\u6a21\u677f\u6587\u6863]\uff08../ OrchardCore.Templates / README / #content_displaytype__contenttype\uff09 Here, the _ in the shape name is replaced by a dot ( . ) in the template name, and the dotted portion of the name is moved at the end. \u8fd9\u91cc\uff0c\u5f62\u72b6\u540d\u79f0\u4e2d\u7684 _ \u88ab\u6a21\u677f\u540d\u79f0\u4e2d\u7684\u70b9\uff08 . \uff09\u66ff\u6362\uff0c\u540d\u79f0\u7684\u865a\u7ebf\u90e8\u5206\u5728\u672b\u5c3e\u79fb\u52a8\u3002","title":"\u663e\u793a\u7c7b\u578b"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#content-zones-differentiators","text":"","title":"Content zones, differentiators"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#_13","text":"As previously stated, the Content shape is made of zones that contains all the shapes which were provided by the display drivers, and ways to customize the templates for theses shapes was explained. \u5982\u524d\u6240\u8ff0\uff0c__Content__\u5f62\u72b6\u7531\u5305\u542b\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u7684\u6240\u6709\u5f62\u72b6\u7684\u533a\u57df\u7ec4\u6210\uff0c\u5e76\u89e3\u91ca\u4e86\u4e3a\u8fd9\u4e9b\u5f62\u72b6\u81ea\u5b9a\u4e49\u6a21\u677f\u7684\u65b9\u6cd5\u3002 Sometimes it is necessary to be able to reorganize the list of shapes that are added in these zones, for instance to remove some shapes of the list, or move them to a different location. \u6709\u65f6\u9700\u8981\u80fd\u591f\u91cd\u65b0\u7ec4\u7ec7\u5728\u8fd9\u4e9b\u533a\u57df\u4e2d\u6dfb\u52a0\u7684\u5f62\u72b6\u5217\u8868\uff0c\u4f8b\u5982\u5220\u9664\u5217\u8868\u7684\u67d0\u4e9b\u5f62\u72b6\uff0c\u6216\u5c06\u5b83\u4eec\u79fb\u52a8\u5230\u5176\u4ed6\u4f4d\u7f6e\u3002 In the case of the Project main content shape, the Content zone contains two shapes: \u5bf9\u4e8e__Project__\u4e3b\u8981\u5185\u5bb9\u5f62\u72b6\uff0c\u201cContent\u201d\u533a\u57df\u5305\u542b\u4e24\u4e2a\u5f62\u72b6\uff1a TextField TextField MarkdownPart MarkdownPart The TitlePart shape is rendered in the zone called Header . TitlePart \u5f62\u72b6\u5728\u540d\u4e3a Header \u7684\u533a\u57df\u4e2d\u5448\u73b0\u3002 Some templating helpers provide ways to select and remove these shapes. \u4e00\u4e9b\u6a21\u677f\u52a9\u624b\u63d0\u4f9b\u4e86\u9009\u62e9\u548c\u5220\u9664\u8fd9\u4e9b\u5f62\u72b6\u7684\u65b9\u6cd5\u3002 In order to cherrypick specific shapes from a zone, shapes are given a nickname called a Differentiator . \u4e3a\u4e86\u4ece\u533a\u57df\u4e2d\u6311\u9009\u7279\u5b9a\u5f62\u72b6\uff0c\u5f62\u72b6\u88ab\u8d4b\u4e88\u79f0\u4e3a__Differentiator__\u7684\u6635\u79f0\u3002 This is necessary, as multiple identical shape types can be added to content zones. See Shape differentiators \u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u5c06\u591a\u4e2a\u76f8\u540c\u7684\u5f62\u72b6\u7c7b\u578b\u6dfb\u52a0\u5230\u5185\u5bb9\u533a\u57df\u3002\u53c2\u89c1[\u5f62\u72b6\u5fae\u5206\u5668]\uff08../ OrchardCore.Templates / README /\uff03shape-differentiationators\uff09 For the Url text field the differentiator is Project-Url . For the Markdown part it is MarkdownPart . \u5bf9\u4e8e Url \u6587\u672c\u5b57\u6bb5\uff0c\u533a\u522b\u7b26\u662f Project-Url \u3002\u5bf9\u4e8e__Markdown__\u90e8\u5206\uff0c\u5b83\u662f MarkdownPart \u3002 This lets us customize the Content shape template for Project . \u8fd9\u8ba9\u6211\u4eec\u53ef\u4ee5\u4e3a__Project__\u81ea\u5b9a\u4e49__Content__\u5f62\u72b6\u6a21\u677f\u3002","title":"\u5185\u5bb9\u533a\uff0c\u5dee\u5f02\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#content-projectcshtml","text":"","title":"Content-Project.cshtml"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#projectcshtml","text":"<article> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><\u6587\u7ae0></font> <header> @await DisplayAsync(Model.Header.TitlePart) @{ Model.Header.Remove(\"TitlePart\") } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @await DisplayAsync(Model.Header) </header> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @await DisplayAsync(Model.Content[\"Project-Url\"]) @{ Model.Content.Remove(\"Project-Url\") } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @await DisplayAsync(Model.Content.MarkdownPart) @{ Model.Content.Remove(\"MarkdownPart\") } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> @await DisplayAsync(Model.Content) <footer> @await DisplayAsync(Model.Footer) </footer> </article> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></\u6587\u7ae0></font>","title":"\u5185\u5bb9Project.cshtml"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#content-projectliquid","text":"","title":"Content-Project.liquid"},{"location":"OrchardCore.Modules/OrchardCore.Themes/#projectliquid","text":"<article> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><\u6587\u7ae0></font> <header> {{ Model.Header.TitlePart | shape_render }} {% shape_remove_item Model.Header \"TitlePart\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {{ Model.Header | shape_render }} </header> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {{ Model.Content[\"Project-Url\"] | shape_render }} {% shape_remove_item Model.Content \"Project-Url\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {{ Model.Content.MarkdownPart | shape_render }} {% shape_remove_item Model.Content \"MarkdownPart\" %} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> {{ Model.Content | shape_render }} <footer> @await DisplayAsync(Model.Footer) </footer> </article> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></\u6587\u7ae0></font> Here the known shapes are extracted from their respective zones, then rendered explicitly. \u8fd9\u91cc\uff0c\u5df2\u77e5\u7684\u5f62\u72b6\u4ece\u5b83\u4eec\u5404\u81ea\u7684\u533a\u57df\u4e2d\u63d0\u53d6\uff0c\u7136\u540e\u660e\u786e\u5730\u5448\u73b0\u3002 Finally the rest of the shapes in each zones are rendered in case more content fields or parts are added later on to the content type. \u6700\u540e\uff0c\u5982\u679c\u7a0d\u540e\u5c06\u66f4\u591a\u5185\u5bb9\u5b57\u6bb5\u6216\u90e8\u5206\u6dfb\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\uff0c\u5219\u5448\u73b0\u6bcf\u4e2a\u533a\u57df\u4e2d\u7684\u5176\u4f59\u5f62\u72b6\u3002 If the zones weren't being rendered, the new elements would not show up automatically. \u5982\u679c\u672a\u6e32\u67d3\u533a\u57df\uff0c\u5219\u65b0\u5143\u7d20\u4e0d\u4f1a\u81ea\u52a8\u663e\u793a\u3002 Instead of rendering the shapes that have been removed from the zone, some custom rendering can be applied directly. \u53ef\u4ee5\u76f4\u63a5\u5e94\u7528\u67d0\u4e9b\u81ea\u5b9a\u4e49\u6e32\u67d3\uff0c\u800c\u4e0d\u662f\u6e32\u67d3\u5df2\u4ece\u533a\u57df\u4e2d\u5220\u9664\u7684\u5f62\u72b6\u3002 One advantage of reusing the shape is that its template might contain some complex logic that is not easily reusable. \u91cd\u7528\u5f62\u72b6\u7684\u4e00\u4e2a\u4f18\u70b9\u662f\u5176\u6a21\u677f\u53ef\u80fd\u5305\u542b\u4e00\u4e9b\u4e0d\u6613\u91cd\u590d\u4f7f\u7528\u7684\u590d\u6742\u903b\u8f91\u3002 This is the case for the MarkdownPart shape for instance, as it will have to convert some markdown content to HTML. \u4f8b\u5982\uff0c\u201cMarkdownPart\u201d\u5f62\u72b6\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u5c06\u4e00\u4e9b\u964d\u4ef7\u5185\u5bb9\u8f6c\u6362\u4e3aHTML\u3002 The TitlePart however could easily be ignored and the Content template directly access the Title property of this shape. \u7136\u800c\uff0c TitlePart \u5f88\u5bb9\u6613\u88ab\u5ffd\u7565\uff0c\u800c__Content__\u6a21\u677f\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e2a\u5f62\u72b6\u7684 Title \u5c5e\u6027\u3002","title":"\u5185\u5bb9Project.liquid"},{"location":"OrchardCore.Modules/OrchardCore.Title/","text":"Title (OrchardCore.Title) \u6807\u9898\uff08OrchardCore.Title\uff09 The Title module provides a Title Part that lets user define a title for a content item. \u6807\u9898\u6a21\u5757\u63d0\u4f9b \u6807\u9898\u90e8\u5206 \uff0c\u5141\u8bb8\u7528\u6237\u5b9a\u4e49\u5185\u5bb9\u9879\u7684\u6807\u9898\u3002 It also defines the DisplayText property of the ContentItemMetadata aspect. \u5b83\u8fd8\u5b9a\u4e49\u4e86 ContentItemMetadata \u65b9\u9762\u7684 DisplayText \u5c5e\u6027\u3002 Theming \u4e3b\u9898\u5316 The following shapes are rendered when the Title Part is attached to a content type. \u5f53 \u6807\u9898\u90e8\u5206 \u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u65f6\uff0c\u5c06\u5448\u73b0\u4ee5\u4e0b\u5f62\u72b6\u3002 | Name | Display Type | Default Location | Model Type | |\u540d\u79f0|\u663e\u793a\u7c7b\u578b|\u9ed8\u8ba4\u4f4d\u7f6e|\u578b\u53f7\u7c7b\u578b| | ------| ------------ |----------------- | ---------- | | ------ | ------------ | ----------------- | ---------- | | TitlePart | Detail | Header:5 | TitlePartViewModel | | TitlePart | \u7ec6\u8282 | \u6807\u9898\uff1a5 | TitlePartViewModel | | TitlePart | Summary | Header:10 | TitlePartViewModel | | TitlePart | \u6458\u8981 | \u6807\u9898\uff1a10 | TitlePartViewModel | View Model \u67e5\u770b\u6a21\u578b The following properties are available in the TitlePartViewModel class. TitlePartViewModel \u7c7b\u4e2d\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u5c5e\u6027\u3002 | Name | Type | Description | |\u540d\u79f0|\u8f93\u5165|\u8bf4\u660e| | -----| ---- |------------ | | ----- | ---- | ------------ | | Title | string | The title property of the part. | \u6807\u9898 | string |\u96f6\u4ef6\u7684title\u5c5e\u6027\u3002 | TitlePart | TitlePart | The TitlePart instance. | TitlePart | TitlePart | TitlePart \u5b9e\u4f8b\u3002","title":"Title"},{"location":"OrchardCore.Modules/OrchardCore.Title/#title-orchardcoretitle","text":"","title":"Title (OrchardCore.Title)"},{"location":"OrchardCore.Modules/OrchardCore.Title/#orchardcoretitle","text":"The Title module provides a Title Part that lets user define a title for a content item. \u6807\u9898\u6a21\u5757\u63d0\u4f9b \u6807\u9898\u90e8\u5206 \uff0c\u5141\u8bb8\u7528\u6237\u5b9a\u4e49\u5185\u5bb9\u9879\u7684\u6807\u9898\u3002 It also defines the DisplayText property of the ContentItemMetadata aspect. \u5b83\u8fd8\u5b9a\u4e49\u4e86 ContentItemMetadata \u65b9\u9762\u7684 DisplayText \u5c5e\u6027\u3002","title":"\u6807\u9898\uff08OrchardCore.Title\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Title/#theming","text":"","title":"Theming"},{"location":"OrchardCore.Modules/OrchardCore.Title/#_1","text":"The following shapes are rendered when the Title Part is attached to a content type. \u5f53 \u6807\u9898\u90e8\u5206 \u9644\u52a0\u5230\u5185\u5bb9\u7c7b\u578b\u65f6\uff0c\u5c06\u5448\u73b0\u4ee5\u4e0b\u5f62\u72b6\u3002 | Name | Display Type | Default Location | Model Type | |\u540d\u79f0|\u663e\u793a\u7c7b\u578b|\u9ed8\u8ba4\u4f4d\u7f6e|\u578b\u53f7\u7c7b\u578b| | ------| ------------ |----------------- | ---------- | | ------ | ------------ | ----------------- | ---------- | | TitlePart | Detail | Header:5 | TitlePartViewModel | | TitlePart | \u7ec6\u8282 | \u6807\u9898\uff1a5 | TitlePartViewModel | | TitlePart | Summary | Header:10 | TitlePartViewModel | | TitlePart | \u6458\u8981 | \u6807\u9898\uff1a10 | TitlePartViewModel |","title":"\u4e3b\u9898\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Title/#view-model","text":"","title":"View Model"},{"location":"OrchardCore.Modules/OrchardCore.Title/#_2","text":"The following properties are available in the TitlePartViewModel class. TitlePartViewModel \u7c7b\u4e2d\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u5c5e\u6027\u3002 | Name | Type | Description | |\u540d\u79f0|\u8f93\u5165|\u8bf4\u660e| | -----| ---- |------------ | | ----- | ---- | ------------ | | Title | string | The title property of the part. | \u6807\u9898 | string |\u96f6\u4ef6\u7684title\u5c5e\u6027\u3002 | TitlePart | TitlePart | The TitlePart instance. | TitlePart | TitlePart | TitlePart \u5b9e\u4f8b\u3002","title":"\u67e5\u770b\u6a21\u578b"},{"location":"OrchardCore.Modules/OrchardCore.Widgets/","text":"Widgets (OrchardCore.Widgets) \u5c0f\u90e8\u4ef6\uff08OrchardCore.Widgets\uff09 Widgets are content items of a specific category (stereotype) that can be rendered in custom locations of a page. \u7a97\u53e3\u5c0f\u90e8\u4ef6\u662f\u7279\u5b9a\u7c7b\u522b\uff08\u6784\u9020\u578b\uff09\u7684\u5185\u5bb9\u9879\uff0c\u53ef\u4ee5\u5728\u9875\u9762\u7684\u81ea\u5b9a\u4e49\u4f4d\u7f6e\u5448\u73b0\u3002 The Widgets modules provides a Widget stereotype and some templates to render it. Widgets are used by different modules that need to Widgets\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a Widget \u6784\u9020\u578b\u548c\u4e00\u4e9b\u6a21\u677f\u6765\u5448\u73b0\u5b83\u3002\u5c0f\u90e8\u4ef6\u7531\u9700\u8981\u7684\u4e0d\u540c\u6a21\u5757\u4f7f\u7528 render specialized pieces of content like Layers or Forms. \u6e32\u67d3\u4e13\u95e8\u7684\u5185\u5bb9\uff0c\u5982\u56fe\u5c42\u6216\u8868\u5355\u3002 Creating custom Widgets \u521b\u5efa\u81ea\u5b9a\u4e49\u5c0f\u90e8\u4ef6 Many types of Widgets can be created and the default recipes do create some custom ones like Paragraph , Blockquote , MediaWidget that you can \u53ef\u4ee5\u521b\u5efa\u8bb8\u591a\u7c7b\u578b\u7684\u5c0f\u90e8\u4ef6\uff0c\u9ed8\u8ba4\u7684\u914d\u65b9\u4f1a\u521b\u5efa\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u5c0f\u90e8\u4ef6\uff0c\u5982 Paragraph \uff0c Blockquote \uff0c MediaWidget \uff0c\u4f60\u53ef\u4ee5 use as examples. \u7528\u4f5c\u4f8b\u5b50\u3002 Widgets are content items, and as such they can be composed of content fields and content parts. For instance the Paragraph widget that is included with the \u7a97\u53e3\u5c0f\u90e8\u4ef6\u662f\u5185\u5bb9\u9879\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u7531\u5185\u5bb9\u5b57\u6bb5\u548c\u5185\u5bb9\u90e8\u5206\u7ec4\u6210\u3002\u4f8b\u5982\uff0c\u5305\u542b\u5728\u5185\u7684 Paragraph \u5c0f\u90e8\u4ef6 TheBlogTheme recipe is made out of an Html field with a Wysiwyg editor. TheBlogTheme\u914d\u65b9\u7531\u5e26\u6709Wysiwyg\u7f16\u8f91\u5668\u7684Html\u5b57\u6bb5\u7ec4\u6210\u3002 Widgets can then be composed from the Admin UI during the lifetime of the site, from migrations files to include them as part of custom modules, or recipe files \u7136\u540e\uff0c\u53ef\u4ee5\u5728\u7ad9\u70b9\u751f\u547d\u5468\u671f\u5185\u4eceAdmin UI\u7ec4\u5408\u7a97\u53e3\u5c0f\u90e8\u4ef6\uff0c\u4ece\u8fc1\u79fb\u6587\u4ef6\u7ec4\u6210\u7a97\u53e3\u5c0f\u90e8\u4ef6\uff0c\u5c06\u5176\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u6a21\u5757\u6216\u914d\u65b9\u6587\u4ef6\u7684\u4e00\u90e8\u5206\u5305\u542b\u5728\u5185 when a site is set up. The only requirement to create a Widget is to mark a content type with the Widget stereotype. By doing so the different services that look \u8bbe\u7f6e\u7f51\u7ad9\u65f6\u3002\u521b\u5efaWidget\u7684\u552f\u4e00\u8981\u6c42\u662f\u4f7f\u7528 Widget \u6784\u9020\u578b\u6807\u8bb0\u5185\u5bb9\u7c7b\u578b\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u770b\u8d77\u6765\u4e0d\u540c\u7684\u670d\u52a1 for Widgets will treat this content item in accordance. This is how the Layers module, or the Page editor can display the list of available Widget types. \u5bf9\u4e8e\u5c0f\u90e8\u4ef6\uff0c\u5c06\u6309\u7167\u5904\u7406\u6b64\u5185\u5bb9\u9879\u3002\u8fd9\u5c31\u662f\u56fe\u5c42\u6a21\u5757\u6216\u9875\u9762\u7f16\u8f91\u5668\u53ef\u4ee5\u663e\u793a\u53ef\u7528\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7c7b\u578b\u5217\u8868\u7684\u65b9\u5f0f\u3002 Theming \u4e3b\u9898\u5316 Because Widget is a stereotype, all Widget content items are rendered from a main shape named Widget . \u56e0\u4e3a Widget \u662f\u4e00\u4e2a\u523b\u677f\u5370\u8c61\uff0c\u6240\u6709Widget\u5185\u5bb9\u9879\u90fd\u662f\u4ece\u540d\u4e3a Widget \u7684\u4e3b\u8981\u5f62\u72b6\u6e32\u67d3\u7684\u3002 This main shape's template has access to these properties: \u6b64\u4e3b\u8981\u5f62\u72b6\u7684\u6a21\u677f\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u5c5e\u6027\uff1a | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.ContentItem | The Widget content item. | | Model.ContentItem | Widget\u5185\u5bb9\u9879\u3002 | | Model.Content | A list of inner shapes to display. It's populated by all the fields and parts the widget is composed of. | | Model.Content |\u8981\u663e\u793a\u7684\u5185\u90e8\u5f62\u72b6\u5217\u8868\u3002\u5b83\u7531\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7ec4\u6210\u7684\u6240\u6709\u5b57\u6bb5\u548c\u90e8\u5206\u7ec4\u6210\u3002 | It also contains these specific zones, which are not used most of the time and can be ignored when creating custom templates for \u5b83\u8fd8\u5305\u542b\u8fd9\u4e9b\u7279\u5b9a\u533a\u57df\uff0c\u8fd9\u4e9b\u533a\u57df\u5728\u5927\u591a\u6570\u65f6\u95f4\u4e0d\u4f7f\u7528\uff0c\u5728\u521b\u5efa\u81ea\u5b9a\u4e49\u6a21\u677f\u65f6\u53ef\u4ee5\u5ffd\u7565 the website front-end. \u7f51\u7ad9\u524d\u7aef\u3002 | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.Header | The shapes to render in the widget's header. | | Model.Header |\u8981\u5728\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u6807\u9898\u4e2d\u5448\u73b0\u7684\u5f62\u72b6\u3002 | | Model.Meta | The shapes to render in the widget's metadata zone. | | Model.Meta |\u8981\u5728\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u5143\u6570\u636e\u533a\u57df\u4e2d\u5448\u73b0\u7684\u5f62\u72b6\u3002 | | Model.Footer | The shapes to render in the widget's footer. | | Model.Footer |\u8981\u5728\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u9875\u811a\u4e2d\u5448\u73b0\u7684\u5f62\u72b6\u3002 | The shape also contains all the properties common to all shapes like Classes , Id and Attributes . \u5f62\u72b6\u8fd8\u5305\u542b\u6240\u6709\u5f62\u72b6\u5171\u6709\u7684\u6240\u6709\u5c5e\u6027\uff0c\u5982 Classes \uff0c Id \u548c Attributes \u3002 Customizing Widget templates \u81ea\u5b9a\u4e49 Widget \u6a21\u677f The Widget shape is used to render a Widget. The default template will render something like this: Widget \u5f62\u72b6\u7528\u4e8e\u6e32\u67d3Widget\u3002\u9ed8\u8ba4\u6a21\u677f\u5c06\u5448\u73b0\u5982\u4e0b\u5185\u5bb9\uff1a <div class=\"widget-container\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><div class =\u201cwidget-container\u201d></font> <div class=\"widget-container-title\"> <h2>A Paragraph</h2> </div> <div class=\"widget widget-html-widget\"> <div class=\"widget-body\"> <p>This is a paragraph</p> </div> </div> </div> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ DIV></font> If the HTML contains <div class=\"widget-container\"> then your widget has been rendered by the Layers modules which will add this automatically as it needs to \u5982\u679cHTML\u5305\u542b <div class =\u201cwidget-container\u201d> \u90a3\u4e48\u4f60\u7684\u5c0f\u90e8\u4ef6\u5df2\u7531\u5c42\u6a21\u5757\u5448\u73b0\uff0c\u5b83\u5c06\u6839\u636e\u9700\u8981\u81ea\u52a8\u6dfb\u52a0 be able to render a title, and uses it as a container for both the title and the widget's actual content. \u80fd\u591f\u5448\u73b0\u6807\u9898\uff0c\u5e76\u5c06\u5176\u7528\u4f5c\u6807\u9898\u548c\u5c0f\u90e8\u4ef6\u5b9e\u9645\u5185\u5bb9\u7684\u5bb9\u5668\u3002 The actual template for the Widget shape can be found in src/OrchardCore.Modules/OrchardCore.Widgets/Views/Widgets.cshtml but can be simplified to this: Widget \u5f62\u72b6\u7684\u5b9e\u9645\u6a21\u677f\u53ef\u4ee5\u5728 src / OrchardCore.Modules / OrchardCore.Widgets / Views / Widgets.cshtml \u4e2d\u627e\u5230\uff0c\u4f46\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a <div class=\"{{ Model.Classes | join \" \"}}\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><div class =\u201c{{Model.Classes | join\u201d\u201c}}\u201d></font> <div class=\"widget-body\"> {{ Model.Content | shape_render }} </div> </div> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ DIV></font> <div class=\"@String.Join(\" \", Model.Classes.ToArray())\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><div class =\u201c@ String.Join\uff08\u201d\u201c\uff0cModel.Classes.ToArray\uff08\uff09\uff09\u201d></font> <div class=\"widget-body\"> @await DisplayAsync(Model.Content) </div> </div> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ DIV></font> Alternates are available per Content Type. \u6bcf\u79cd\u5185\u5bb9\u7c7b\u578b\u90fd\u6709\u66ff\u4ee3\u54c1\u3002 | Definition | Template | Filename| |\u5b9a\u4e49|\u6a21\u677f|\u6587\u4ef6\u540d| | ---------- | --------- | ------------ | | ---------- | --------- | ------------ | | Widget__[ContentType] | Widget__Paragraph | Widget-Paragraph.cshtml | | Widget __ [ContentType] | Widget__Paragraph | Widget-Paragraph.cshtml | Customizing the Widget_Wrapper template \u81ea\u5b9a\u4e49 Widget_Wrapper \u6a21\u677f As mentioned in the previous section, the Layers module uses a template to wrap the widgets that it renders and insert a custom title for each of them. \u5982\u4e0a\u4e00\u8282\u6240\u8ff0\uff0c\u56fe\u5c42\u6a21\u5757\u4f7f\u7528\u6a21\u677f\u6765\u5305\u88c5\u5b83\u5448\u73b0\u7684\u5c0f\u90e8\u4ef6\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5c0f\u90e8\u4ef6\u63d2\u5165\u81ea\u5b9a\u4e49\u6807\u9898\u3002 The actual template for this wrapper shape can be found in src/OrchardCore.Modules/OrchardCore.Layers/Views/Widget.Wrapper.cshtml . \u8fd9\u4e2a\u5305\u88c5\u5668\u5f62\u72b6\u7684\u5b9e\u9645\u6a21\u677f\u53ef\u4ee5\u5728 src / OrchardCore.Modules / OrchardCore.Layers / Views / Widget.Wrapper.cshtml \u4e2d\u627e\u5230\u3002 A common requirement is to remove these tags, which can be done by creating this template instead: \u4e00\u4e2a\u5e38\u89c1\u7684\u8981\u6c42\u662f\u5220\u9664\u8fd9\u4e9b\u6807\u8bb0\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u6b64\u6a21\u677f\u6765\u5b8c\u6210\uff1a {{ Model.Content | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content | shape_render}}</font> @await DisplayAsync(Model.Content) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@awa DisplayAsync\uff08Model.Content\uff09</font> Optionally you change \u60a8\u53ef\u4ee5\u9009\u62e9\u66f4\u6539 | Definition | Template | Filename| |\u5b9a\u4e49|\u6a21\u677f|\u6587\u4ef6\u540d| | ---------- | --------- | ------------ | | ---------- | --------- | ------------ | | Widget_Wrapper__[ContentType] | Widget_Wrapper__Paragraph | Widget-Paragraph.Wrapper.cshtml | | Widget_Wrapper __ [ContentType] | Widget_Wrapper__Paragraph | Widget-Paragraph.Wrapper.cshtml | | Widget_Wrapper__Zone__[ContentZone] | Widget_Wrapper__Zone__Footer | Widget-Zone-Footer.Wrapper.cshtml | | Widget_Wrapper__Zone __ [ContentZone] | Widget_Wrapper__Zone__Footer | Widget-Zone-Footer.Wrapper.cshtml |","title":"Widgets"},{"location":"OrchardCore.Modules/OrchardCore.Widgets/#widgets-orchardcorewidgets","text":"","title":"Widgets (OrchardCore.Widgets)"},{"location":"OrchardCore.Modules/OrchardCore.Widgets/#orchardcorewidgets","text":"Widgets are content items of a specific category (stereotype) that can be rendered in custom locations of a page. \u7a97\u53e3\u5c0f\u90e8\u4ef6\u662f\u7279\u5b9a\u7c7b\u522b\uff08\u6784\u9020\u578b\uff09\u7684\u5185\u5bb9\u9879\uff0c\u53ef\u4ee5\u5728\u9875\u9762\u7684\u81ea\u5b9a\u4e49\u4f4d\u7f6e\u5448\u73b0\u3002 The Widgets modules provides a Widget stereotype and some templates to render it. Widgets are used by different modules that need to Widgets\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a Widget \u6784\u9020\u578b\u548c\u4e00\u4e9b\u6a21\u677f\u6765\u5448\u73b0\u5b83\u3002\u5c0f\u90e8\u4ef6\u7531\u9700\u8981\u7684\u4e0d\u540c\u6a21\u5757\u4f7f\u7528 render specialized pieces of content like Layers or Forms. \u6e32\u67d3\u4e13\u95e8\u7684\u5185\u5bb9\uff0c\u5982\u56fe\u5c42\u6216\u8868\u5355\u3002","title":"\u5c0f\u90e8\u4ef6\uff08OrchardCore.Widgets\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Widgets/#creating-custom-widgets","text":"","title":"Creating custom Widgets"},{"location":"OrchardCore.Modules/OrchardCore.Widgets/#_1","text":"Many types of Widgets can be created and the default recipes do create some custom ones like Paragraph , Blockquote , MediaWidget that you can \u53ef\u4ee5\u521b\u5efa\u8bb8\u591a\u7c7b\u578b\u7684\u5c0f\u90e8\u4ef6\uff0c\u9ed8\u8ba4\u7684\u914d\u65b9\u4f1a\u521b\u5efa\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u5c0f\u90e8\u4ef6\uff0c\u5982 Paragraph \uff0c Blockquote \uff0c MediaWidget \uff0c\u4f60\u53ef\u4ee5 use as examples. \u7528\u4f5c\u4f8b\u5b50\u3002 Widgets are content items, and as such they can be composed of content fields and content parts. For instance the Paragraph widget that is included with the \u7a97\u53e3\u5c0f\u90e8\u4ef6\u662f\u5185\u5bb9\u9879\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u7531\u5185\u5bb9\u5b57\u6bb5\u548c\u5185\u5bb9\u90e8\u5206\u7ec4\u6210\u3002\u4f8b\u5982\uff0c\u5305\u542b\u5728\u5185\u7684 Paragraph \u5c0f\u90e8\u4ef6 TheBlogTheme recipe is made out of an Html field with a Wysiwyg editor. TheBlogTheme\u914d\u65b9\u7531\u5e26\u6709Wysiwyg\u7f16\u8f91\u5668\u7684Html\u5b57\u6bb5\u7ec4\u6210\u3002 Widgets can then be composed from the Admin UI during the lifetime of the site, from migrations files to include them as part of custom modules, or recipe files \u7136\u540e\uff0c\u53ef\u4ee5\u5728\u7ad9\u70b9\u751f\u547d\u5468\u671f\u5185\u4eceAdmin UI\u7ec4\u5408\u7a97\u53e3\u5c0f\u90e8\u4ef6\uff0c\u4ece\u8fc1\u79fb\u6587\u4ef6\u7ec4\u6210\u7a97\u53e3\u5c0f\u90e8\u4ef6\uff0c\u5c06\u5176\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u6a21\u5757\u6216\u914d\u65b9\u6587\u4ef6\u7684\u4e00\u90e8\u5206\u5305\u542b\u5728\u5185 when a site is set up. The only requirement to create a Widget is to mark a content type with the Widget stereotype. By doing so the different services that look \u8bbe\u7f6e\u7f51\u7ad9\u65f6\u3002\u521b\u5efaWidget\u7684\u552f\u4e00\u8981\u6c42\u662f\u4f7f\u7528 Widget \u6784\u9020\u578b\u6807\u8bb0\u5185\u5bb9\u7c7b\u578b\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u770b\u8d77\u6765\u4e0d\u540c\u7684\u670d\u52a1 for Widgets will treat this content item in accordance. This is how the Layers module, or the Page editor can display the list of available Widget types. \u5bf9\u4e8e\u5c0f\u90e8\u4ef6\uff0c\u5c06\u6309\u7167\u5904\u7406\u6b64\u5185\u5bb9\u9879\u3002\u8fd9\u5c31\u662f\u56fe\u5c42\u6a21\u5757\u6216\u9875\u9762\u7f16\u8f91\u5668\u53ef\u4ee5\u663e\u793a\u53ef\u7528\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7c7b\u578b\u5217\u8868\u7684\u65b9\u5f0f\u3002","title":"\u521b\u5efa\u81ea\u5b9a\u4e49\u5c0f\u90e8\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Widgets/#theming","text":"","title":"Theming"},{"location":"OrchardCore.Modules/OrchardCore.Widgets/#_2","text":"Because Widget is a stereotype, all Widget content items are rendered from a main shape named Widget . \u56e0\u4e3a Widget \u662f\u4e00\u4e2a\u523b\u677f\u5370\u8c61\uff0c\u6240\u6709Widget\u5185\u5bb9\u9879\u90fd\u662f\u4ece\u540d\u4e3a Widget \u7684\u4e3b\u8981\u5f62\u72b6\u6e32\u67d3\u7684\u3002 This main shape's template has access to these properties: \u6b64\u4e3b\u8981\u5f62\u72b6\u7684\u6a21\u677f\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u5c5e\u6027\uff1a | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.ContentItem | The Widget content item. | | Model.ContentItem | Widget\u5185\u5bb9\u9879\u3002 | | Model.Content | A list of inner shapes to display. It's populated by all the fields and parts the widget is composed of. | | Model.Content |\u8981\u663e\u793a\u7684\u5185\u90e8\u5f62\u72b6\u5217\u8868\u3002\u5b83\u7531\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7ec4\u6210\u7684\u6240\u6709\u5b57\u6bb5\u548c\u90e8\u5206\u7ec4\u6210\u3002 | It also contains these specific zones, which are not used most of the time and can be ignored when creating custom templates for \u5b83\u8fd8\u5305\u542b\u8fd9\u4e9b\u7279\u5b9a\u533a\u57df\uff0c\u8fd9\u4e9b\u533a\u57df\u5728\u5927\u591a\u6570\u65f6\u95f4\u4e0d\u4f7f\u7528\uff0c\u5728\u521b\u5efa\u81ea\u5b9a\u4e49\u6a21\u677f\u65f6\u53ef\u4ee5\u5ffd\u7565 the website front-end. \u7f51\u7ad9\u524d\u7aef\u3002 | Property | Description | |\u8d22\u4ea7|\u8bf4\u660e| | --------- | ------------ | | --------- | ------------ | | Model.Header | The shapes to render in the widget's header. | | Model.Header |\u8981\u5728\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u6807\u9898\u4e2d\u5448\u73b0\u7684\u5f62\u72b6\u3002 | | Model.Meta | The shapes to render in the widget's metadata zone. | | Model.Meta |\u8981\u5728\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u5143\u6570\u636e\u533a\u57df\u4e2d\u5448\u73b0\u7684\u5f62\u72b6\u3002 | | Model.Footer | The shapes to render in the widget's footer. | | Model.Footer |\u8981\u5728\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7684\u9875\u811a\u4e2d\u5448\u73b0\u7684\u5f62\u72b6\u3002 | The shape also contains all the properties common to all shapes like Classes , Id and Attributes . \u5f62\u72b6\u8fd8\u5305\u542b\u6240\u6709\u5f62\u72b6\u5171\u6709\u7684\u6240\u6709\u5c5e\u6027\uff0c\u5982 Classes \uff0c Id \u548c Attributes \u3002","title":"\u4e3b\u9898\u5316"},{"location":"OrchardCore.Modules/OrchardCore.Widgets/#customizing-widget-templates","text":"","title":"Customizing Widget templates"},{"location":"OrchardCore.Modules/OrchardCore.Widgets/#widget","text":"The Widget shape is used to render a Widget. The default template will render something like this: Widget \u5f62\u72b6\u7528\u4e8e\u6e32\u67d3Widget\u3002\u9ed8\u8ba4\u6a21\u677f\u5c06\u5448\u73b0\u5982\u4e0b\u5185\u5bb9\uff1a <div class=\"widget-container\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><div class =\u201cwidget-container\u201d></font> <div class=\"widget-container-title\"> <h2>A Paragraph</h2> </div> <div class=\"widget widget-html-widget\"> <div class=\"widget-body\"> <p>This is a paragraph</p> </div> </div> </div> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ DIV></font> If the HTML contains <div class=\"widget-container\"> then your widget has been rendered by the Layers modules which will add this automatically as it needs to \u5982\u679cHTML\u5305\u542b <div class =\u201cwidget-container\u201d> \u90a3\u4e48\u4f60\u7684\u5c0f\u90e8\u4ef6\u5df2\u7531\u5c42\u6a21\u5757\u5448\u73b0\uff0c\u5b83\u5c06\u6839\u636e\u9700\u8981\u81ea\u52a8\u6dfb\u52a0 be able to render a title, and uses it as a container for both the title and the widget's actual content. \u80fd\u591f\u5448\u73b0\u6807\u9898\uff0c\u5e76\u5c06\u5176\u7528\u4f5c\u6807\u9898\u548c\u5c0f\u90e8\u4ef6\u5b9e\u9645\u5185\u5bb9\u7684\u5bb9\u5668\u3002 The actual template for the Widget shape can be found in src/OrchardCore.Modules/OrchardCore.Widgets/Views/Widgets.cshtml but can be simplified to this: Widget \u5f62\u72b6\u7684\u5b9e\u9645\u6a21\u677f\u53ef\u4ee5\u5728 src / OrchardCore.Modules / OrchardCore.Widgets / Views / Widgets.cshtml \u4e2d\u627e\u5230\uff0c\u4f46\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a <div class=\"{{ Model.Classes | join \" \"}}\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><div class =\u201c{{Model.Classes | join\u201d\u201c}}\u201d></font> <div class=\"widget-body\"> {{ Model.Content | shape_render }} </div> </div> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ DIV></font> <div class=\"@String.Join(\" \", Model.Classes.ToArray())\"> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"><div class =\u201c@ String.Join\uff08\u201d\u201c\uff0cModel.Classes.ToArray\uff08\uff09\uff09\u201d></font> <div class=\"widget-body\"> @await DisplayAsync(Model.Content) </div> </div> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></ DIV></font> Alternates are available per Content Type. \u6bcf\u79cd\u5185\u5bb9\u7c7b\u578b\u90fd\u6709\u66ff\u4ee3\u54c1\u3002 | Definition | Template | Filename| |\u5b9a\u4e49|\u6a21\u677f|\u6587\u4ef6\u540d| | ---------- | --------- | ------------ | | ---------- | --------- | ------------ | | Widget__[ContentType] | Widget__Paragraph | Widget-Paragraph.cshtml | | Widget __ [ContentType] | Widget__Paragraph | Widget-Paragraph.cshtml |","title":"\u81ea\u5b9a\u4e49Widget\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Widgets/#customizing-the-widget_wrapper-template","text":"","title":"Customizing the Widget_Wrapper template"},{"location":"OrchardCore.Modules/OrchardCore.Widgets/#widget_wrapper","text":"As mentioned in the previous section, the Layers module uses a template to wrap the widgets that it renders and insert a custom title for each of them. \u5982\u4e0a\u4e00\u8282\u6240\u8ff0\uff0c\u56fe\u5c42\u6a21\u5757\u4f7f\u7528\u6a21\u677f\u6765\u5305\u88c5\u5b83\u5448\u73b0\u7684\u5c0f\u90e8\u4ef6\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5c0f\u90e8\u4ef6\u63d2\u5165\u81ea\u5b9a\u4e49\u6807\u9898\u3002 The actual template for this wrapper shape can be found in src/OrchardCore.Modules/OrchardCore.Layers/Views/Widget.Wrapper.cshtml . \u8fd9\u4e2a\u5305\u88c5\u5668\u5f62\u72b6\u7684\u5b9e\u9645\u6a21\u677f\u53ef\u4ee5\u5728 src / OrchardCore.Modules / OrchardCore.Layers / Views / Widget.Wrapper.cshtml \u4e2d\u627e\u5230\u3002 A common requirement is to remove these tags, which can be done by creating this template instead: \u4e00\u4e2a\u5e38\u89c1\u7684\u8981\u6c42\u662f\u5220\u9664\u8fd9\u4e9b\u6807\u8bb0\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u6b64\u6a21\u677f\u6765\u5b8c\u6210\uff1a {{ Model.Content | shape_render }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Model.Content | shape_render}}</font> @await DisplayAsync(Model.Content) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">@awa DisplayAsync\uff08Model.Content\uff09</font> Optionally you change \u60a8\u53ef\u4ee5\u9009\u62e9\u66f4\u6539 | Definition | Template | Filename| |\u5b9a\u4e49|\u6a21\u677f|\u6587\u4ef6\u540d| | ---------- | --------- | ------------ | | ---------- | --------- | ------------ | | Widget_Wrapper__[ContentType] | Widget_Wrapper__Paragraph | Widget-Paragraph.Wrapper.cshtml | | Widget_Wrapper __ [ContentType] | Widget_Wrapper__Paragraph | Widget-Paragraph.Wrapper.cshtml | | Widget_Wrapper__Zone__[ContentZone] | Widget_Wrapper__Zone__Footer | Widget-Zone-Footer.Wrapper.cshtml | | Widget_Wrapper__Zone __ [ContentZone] | Widget_Wrapper__Zone__Footer | Widget-Zone-Footer.Wrapper.cshtml |","title":"\u81ea\u5b9a\u4e49Widget_Wrapper\u6a21\u677f"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/","text":"Workflows (OrchardCore.Workflows) \u5de5\u4f5c\u6d41\u7a0b\uff08OrchardCore.Workflows\uff09 The Workflows module provides a way for users to visually implement business rules using flowchart diagrams. Workflows\u6a21\u5757\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u79cd\u4f7f\u7528\u6d41\u7a0b\u56fe\u53ef\u89c6\u5730\u5b9e\u73b0\u4e1a\u52a1\u89c4\u5219\u7684\u65b9\u6cd5\u3002 General Concepts \u4e00\u822c\u6982\u5ff5 A workflow is a collection of activities that are connected to eachother. These connections are called transitions . \u5de5\u4f5c\u6d41\u7a0b\u662f \u6d3b\u52a8 \u7684\u96c6\u5408\uff0c\u5b83\u4eec\u5f7c\u6b64\u8fde\u63a5\u3002\u8fd9\u4e9b\u8fde\u63a5\u79f0\u4e3a \u8f6c\u6362 \u3002 Activities and their transitions are stored in a Workflow Definition . \u6d3b\u52a8\u53ca\u5176\u8f6c\u6362\u5b58\u50a8\u5728 \u5de5\u4f5c\u6d41\u5b9a\u4e49 \u4e2d\u3002 A workflow is essentially a visual script, where each activity is a statement of that script. \u5de5\u4f5c\u6d41\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u53ef\u89c6\u811a\u672c\uff0c\u5176\u4e2d\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u662f\u8be5\u811a\u672c\u7684\u58f0\u660e\u3002 There are two types of activities: Task and Event . \u6709\u4e24\u79cd\u7c7b\u578b\u7684\u6d3b\u52a8\uff1a \u4efb\u52a1 \u548c \u4e8b\u4ef6 \u3002 A Task activity typically performs an action, such as publishing a content item, while an Event activity typically listens for an event to happen before execution continues. Task\u6d3b\u52a8\u901a\u5e38\u6267\u884c\u64cd\u4f5c\uff0c\u4f8b\u5982\u53d1\u5e03\u5185\u5bb9\u9879\uff0c\u800cEvent\u6d3b\u52a8\u901a\u5e38\u5728\u6267\u884c\u7ee7\u7eed\u4e4b\u524d\u4fa6\u542c\u4e8b\u4ef6\u3002 In order for a workflow to execute, at least one activity must be marked as the start of the workflow . Only Event activities can be marked as the start of a workflow. An example of such an event activity is Content Created , which executes whenever a content item is created. \u4e3a\u4e86\u6267\u884c\u5de5\u4f5c\u6d41\uff0c\u5fc5\u987b\u81f3\u5c11\u5c06\u4e00\u4e2a\u6d3b\u52a8\u6807\u8bb0\u4e3a\u5de5\u4f5c\u6d41 \u7684 \u5f00\u59cb\u3002\u53ea\u6709\u4e8b\u4ef6\u6d3b\u52a8\u624d\u80fd\u6807\u8bb0\u4e3a\u5de5\u4f5c\u6d41\u7a0b\u7684\u5f00\u59cb\u3002\u6b64\u7c7b\u4e8b\u4ef6\u6d3b\u52a8\u7684\u4e00\u4e2a\u793a\u4f8b\u662f_Content Created_\uff0c\u5b83\u5728\u521b\u5efa\u5185\u5bb9\u9879\u65f6\u6267\u884c\u3002 A workflow can have more than one start event. This allows you to trigger (run) a workflow in response to various types of events. \u5de5\u4f5c\u6d41\u53ef\u4ee5\u6709\u591a\u4e2a\u542f\u52a8\u4e8b\u4ef6\u3002\u8fd9\u5141\u8bb8\u60a8\u89e6\u53d1\uff08\u8fd0\u884c\uff09\u5de5\u4f5c\u6d41\u4ee5\u54cd\u5e94\u5404\u79cd\u7c7b\u578b\u7684\u4e8b\u4ef6\u3002 Each activity has one or more outcomes , which represent a source endpoint from which a connection can be made to the next activity, which are called transitions. \u6bcf\u4e2a\u6d3b\u52a8\u90fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a \u7ed3\u679c \uff0c\u5b83\u4eec\u4ee3\u8868\u4e00\u4e2a\u6e90\u7aef\u70b9\uff0c\u4ece\u8be5\u7aef\u70b9\u53ef\u4ee5\u4e0e\u4e0b\u4e00\u4e2a\u6d3b\u52a8\u5efa\u7acb\u8fde\u63a5\uff0c\u79f0\u4e3a\u8f6c\u6362\u3002 By connecting activities, you are effectively creating a program that can be executed by Orchard in response to a multitude of events. \u901a\u8fc7\u8fde\u63a5\u6d3b\u52a8\uff0c\u60a8\u53ef\u4ee5\u6709\u6548\u5730\u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u7531Orchard\u6267\u884c\u4ee5\u54cd\u5e94\u591a\u4e2a\u4e8b\u4ef6\u3002 Activity Picker (Task / Event) 1.\u6d3b\u52a8\u9009\u62e9\u5668\uff08\u4efb\u52a1/\u4e8b\u4ef6\uff09 Activity actions (click an activity to display activity actions) 2.\u6d3b\u52a8\u64cd\u4f5c\uff08\u5355\u51fb\u6d3b\u52a8\u4ee5\u663e\u793a\u6d3b\u52a8\u64cd\u4f5c\uff09 An activity configured as the starting activity of the workflow. 3.\u914d\u7f6e\u4e3a\u5de5\u4f5c\u6d41\u7684\u8d77\u59cb\u6d3b\u52a8\u7684\u6d3b\u52a8\u3002 An activity. 4.\u4e00\u9879\u6d3b\u52a8\u3002 An Outcome (\"Done\") of an activity. 5.\u6d3b\u52a8\u7684\u7ed3\u679c\uff08\u201c\u5b8c\u6210\u201d\uff09\u3002 A transition between two activities (from \"Content Created\" via the \"Done\" outcome to the \"Send Email\" activity). 6.\u4e24\u4e2a\u6d3b\u52a8\u4e4b\u95f4\u7684\u8f6c\u6362\uff08\u4ece\u201c\u521b\u5efa\u5185\u5bb9\u201d\u5230\u201c\u5b8c\u6210\u201d\u7ed3\u679c\u5230\u201c\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u201d\u6d3b\u52a8\uff09\u3002 The workflow editor design surface. 7.\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u8bbe\u8ba1\u8868\u9762\u3002 Edit the workflow definition properties (Name, Enabled, etc.) 8.\u7f16\u8f91\u5de5\u4f5c\u6d41\u5b9a\u4e49\u5c5e\u6027\uff08\u540d\u79f0\uff0c\u5df2\u542f\u7528\u7b49\uff09 List the workflow instances for this workflow definition. 9.\u5217\u51fa\u6b64\u5de5\u4f5c\u6d41\u5b9a\u4e49\u7684\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002 Vocabulary \u8bcd\u6c47 When working with Orchard Workflows, you will encounter the following terms: \u4f7f\u7528Orchard Workflows\u65f6\uff0c\u60a8\u5c06\u9047\u5230\u4ee5\u4e0b\u672f\u8bed\uff1a Workflow Definition \u5de5\u4f5c\u6d41\u5b9a\u4e49 A document (as in a \"document-DB\" document) that contains all the necessary information about a workflow, such as its name, whether it's enabled or not, its set of activities and their transitions. \u4e00\u4e2a\u6587\u6863\uff08\u5982\u201cdocument-DB\u201d\u6587\u6863\u4e2d\uff09\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\u5de5\u4f5c\u6d41\u7684\u6240\u6709\u5fc5\u8981\u4fe1\u606f\uff0c\u4f8b\u5982\u5176\u540d\u79f0\uff0c\u662f\u5426\u5df2\u542f\u7528\uff0c\u5176\u6d3b\u52a8\u96c6\u53ca\u5176\u8f6c\u6362\u3002 Workflow Instance \u5de5\u4f5c\u6d41\u7a0b\u5b9e\u4f8b A document that represents an \"instance\" of a workflow definition. A workflow instance contains runtime-state of a workflow. Whenever a workflow is started, a new workflow instance is created of a given workflow definition. \u8868\u793a\u5de5\u4f5c\u6d41\u5b9a\u4e49\u7684\u201c\u5b9e\u4f8b\u201d\u7684\u6587\u6863\u3002\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u5305\u542b\u5de5\u4f5c\u6d41\u7684\u8fd0\u884c\u65f6\u72b6\u6001\u3002\u6bcf\u5f53\u542f\u52a8\u5de5\u4f5c\u6d41\u65f6\uff0c\u90fd\u4f1a\u521b\u5efa\u7ed9\u5b9a\u5de5\u4f5c\u6d41\u5b9a\u4e49\u7684\u65b0\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002 Activity \u6d3b\u52a8 A step in a workflow definition. An activity performs an action and provides zero or more outcomes, which are used to connect to the next activity to execute. There are two types of activities: Task and Event. \u5de5\u4f5c\u6d41\u5b9a\u4e49\u4e2d\u7684\u4e00\u4e2a\u6b65\u9aa4\u3002\u6d3b\u52a8\u6267\u884c\u64cd\u4f5c\u5e76\u63d0\u4f9b\u96f6\u4e2a\u6216\u591a\u4e2a\u7ed3\u679c\uff0c\u7528\u4e8e\u8fde\u63a5\u5230\u8981\u6267\u884c\u7684\u4e0b\u4e00\u4e2a\u6d3b\u52a8\u3002\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u6d3b\u52a8\uff1a\u4efb\u52a1\u548c\u4e8b\u4ef6\u3002 Task \u4efb\u52a1 A specialized type of activity. Tasks perform actions such as sending emails, publishing content and making HTTP requests. \u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u6d3b\u52a8\u3002\u4efb\u52a1\u6267\u884c\u8bf8\u5982\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u53d1\u5e03\u5185\u5bb9\u548c\u53d1\u51faHTTP\u8bf7\u6c42\u7b49\u64cd\u4f5c\u3002 Event \u4e8b\u4ef6 A specialized type of activity. Like tasks, events can perform actions, but typically all they do is halt the workflow, awaiting for an event to happen before continuing on to the next activity. When an event is configured as the starting activity of a workflow, that workflow is started when that event is triggered. \u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u6d3b\u52a8\u3002\u4e0e\u4efb\u52a1\u7c7b\u4f3c\uff0c\u4e8b\u4ef6\u53ef\u4ee5\u6267\u884c\u64cd\u4f5c\uff0c\u4f46\u901a\u5e38\u4ed6\u4eec\u6240\u505a\u7684\u53ea\u662f\u505c\u6b62\u5de5\u4f5c\u6d41\uff0c\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f\uff0c\u7136\u540e\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u6d3b\u52a8\u3002\u5c06\u4e8b\u4ef6\u914d\u7f6e\u4e3a\u5de5\u4f5c\u6d41\u7684\u542f\u52a8\u6d3b\u52a8\u65f6\uff0c\u5c06\u5728\u89e6\u53d1\u8be5\u4e8b\u4ef6\u65f6\u542f\u52a8\u8be5\u5de5\u4f5c\u6d41\u3002 Workflow Editor \u5de5\u4f5c\u6d41\u7f16\u8f91\u5668 An editor that allows you to create and manage a workflow definition using a drag & drop visual interface. \u4e00\u79cd\u7f16\u8f91\u5668\uff0c\u5141\u8bb8\u60a8\u4f7f\u7528\u62d6\u653e\u53ef\u89c6\u754c\u9762\u521b\u5efa\u548c\u7ba1\u7406\u5de5\u4f5c\u6d41\u5b9a\u4e49\u3002 Activity Editor \u6d3b\u52a8\u7f16\u8f91\u5668 Most activities expose settings that can be configured via the activity editor. To configure an activity, you can either double-click an activity on the design surface of the workflow editor, or click an activity once to activate a small popup that provides various actions you can perform on an activity. One of these actions is the Edit action. \u5927\u591a\u6570\u6d3b\u52a8\u90fd\u4f1a\u516c\u5f00\u53ef\u4ee5\u901a\u8fc7\u6d3b\u52a8\u7f16\u8f91\u5668\u914d\u7f6e\u7684\u8bbe\u7f6e\u3002\u8981\u914d\u7f6e\u6d3b\u52a8\uff0c\u60a8\u53ef\u4ee5\u53cc\u51fb\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u8bbe\u8ba1\u56fe\u9762\u4e0a\u7684\u6d3b\u52a8\uff0c\u4e5f\u53ef\u4ee5\u5355\u51fb\u6d3b\u52a8\u4e00\u6b21\u4ee5\u6fc0\u6d3b\u4e00\u4e2a\u5c0f\u5f39\u51fa\u7a97\u53e3\uff0c\u8be5\u5f39\u51fa\u7a97\u53e3\u63d0\u4f9b\u60a8\u53ef\u4ee5\u5bf9\u6d3b\u52a8\u6267\u884c\u7684\u5404\u79cd\u64cd\u4f5c\u3002\u5176\u4e2d\u4e00\u4e2a\u64cd\u4f5c\u662f\u7f16\u8f91\u64cd\u4f5c\u3002 Activity Picker \u6d3b\u52a8\u9009\u62e9\u5668 When you are in the Workflow Editor, you use the Activity Picker to add activities to the design surface. Open the activity picker by clicking Add Task or Add Event to add a task or event, respectively. \u5f53\u60a8\u5728\u5de5\u4f5c\u6d41\u7a0b\u7f16\u8f91\u5668\u4e2d\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6d3b\u52a8\u9009\u62e9\u5668\u5c06\u6d3b\u52a8\u6dfb\u52a0\u5230\u8bbe\u8ba1\u56fe\u9762\u3002\u5355\u51fb_Add Task_\u6216_Add Event_\u5206\u522b\u6dfb\u52a0\u4efb\u52a1\u6216\u4e8b\u4ef6\uff0c\u6253\u5f00\u6d3b\u52a8\u9009\u62e9\u5668\u3002 Outcome \u7ed3\u679c Each activity has zero or more outcomes. When an activity has executed, it yields control back to the workflow manager along with a list of outcomes. The workflow manager uses this list of outcomes to determine which activities to execute next. \u6bcf\u9879\u6d3b\u52a8\u90fd\u6709\u96f6\u4e2a\u6216\u591a\u4e2a\u7ed3\u679c\u3002\u6267\u884c\u6d3b\u52a8\u540e\uff0c\u5b83\u4f1a\u5c06\u63a7\u5236\u6743\u8fd4\u56de\u7ed9\u5de5\u4f5c\u6d41\u7a0b\u7ba1\u7406\u5668\u4ee5\u53ca\u7ed3\u679c\u5217\u8868\u3002\u5de5\u4f5c\u6d41\u7ba1\u7406\u5668\u4f7f\u7528\u6b64\u7ed3\u679c\u5217\u8868\u6765\u786e\u5b9a\u63a5\u4e0b\u6765\u8981\u6267\u884c\u7684\u6d3b\u52a8\u3002 Although many activities support multiple outcomes, they typically return only one of them when done executing. For example, the Send Email activity has two possible outcomes: \"Done\" and \"Failed\". When the email was sent successfully, it yields \"Done\" as the outcome, and \"Failed\" otherwise. \u867d\u7136\u8bb8\u591a\u6d3b\u52a8\u652f\u6301\u591a\u79cd\u7ed3\u679c\uff0c\u4f46\u5b83\u4eec\u901a\u5e38\u5728\u6267\u884c\u65f6\u53ea\u8fd4\u56de\u5176\u4e2d\u4e00\u79cd\u3002\u4f8b\u5982\uff0c_Send Email_\u6d3b\u52a8\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u7ed3\u679c\uff1a\u201c\u5b8c\u6210\u201d\u548c\u201c\u5931\u8d25\u201d\u3002\u7535\u5b50\u90ae\u4ef6\u6210\u529f\u53d1\u9001\u540e\uff0c\u4f1a\u4ea7\u751f\u201c\u5b8c\u6210\u201d\u4f5c\u4e3a\u7ed3\u679c\uff0c\u5426\u5219\u201c\u5931\u8d25\u201d\u3002 Transition \u8fc7\u6e21 A transition is the connection between the outcome of one activity to another activity. Transitions are created using drag & drop operations in the workflow editor. \u8f6c\u6362\u662f\u4e00\u4e2a\u6d3b\u52a8\u7684\u7ed3\u679c\u4e0e\u53e6\u4e00\u4e2a\u6d3b\u52a8\u4e4b\u95f4\u7684\u8054\u7cfb\u3002\u4f7f\u7528\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u4e2d\u7684\u62d6\u653e\u64cd\u4f5c\u521b\u5efa\u8fc7\u6e21\u3002 Workflow Manager \u5de5\u4f5c\u6d41\u7a0b\u7ba1\u7406\u5668 A service class that can execute workflows. When a workflow is executed, it takes care of creating a workflow instance which is then executed. \u53ef\u4ee5\u6267\u884c\u5de5\u4f5c\u6d41\u7684\u670d\u52a1\u7c7b\u3002\u6267\u884c\u5de5\u4f5c\u6d41\u65f6\uff0c\u5b83\u4f1a\u8d1f\u8d23\u521b\u5efa\u968f\u540e\u6267\u884c\u7684\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002 Workflow Execution Context \u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u4e0a\u4e0b\u6587 When the Workflow Manager executes a workflow, it creates an object called the Workflow Execution Context. The Workflow Execution Context is a collection of all information relevant to workflow execution. \u5f53Workflow Manager\u6267\u884c\u5de5\u4f5c\u6d41\u65f6\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3aWorkflow Execution Context\u7684\u5bf9\u8c61\u3002\u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u4e0e\u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u76f8\u5173\u7684\u6240\u6709\u4fe1\u606f\u7684\u96c6\u5408\u3002 For example, it contains a reference to the workflow instance, workflow definition, correlation values, input, output and properties. \u4f8b\u5982\uff0c\u5b83\u5305\u542b\u5bf9\u5de5\u4f5c\u6d41\u5b9e\u4f8b\uff0c\u5de5\u4f5c\u6d41\u5b9a\u4e49\uff0c\u76f8\u5173\u503c\uff0c\u8f93\u5165\uff0c\u8f93\u51fa\u548c\u5c5e\u6027\u7684\u5f15\u7528\u3002 Each activity has access to this execution context. \u6bcf\u4e2a\u6d3b\u52a8\u90fd\u53ef\u4ee5\u8bbf\u95ee\u6b64\u6267\u884c\u4e0a\u4e0b\u6587\u3002 Correlation \u5173\u8054 Correlation is the act of associating a workflow instance with one or more identifiers . These identifiers can be anything. For example, when a workflow has the Content Created event as its starting point, the workflow instance will be associated, or rather correlated to the content item ID that was just created. \u5173\u8054\u662f\u5c06\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u4e0e\u4e00\u4e2a\u6216\u591a\u4e2a_identifiers_\u76f8\u5173\u8054\u7684\u884c\u4e3a\u3002\u8fd9\u4e9b\u6807\u8bc6\u7b26\u53ef\u4ee5\u662f\u4efb\u4f55\u5185\u5bb9\u4f8b\u5982\uff0c\u5f53\u5de5\u4f5c\u6d41\u5c06_Content Created_\u4e8b\u4ef6\u4f5c\u4e3a\u5176\u8d77\u70b9\u65f6\uff0c\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u5c06\u4e0e\u521a\u521a\u521b\u5efa\u7684\u5185\u5bb9\u9879ID\u76f8\u5173\u8054\uff0c\u6216\u8005\u66f4\u786e\u5207\u5730\u8bf4_correlated_\u3002 This allows long-running workflow scenarios where only workflow instances associated with a given content item ID are resumed. \u8fd9\u5141\u8bb8\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u5de5\u4f5c\u6d41\u573a\u666f\uff0c\u5176\u4e2d\u4ec5\u6062\u590d\u4e0e\u7ed9\u5b9a\u5185\u5bb9\u9879ID\u76f8\u5173\u8054\u7684\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002 Input \u8f93\u5165 When a workflow is executed, the caller can provide input to the workflow instance. This input is stored in the Input dictionary of the workfow execution context. \u6267\u884c\u5de5\u4f5c\u6d41\u65f6\uff0c\u8c03\u7528\u8005\u53ef\u4ee5\u5411\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u63d0\u4f9b\u8f93\u5165\u3002\u6b64\u8f93\u5165\u5b58\u50a8\u5728\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u201c\u8f93\u5165\u201d\u5b57\u5178\u4e2d\u3002 This is analogous to providing arguments to a function. \u8fd9\u7c7b\u4f3c\u4e8e\u4e3a\u51fd\u6570\u63d0\u4f9b\u53c2\u6570\u3002 Output \u4ea7\u91cf When a workflow executes, each activity can provide output values to the workflow instance. This output is stored in the Output dictionary of the workfow execution context. \u6267\u884c\u5de5\u4f5c\u6d41\u65f6\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u53ef\u4ee5\u5411\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u63d0\u4f9b\u8f93\u51fa\u503c\u3002\u6b64\u8f93\u51fa\u5b58\u50a8\u5728\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u201c\u8f93\u51fa\u201d\u5b57\u5178\u4e2d\u3002 This is analogous to returning values from a function. \u8fd9\u7c7b\u4f3c\u4e8e\u4ece\u51fd\u6570\u8fd4\u56de\u503c\u3002 Properties \u5c5e\u6027 When a workflow executes, each activity can set property values to the workflow instance. These properties are stored in the Properties dictionary of the workfow execution context. \u5f53\u5de5\u4f5c\u6d41\u6267\u884c\u65f6\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u53ef\u4ee5\u5c06\u5c5e\u6027\u503c\u8bbe\u7f6e\u4e3a\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002\u8fd9\u4e9b\u5c5e\u6027\u5b58\u50a8\u5728\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u201c\u5c5e\u6027\u201d\u5b57\u5178\u4e2d\u3002 Each activity can set and access these properties, allowing a workflow to compute and retrieve information that can then be processed by other activities further down the chain. \u6bcf\u4e2a\u6d3b\u52a8\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u548c\u8bbf\u95ee\u8fd9\u4e9b\u5c5e\u6027\uff0c\u5141\u8bb8\u5de5\u4f5c\u6d41\u8ba1\u7b97\u548c\u68c0\u7d22\u4fe1\u606f\uff0c\u7136\u540e\u53ef\u4ee5\u7531\u94fe\u4e2d\u7684\u5176\u4ed6\u6d3b\u52a8\u5904\u7406\u3002 This is analogous to a function setting local variables. \u8fd9\u7c7b\u4f3c\u4e8e\u8bbe\u7f6e\u5c40\u90e8\u53d8\u91cf\u7684\u51fd\u6570\u3002 Workflow Execution \u5de5\u4f5c\u6d41\u7a0b\u6267\u884c When a workflow executes, the Workflow Manager creates a Workflow Instance and a Workflow Execution Context . A workflow instance maintains state about the execution, such as which activity to execute next and state that can be provided by individual activities. \u5f53\u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u65f6\uff0c Workflow Manager \u4f1a\u521b\u5efa \u5de5\u4f5c\u6d41\u7a0b\u5b9e\u4f8b \u548c \u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u4e0a\u4e0b\u6587 \u3002\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u7ef4\u62a4\u6709\u5173\u6267\u884c\u7684\u72b6\u6001\uff0c\u4f8b\u5982\u4e0b\u4e00\u4e2a\u8981\u6267\u884c\u7684\u6d3b\u52a8\u4ee5\u53ca\u53ef\u4ee5\u7531\u5404\u4e2a\u6d3b\u52a8\u63d0\u4f9b\u7684\u72b6\u6001\u3002 A Workflow Instance is ultimately persisted in the underlying data storage provider, while a Workflow Execution Context exists only in memory for the duration of a workflow execution. \u5de5\u4f5c\u6d41\u5b9e\u4f8b\u6700\u7ec8\u4fdd\u7559\u5728\u57fa\u7840\u6570\u636e\u5b58\u50a8\u63d0\u4f9b\u7a0b\u5e8f\u4e2d\uff0c\u800c\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\u4ec5\u5728\u5de5\u4f5c\u6d41\u6267\u884c\u671f\u95f4\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\u3002 Workflows can be short-running as well as long-running . \u5de5\u4f5c\u6d41\u7a0b\u53ef\u4ee5 \u77ed\u671f\u8fd0\u884c \u4ee5\u53ca \u957f\u671f\u8fd0\u884c \u3002 Short-running workflows \u77ed\u671f\u8fd0\u884c\u7684\u5de5\u4f5c\u6d41\u7a0b When a workflow executes without encountering any blocking activities (i.e. activities that wait for an event to occur, such as Signal ), the workflow will run to completion in one go. \u5f53\u5de5\u4f5c\u6d41\u6267\u884c\u65f6\u6ca1\u6709\u9047\u5230\u4efb\u4f55 \u963b\u585e \u6d3b\u52a8\uff08\u5373\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f\u7684\u6d3b\u52a8\uff0c\u4f8b\u5982_Signal_\uff09\uff0c\u5de5\u4f5c\u6d41\u5c06\u4e00\u6b21\u5b8c\u6210\u8fd0\u884c\u3002 Long-running workflows \u957f\u671f\u8fd0\u884c\u7684\u5de5\u4f5c\u6d41\u7a0b When a workflow executes and encounters a blocking activity (such as an event), the workflow manager will halt execution and persist the workflow instance to the underlying persistence layer. \u5f53\u5de5\u4f5c\u6d41\u6267\u884c\u5e76\u9047\u5230\u963b\u585e\u6d3b\u52a8\uff08\u4f8b\u5982\u4e8b\u4ef6\uff09\u65f6\uff0c\u5de5\u4f5c\u6d41\u7ba1\u7406\u5668\u5c06_halt_\u6267\u884c\u5e76\u5c06\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u6301\u4e45\u4fdd\u5b58\u5230\u57fa\u7840\u6301\u4e45\u5c42\u3002 When the appropriate event is triggered (which could happen seconds, days, weeks or even years from now), the workflow manager will load the workflow instance from storage and resume execution. \u5f53\u89e6\u53d1\u9002\u5f53\u7684\u4e8b\u4ef6\uff08\u53ef\u80fd\u5728\u51e0\u79d2\uff0c\u51e0\u5929\uff0c\u51e0\u5468\u751a\u81f3\u51e0\u5e74\u540e\u53d1\u751f\uff09\u65f6\uff0c\u5de5\u4f5c\u6d41\u7ba1\u7406\u5668\u5c06\u4ece\u5b58\u50a8\u52a0\u8f7d\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u5e76\u7ee7\u7eed\u6267\u884c\u3002 Scripts and Expressions \u811a\u672c\u548c\u8868\u8fbe\u5f0f Many activities have settings that can contain either JavaScript or Liquid syntax. \u8bb8\u591a\u6d3b\u52a8\u7684\u8bbe\u7f6e\u53ef\u4ee5\u5305\u542b JavaScript \u6216 Liquid \u8bed\u6cd5\u3002 For example, when adding the Notify activity, its editor shows the folling fields: \u4f8b\u5982\uff0c\u5728\u6dfb\u52a0 Notify \u6d3b\u52a8\u65f6\uff0c\u5176\u7f16\u8f91\u5668\u4f1a\u663e\u793a\u4ee5\u4e0b\u5b57\u6bb5\uff1a These type of fields allow you to enter Liquid markup, enabling access to system-wide variables and filters as well as variables from the workflow execution context . \u8fd9\u4e9b\u7c7b\u578b\u7684\u5b57\u6bb5\u5141\u8bb8\u60a8\u8f93\u5165Liquid\u6807\u8bb0\uff0c\u5141\u8bb8\u8bbf\u95ee\u7cfb\u7edf\u8303\u56f4\u7684\u53d8\u91cf\u548c\u8fc7\u6ee4\u5668\u4ee5\u53ca \u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u4e0a\u4e0b\u6587 \u4e2d\u7684\u53d8\u91cf\u3002 JavaScript Functions JavaScript\u51fd\u6570 The following JavaScript functions are available by default to any activity that supports script expressions: \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4ee5\u4e0bJavaScript\u51fd\u6570\u53ef\u7528\u4e8e\u652f\u6301\u811a\u672c\u8868\u8fbe\u5f0f\u7684\u4efb\u4f55\u6d3b\u52a8\uff1a | Function | Description | Signature | |\u529f\u80fd|\u8bf4\u660e|\u7b7e\u540d| | -------- | ----------- | --------- | | -------- | ----------- --------- | | workflow | Returns the WorkflowExecutionContext which provides access to all information related to the current workflow execution context. | workflow(): WorkflowExecutionContext | |\u5de5\u4f5c\u6d41\u7a0b|\u8fd4\u56de WorkflowExecutionContext \uff0c\u5b83\u63d0\u4f9b\u5bf9\u4e0e\u5f53\u524d\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\u76f8\u5173\u7684\u6240\u6709\u4fe1\u606f\u7684\u8bbf\u95ee\u3002 | workflow\uff08\uff09\uff1aWorkflowExecutionContext | | workflowId | Returns the unique workflow ID. | workflowId(): string | | workflowId |\u8fd4\u56de\u552f\u4e00\u7684\u5de5\u4f5c\u6d41ID\u3002 | workflowId\uff08\uff09\uff1astring | | input | Returns the input parameter with the specified name. Input to the workflow is provided when the workflow is executed by the workflow manager. | input(name: string): any | |\u8f93\u5165|\u8fd4\u56de\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u8f93\u5165\u53c2\u6570\u3002\u5f53\u5de5\u4f5c\u6d41\u7a0b\u7531\u5de5\u4f5c\u6d41\u7a0b\u7ba1\u7406\u5668\u6267\u884c\u65f6\uff0c\u5c06\u63d0\u4f9b\u5bf9\u5de5\u4f5c\u6d41\u7a0b\u7684\u8f93\u5165\u3002 | input\uff08name\uff1astring\uff09\uff1aany | | output | Sets an output parameter with the specified name. Workflow output can be collected by the invoker of the workflow. | output(name: string, value: any): void | |\u8f93\u51fa|\u8bbe\u7f6e\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u8f93\u51fa\u53c2\u6570\u3002\u5de5\u4f5c\u6d41\u8f93\u51fa\u53ef\u4ee5\u7531\u5de5\u4f5c\u6d41\u7684\u8c03\u7528\u8005\u6536\u96c6\u3002 | output\uff08name\uff1astring\uff0cvalue\uff1aany\uff09\uff1avoid | | property | Returns the property value with the specified name. Properties are a dictionary that workflow activities can read and write information from and to. | property(name: string): any | |\u8d22\u4ea7|\u8fd4\u56de\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u5c5e\u6027\u503c\u3002\u5c5e\u6027\u662f\u5de5\u4f5c\u6d41\u6d3b\u52a8\u53ef\u4ee5\u4ece\u4e2d\u8bfb\u53d6\u548c\u5199\u5165\u4fe1\u606f\u7684\u5b57\u5178\u3002 | property\uff08name\uff1astring\uff09\uff1aany | | lastResult | Returns the value that the previous activity provided, if any. | lastResult(): any | | lastResult |\u8fd4\u56de\u4e0a\u4e00\u4e2a\u6d3b\u52a8\u63d0\u4f9b\u7684\u503c\uff08\u5982\u679c\u6709\uff09\u3002 | lastResult\uff08\uff09\uff1aany | | correlationId | Returns the correlation value of the workflow instance. | correlationId(): string | | correlationId |\u8fd4\u56de\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u7684\u76f8\u5173\u503c\u3002 | correlationId\uff08\uff09\uff1astring | | signalUrl | Returns workflow trigger URL with a protected SAS token into which the specified signal name is encoded. Use this to generate URLs that can be shared with trusted parties to trigger the current workflow if it is blocked on the Signal activity that is condifured with the same signal name. | signalUrl(signal: string): string | | signalUrl |\u8fd4\u56de\u5de5\u4f5c\u6d41\u89e6\u53d1\u5668URL\uff0c\u5176\u4e2d\u5305\u542b\u53d7\u4fdd\u62a4\u7684SAS\u4ee4\u724c\uff0c\u5176\u4e2d\u7f16\u7801\u6307\u5b9a\u7684\u4fe1\u53f7\u540d\u79f0\u3002\u4f7f\u7528\u6b64\u9009\u9879\u53ef\u751f\u6210\u53ef\u4e0e\u53d7\u4fe1\u4efb\u65b9\u5171\u4eab\u7684URL\uff0c\u4ee5\u89e6\u53d1\u5f53\u524d\u5de5\u4f5c\u6d41\uff08\u5982\u679c\u5728\u4f7f\u7528\u76f8\u540c\u4fe1\u53f7\u540d\u79f0\u7f16\u53f7\u7684Signal\u6d3b\u52a8\u4e0a\u88ab\u963b\u6b62\uff09\u3002 | signalUrl\uff08signal\uff1astring\uff09\uff1astring | Liquid Expressions \u6db2\u4f53\u8868\u8fbe The following Liquid tags, properties and filters are available by default to any activity that supports Liquid expressions: \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4ee5\u4e0bLiquid\u6807\u7b7e\uff0c\u5c5e\u6027\u548c\u8fc7\u6ee4\u5668\u53ef\u7528\u4e8e\u652f\u6301Liquid\u8868\u8fbe\u5f0f\u7684\u4efb\u4f55\u6d3b\u52a8\uff1a | Expression | Type | Description | Example | |\u8868\u8fbe|\u8f93\u5165|\u8bf4\u660e|\u793a\u4f8b| | ---------- | ---- | ----------- | ------- | | ---------- | ---- | ----------- ------- | | Workflow.CorrelationId | Property | Returns the correlation value of the workflow instance. | {{ Workflow.CorrelationId }} | | Workflow.CorrelationId |\u8d22\u4ea7|\u8fd4\u56de\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u7684\u76f8\u5173\u503c\u3002 | {{Workflow.CorrelationId}} | | Workflow.Input | Property | Returns the Input dictionary. | {{ Workflow.Input[\"ContentItem\"] }} | | Workflow.Input |\u8d22\u4ea7|\u8fd4\u56deInput\u5b57\u5178\u3002 | {{Workflow.Input [\u201cContentItem\u201d]}} | | Workflow.Output | Property | Returns the Output dictionary. | {{ Workflow.Output[\"SomeResult\"] }} | | Workflow.Output |\u8d22\u4ea7|\u8fd4\u56de\u8f93\u51fa\u5b57\u5178\u3002 | {{Workflow.Output [\u201cSomeResult\u201d]}} | | Workflow.Properties | Property | Returns the Properties dictionary. | {{ Workflow.Properties[\"Foo\"] }} | | Workflow.Properties |\u8d22\u4ea7|\u8fd4\u56deProperties\u5b57\u5178\u3002 | {{Workflow.Properties [\u201cFoo\u201d]}} | Instead of using the indexer syntax on the three workflow dictionaries Input , Output and Properties , you cal also use dot notation, e.g.: \u800c\u4e0d\u662f\u5728\u4e09\u4e2a\u5de5\u4f5c\u6d41\u8bcd\u5178 Input \uff0c Output \u548c Properties \u4e0a\u4f7f\u7528\u7d22\u5f15\u5668\u8bed\u6cd5\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u70b9\u8868\u793a\u6cd5\uff0c\u4f8b\u5982\uff1a {{ Workflow.Input.ContentItem }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Workflow.Input.ContentItem}}</font> Liquid Expressions and ContentItem Events Liquid Expressions\u548cContentItem\u4e8b\u4ef6 When handling content related events using a workflow, the content item in question is made available to the workflow via the Input dictionary. \u5f53\u4f7f\u7528\u5de5\u4f5c\u6d41\u5904\u7406\u5185\u5bb9\u76f8\u5173\u4e8b\u4ef6\u65f6\uff0c\u6240\u8ba8\u8bba\u7684\u5185\u5bb9\u9879\u901a\u8fc7\u201c\u8f93\u5165\u201d\u5b57\u5178\u63d0\u4f9b\u7ed9\u5de5\u4f5c\u6d41\u3002 For example, if you have a workflow that starts with the Content Created Event activity, you can send an email or make an HTTP request whereand reference the content item from fieldsliquid-ebabled fields as follows: \u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u5de5\u4f5c\u6d41\u7a0b\u4ee5 Content Created Event \u6d3b\u52a8\u5f00\u5934\uff0c\u5219\u53ef\u4ee5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u6216\u53d1\u51faHTTP\u8bf7\u6c42\uff0c\u5e76\u5728fieldsliquid-ebabled\u5b57\u6bb5\u4e2d\u5f15\u7528\u5185\u5bb9\u9879\uff0c\u5982\u4e0b\u6240\u793a\uff1a {{ Workflow.Input.ContentItem | display_url }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Workflow.Input.ContentItem | display_url}}</font> {{ Workflow.Input.ContentItem | display_text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Workflow.Input.ContentItem | display_text}}</font> {{ Workflow.Input.ContentItem.DisplayText }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Workflow.Input.ContentItem.DisplayText}}</font> For more examples of supported content item filters, see documention on Liquid . \u6709\u5173\u53d7\u652f\u6301\u7684\u5185\u5bb9\u9879\u8fc7\u6ee4\u5668\u7684\u66f4\u591a\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605[Liquid]\u4e0a\u7684\u6587\u6863\uff08https://orchardcore.readthedocs.io/en/latest/OrchardCore.Modules/OrchardCore.Liquid/README/\uff09\u3002 Activities out of the box \u5f00\u7bb1\u5373\u7528\u7684\u6d3b\u52a8 The following activities are available with any default Orchard installation: \u4efb\u4f55\u9ed8\u8ba4\u7684Orchard\u5b89\u88c5\u90fd\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6d3b\u52a8\uff1a | Activity | Type | Description | Documentation | |\u6d3b\u52a8|\u8f93\u5165|\u8bf4\u660e|\u6587\u6863| | -------- | ---- | ----------- | ------------- | | -------- | ---- | ----------- ------------- | | Workflows | * | * | * | | \u5de5\u4f5c\u6d41\u7a0b | * | * | * | | Correlate | Task | Correlate the current workflow instance with a value. | [link] | |\u76f8\u5173|\u4efb\u52a1|\u5c06\u5f53\u524d\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u4e0e\u503c\u76f8\u5173\u8054\u3002 | [\u94fe\u63a5] | | For Each | Task | Iterate over a list. | [link] | |\u6bcf\u4e2a|\u4efb\u52a1|\u8fed\u4ee3\u4e00\u4e2a\u5217\u8868\u3002 | [\u94fe\u63a5] | | Fork | Task | Fork workflow execution into separate paths of execution. | [link] | |\u53c9|\u4efb\u52a1|\u5c06\u5de5\u4f5c\u6d41\u6267\u884c\u5206\u6210\u72ec\u7acb\u7684\u6267\u884c\u8def\u5f84\u3002 | [\u94fe\u63a5] | | For Loop | Task | Iterates for N times. | [link] | | For Loop |\u4efb\u52a1|\u8fed\u4ee3N\u6b21\u3002 | [\u94fe\u63a5] | | If / Else | Task | Evaluate a boolean condition and continues execution based on the outcome. | [link] | |\u5982\u679c/ Else |\u4efb\u52a1|\u8bc4\u4f30\u5e03\u5c14\u6761\u4ef6\u5e76\u6839\u636e\u7ed3\u679c\u7ee7\u7eed\u6267\u884c\u3002 | [\u94fe\u63a5] | | Join | Task | Join a forked workflow execution back into a single path of execution. | [link] | |\u52a0\u5165|\u4efb\u52a1|\u5c06\u5206\u53c9\u7684\u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u91cd\u65b0\u52a0\u5165\u5230\u5355\u4e2a\u6267\u884c\u8def\u5f84\u4e2d\u3002 | [\u94fe\u63a5] | | Log | Task | Write a log entry. | [link] | |\u8bb0\u5f55|\u4efb\u52a1|\u5199\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\u3002 | [\u94fe\u63a5] | | Notify | Task | Display a notification. | [link] | |\u901a\u77e5|\u4efb\u52a1|\u663e\u793a\u901a\u77e5\u3002 | [\u94fe\u63a5] | | Script | Task | Execute script and continue execution based on the returned outcome. | [link] | |\u811a\u672c|\u4efb\u52a1|\u6267\u884c\u811a\u672c\u5e76\u6839\u636e\u8fd4\u56de\u7684\u7ed3\u679c\u7ee7\u7eed\u6267\u884c\u3002 | [\u94fe\u63a5] | | Set Output | Task | Evaluate a script expression and store the result into the workflow's output. | [link] | |\u8bbe\u7f6e\u8f93\u51fa|\u4efb\u52a1|\u8bc4\u4f30\u811a\u672c\u8868\u8fbe\u5f0f\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u5de5\u4f5c\u6d41\u7684\u8f93\u51fa\u4e2d\u3002 | [\u94fe\u63a5] | | Set Property | Task | Execute script and continue execution based on the returned outcome. | [link] | |\u8bbe\u7f6e\u5c5e\u6027|\u4efb\u52a1|\u6267\u884c\u811a\u672c\u5e76\u6839\u636e\u8fd4\u56de\u7684\u7ed3\u679c\u7ee7\u7eed\u6267\u884c\u3002 | [\u94fe\u63a5] | | While Loop | Task | Iterate while a condition is true. | [link] | |\u800cLoop |\u4efb\u52a1|\u5728\u6761\u4ef6\u6210\u7acb\u65f6\u8fed\u4ee3\u3002 | [\u94fe\u63a5] | | HTTP Workflow Activities | * | * | * | | HTTP\u5de5\u4f5c\u6d41\u7a0b\u6d3b\u52a8 | * | * | * | | HTTP Redirect | Task | Redirect the user agent to the specified URL (301/302). | [link] | | HTTP\u91cd\u5b9a\u5411|\u4efb\u52a1|\u5c06\u7528\u6237\u4ee3\u7406\u91cd\u5b9a\u5411\u5230\u6307\u5b9a\u7684URL\uff08301/302\uff09\u3002 | [\u94fe\u63a5] | | HTTP Request | Task | Perform a HTTP request to a given URL. | [link] | | HTTP\u8bf7\u6c42|\u4efb\u52a1|\u5bf9\u7ed9\u5b9a\u7684URL\u6267\u884cHTTP\u8bf7\u6c42\u3002 | [\u94fe\u63a5] | | Filter Incoming HTTP Request | Event | Executes when the specified HTTP request comes in. Similar to an MVC Action Filter. | [link] | |\u8fc7\u6ee4\u4f20\u5165\u7684HTTP\u8bf7\u6c42|\u6d3b\u52a8|\u5728\u6307\u5b9a\u7684HTTP\u8bf7\u6c42\u8fdb\u5165\u65f6\u6267\u884c\u3002\u7c7b\u4f3c\u4e8eMVC\u64cd\u4f5c\u8fc7\u6ee4\u5668\u3002 | [\u94fe\u63a5] | | Signal | Event | Executes when a signal is triggered. | [link] | |\u4fe1\u53f7|\u6d3b\u52a8|\u89e6\u53d1\u4fe1\u53f7\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Email | * | * | * | | \u7535\u5b50\u90ae\u4ef6 | * | * | * | | Send Email | Task | Send an email. | [link] | |\u53d1\u9001\u7535\u5b50\u90ae\u4ef6|\u4efb\u52a1|\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002 | [\u94fe\u63a5] | | Timer Workflow Activities | * | * | * | | \u5b9a\u65f6\u5668\u5de5\u4f5c\u6d41\u7a0b\u6d3b\u52a8 | * | * | * | | Timer | Event | Executes repeatedly according to a specified CRON expression. | [link] | |\u5b9a\u65f6\u5668|\u6d3b\u52a8|\u6839\u636e\u6307\u5b9a\u7684CRON\u8868\u8fbe\u5f0f\u91cd\u590d\u6267\u884c\u3002 | [\u94fe\u63a5] | | Contents | * | * | * | | \u5185\u5bb9 | * | * | * | | Content Created | Event | Executes when content is created. | [link] | |\u5185\u5bb9\u521b\u5efa|\u6d3b\u52a8|\u521b\u5efa\u5185\u5bb9\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Content Deleted | Event | Executes when content is deleted. | [link] | |\u5185\u5bb9\u5df2\u5220\u9664|\u6d3b\u52a8|\u5220\u9664\u5185\u5bb9\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Content Published | Event | Executes when content is published. | [link] | |\u5185\u5bb9\u53d1\u5e03|\u6d3b\u52a8|\u53d1\u5e03\u5185\u5bb9\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Content Updated | Event | Executes when content is updated. | [link] | |\u5185\u5bb9\u66f4\u65b0|\u6d3b\u52a8|\u66f4\u65b0\u5185\u5bb9\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Content Versioned| Event | Executes when content is versioned. | [link] | |\u5185\u5bb9\u7248\u672c|\u6d3b\u52a8|\u5728\u5185\u5bb9\u7248\u672c\u5316\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Create Content | Task | Create a content item. | [link] | |\u521b\u5efa\u5185\u5bb9|\u4efb\u52a1|\u521b\u5efa\u5185\u5bb9\u9879\u3002 | [\u94fe\u63a5] | | Delete Content | Task | Delete a content item. | [link] | |\u5220\u9664\u5185\u5bb9|\u4efb\u52a1|\u5220\u9664\u5185\u5bb9\u9879\u3002 | [\u94fe\u63a5] | | Publish Content | Task | Publish a content item. | [link] | |\u53d1\u5e03\u5185\u5bb9|\u4efb\u52a1|\u53d1\u5e03\u5185\u5bb9\u9879\u3002 | [\u94fe\u63a5] | Walkthroughs \u6f14\u7ec3 Developing Custom Activities \u5f00\u53d1\u81ea\u5b9a\u4e49\u6d3b\u52a8 Orchard is built to be extended, and the Workflows module is no different. When creating your own module, you can develop custom workflow activities. Developing custom activities involve the following steps: Orchard\u662f\u4e3a\u6269\u5c55\u800c\u6784\u5efa\u7684\uff0cWorkflows\u6a21\u5757\u4e5f\u4e0d\u4f8b\u5916\u3002\u521b\u5efa\u81ea\u5df1\u7684\u6a21\u5757\u65f6\uff0c\u60a8\u53ef\u4ee5\u5f00\u53d1\u81ea\u5b9a\u4e49\u5de5\u4f5c\u6d41\u7a0b\u6d3b\u52a8\u3002\u5f00\u53d1\u81ea\u5b9a\u4e49\u6d3b\u52a8\u6d89\u53ca\u4ee5\u4e0b\u6b65\u9aa4\uff1a Create a new class that directly or indirectly implements IActivity . In most cases, you either derive from TaskActivity or EventActivity , depending on whether your activity represents an event or not. Although not required, it is recommended to keep this class in a folder called Activities . 1.\u521b\u5efa\u4e00\u4e2a\u76f4\u63a5\u6216\u95f4\u63a5\u5b9e\u73b0\u201cIActivity\u201d\u7684\u65b0\u7c7b\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4ece\u201cTaskActivity\u201d\u6216\u201cEventActivity\u201d\u6d3e\u751f\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u7684\u6d3b\u52a8\u662f\u5426\u4ee3\u8868\u67d0\u4e2a\u4e8b\u4ef6\u3002\u867d\u7136\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u5efa\u8bae\u5c06\u6b64\u7c7b\u4fdd\u5b58\u5728\u540d\u4e3a Activities \u7684\u6587\u4ef6\u5939\u4e2d\u3002 Create a new display driver class that directly or indirectly implements IDisplayDriver . An activity display driver controls the activity's display on the workflow editor canvas , the activity picker and the activity editor . Although not required, it is recommended to keep this class in a folder called Drivers . 2.\u521b\u5efa\u4e00\u4e2a\u76f4\u63a5\u6216\u95f4\u63a5\u5b9e\u73b0 IDisplayDriver \u7684\u65b0 \u663e\u793a\u9a71\u52a8\u7a0b\u5e8f \u7c7b\u3002\u6d3b\u52a8\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u63a7\u5236 \u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u753b\u5e03 \uff0c \u6d3b\u52a8\u9009\u62e9\u5668 \u548c \u6d3b\u52a8\u7f16\u8f91\u5668 \u4e0a\u7684\u6d3b\u52a8\u663e\u793a\u3002\u867d\u7136\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u5efa\u8bae\u5c06\u6b64\u7c7b\u4fdd\u5b58\u5728\u540d\u4e3a Drivers \u7684\u6587\u4ef6\u5939\u4e2d\u3002 Optionally implement a view model if your activity has properties that the user should be able to configure. 3.\u5982\u679c\u60a8\u7684\u6d3b\u52a8\u5177\u6709\u7528\u6237\u5e94\u8be5\u80fd\u591f\u914d\u7f6e\u7684\u5c5e\u6027\uff0c\u5219\u53ef\u4ee5\u9009\u62e9\u5b9e\u65bd \u89c6\u56fe\u6a21\u578b \u3002 Implement the various Razor views for the various shapes provided by the driver. Although not required, it is recommended to store these files in the Views/Items folder. Note that it is required for your views to be discoverable by the display engine. 4.\u4e3a\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u7684\u5404\u79cd\u5f62\u72b6\u5b9e\u73b0\u5404\u79cdRazor\u89c6\u56fe\u3002\u867d\u7136\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u5efa\u8bae\u5c06\u8fd9\u4e9b\u6587\u4ef6\u5b58\u50a8\u5728 Views / Items \u6587\u4ef6\u5939\u4e2d\u3002\u8bf7\u6ce8\u610f\uff0c\u663e\u793a\u5f15\u64ce\u53ef\u4ee5\u53d1\u73b0\u60a8\u7684\u89c6\u56fe\u3002 Activity Display Types \u6d3b\u52a8\u663e\u793a\u7c7b\u578b An activity has the following display types: \u6d3b\u52a8\u5177\u6709\u4ee5\u4e0b\u663e\u793a\u7c7b\u578b\uff1a Thumbnail \u7f29\u7565\u56fe Design \u8bbe\u8ba1 Thumbnail \u7f29\u7565\u56fe Used when the activity is rendered as part of the activity picker. \u5728\u6d3b\u52a8\u4f5c\u4e3a\u6d3b\u52a8\u9009\u62e9\u5668\u7684\u4e00\u90e8\u5206\u5448\u73b0\u65f6\u4f7f\u7528\u3002 Design \u8bbe\u8ba1 Used when the activity is rendered as part of the workflow editor design surface. \u5728\u6d3b\u52a8\u4f5c\u4e3a\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u8bbe\u8ba1\u56fe\u9762\u7684\u4e00\u90e8\u5206\u5448\u73b0\u65f6\u4f7f\u7528\u3002 IActivity IActivity IActivity has the following members: Name \u540d\u79f0 Category \u7c7b\u522b Properties \u5c5e\u6027 HasEditor HasEditor GetPossibleOutcomes GetPossibleOutcomes CanExecuteAsync CanExecuteAsync ExecuteAsync ExecuteAsync ResumeAsync ResumeAsync OnInputReceivedAsync OnInputReceivedAsync OnWorkflowStartingAsync OnWorkflowStartingAsync OnWorkflowStartedAsync OnWorkflowStartedAsync OnWorkflowResumingAsync OnWorkflowResumingAsync OnWorkflowResumedAsync OnWorkflowResumedAsync OnActivityExecutingAsync OnActivityExecutingAsync OnActivityExecutedAsync OnActivityExecutedAsync The IEvent interface adds the following member: IEvent \u63a5\u53e3\u6dfb\u52a0\u4ee5\u4e0b\u6210\u5458\uff1a CanStartWorkflow CanStartWorkflow The following is an example of a simple activity implementation that displays a notification: \u4ee5\u4e0b\u662f\u663e\u793a\u901a\u77e5\u7684\u7b80\u5355\u6d3b\u52a8\u5b9e\u73b0\u7684\u793a\u4f8b\uff1a public class NotifyTask : TaskActivity <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u7c7bNotifyTask\uff1aTaskActivity</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> private readonly INotifier _notifier; private readonly IStringLocalizer S; private readonly IHtmlLocalizer H; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public NotifyTask(INotifier notifier, IStringLocalizer<NotifyTask> s, IHtmlLocalizer<NotifyTask> h) { _notifier = notifier; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> S = s; H = h; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // The technical name of the activity. Activities on a workflow definition reference this name. public override string Name => nameof(NotifyTask); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // The category to which this activity belongs. The activity picker groups activities by this category. public override LocalizedString Category => S[\"UI\"]; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // A description of this activity's purpose. <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">//\u6b64\u6d3b\u52a8\u76ee\u7684\u7684\u63cf\u8ff0\u3002</font> public override LocalizedString Description => S[\"Display a message.\"]; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // The notification type to display. public NotifyType NotificationType { get => GetProperty<NotifyType>(); set => SetProperty(value); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // The message to display. <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">//\u8981\u663e\u793a\u7684\u6d88\u606f\u3002</font> public WorkflowExpression<string> Message { get => GetProperty(() => new WorkflowExpression<string>()); set => SetProperty(value); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // Returns the possible outcomes of this activity. public override IEnumerable<Outcome> GetPossibleOutcomes(WorkflowContext workflowContext, ActivityContext activityContext) { return Outcomes(S[\"Done\"]); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // This is the heart of the activity and actually performs the work to be done. public override async Task<ActivityExecutionResult> ExecuteAsync(WorkflowContext workflowContext, ActivityContext activityContext) { var message = await workflowContext.EvaluateExpressionAsync(Message); _notifier.Add(NotificationType, H[message]); return Outcomes(\"Done\"); } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> The following is an example of a simple activity display driver: \u4ee5\u4e0b\u662f\u7b80\u5355\u6d3b\u52a8\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u7684\u793a\u4f8b\uff1a public class NotifyTaskDisplay : ActivityDisplayDriver<NotifyTask, NotifyTaskViewModel> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">public class NotifyTaskDisplay\uff1aActivityDisplayDriver <NotifyTask\uff0cNotifyTaskViewModel></font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> protected override void EditActivity(NotifyTask activity, NotifyTaskViewModel model) { model.NotificationType = activity.NotificationType; model.Message = activity.Message.Expression; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> protected override void UpdateActivity(NotifyTaskViewModel model, NotifyTask activity) { activity.NotificationType = model.NotificationType; activity.Message = new WorkflowExpression<string>(model.Message); } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> The above code performs a simple mapping of a NotifyTask to a NotifyTaskViewModel and vice versa. \u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u201cNotifyTask\u201d\u5230\u201cNotifyTaskViewModel\u201d\u7684\u7b80\u5355\u6620\u5c04\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002 This simple implementation is possible because the actual creation of the necessary editor and display shapes are taken care of by ActivityDisplayDriver<TActivity, TEditViewModel> , which looks like this (modified to focus on the important parts): \u8fd9\u79cd\u7b80\u5355\u7684\u5b9e\u73b0\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u5fc5\u8981\u7684\u7f16\u8f91\u5668\u548c\u663e\u793a\u5f62\u72b6\u7684\u5b9e\u9645\u521b\u5efa\u7531 ActivityDisplayDriver <TActivity\uff0cTEditViewModel> \u6765\u5904\u7406\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff08\u4fee\u6539\u4e3a\u4e13\u6ce8\u4e8e\u91cd\u8981\u90e8\u5206\uff09\uff1a public abstract class ActivityDisplayDriver<TActivity, TEditViewModel> : ActivityDisplayDriver<TActivity> where TActivity : class, IActivity where TEditViewModel : class, new() <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u62bd\u8c61\u7c7bActivityDisplayDriver <TActivity\uff0cTEditViewModel>\uff1aActivityDisplayDriver <TActivity>\u5176\u4e2dTActivity\uff1aclass\uff0cIActivity\u5176\u4e2dTEditViewModel\uff1aclass\uff0cnew\uff08\uff09</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> private static string ThumbnailshapeType = $\"{typeof(TActivity).Name}_Fields_Thumbnail\"; private static string DesignShapeType = $\"{typeof(TActivity).Name}_Fields_Design\"; private static string EditShapeType = $\"{typeof(TActivity).Name}_Fields_Edit\"; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public override IDisplayResult Display(TActivity activity) { return Combine( Shape(ThumbnailshapeType, new ActivityViewModel<TActivity>(activity)).Location(\"Thumbnail\", \"Content\"), Shape(DesignShapeType, new ActivityViewModel<TActivity>(activity)).Location(\"Design\", \"Content\") ); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public override IDisplayResult Edit(TActivity activity) { return Initialize<TEditViewModel>(EditShapeType, model => { return EditActivityAsync(activity, model); }).Location(\"Content\"); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public async override Task<IDisplayResult> UpdateAsync(TActivity activity, IUpdateModel updater) { var viewModel = new TEditViewModel(); if (await updater.TryUpdateModelAsync(viewModel, Prefix)) { await UpdateActivityAsync(viewModel, activity); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> return Edit(activity); } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Notice that the shape names are derived from the activity type, effectively implementing a naming convention for the shape template names to use. \u8bf7\u6ce8\u610f\uff0c\u5f62\u72b6\u540d\u79f0\u662f\u4ece\u6d3b\u52a8\u7c7b\u578b\u6d3e\u751f\u7684\uff0c\u6709\u6548\u5730\u5b9e\u73b0\u4e86\u8981\u4f7f\u7528\u7684\u5f62\u72b6\u6a21\u677f\u540d\u79f0\u7684\u547d\u540d\u7ea6\u5b9a\u3002 Continuing with the NotifyTask example, we now need to create the following Razor files: \u7ee7\u7eed\u4f7f\u7528 NotifyTask \u793a\u4f8b\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u521b\u5efa\u4ee5\u4e0bRazor\u6587\u4ef6\uff1a NotifyTask.Fields.Design.cshtml NotifyTask.Fields.Design.cshtml NotifyTask.Fields.Thumbnail.cshtml NotifyTask.Fields.Thumbnail.cshtml NotifyTask.Fields.Edit.cshtml NotifyTask.Fields.Edit.cshtml CREDITS \u5b66\u5206 jsPlumb jsPlumb https://github.com/jsplumb/jsplumb https://github.com/jsplumb/jsplumb Copyright (c) 2010 - 2014 jsPlumb, http://jsplumbtoolkit.com/ \u7248\u6743\u6240\u6709\uff08c\uff092010 - 2014 jsPlumb\uff0chttp\uff1a//jsplumbtoolkit.com/ License: dual-licensed under both MIT and GPLv \u8bb8\u53ef\u8bc1\uff1aMIT\u548cGPLv\u4e0b\u7684\u53cc\u91cd\u8bb8\u53ef NCrontab NCrontab https://github.com/atifaziz/NCrontab https://github.com/atifaziz/NCrontab Copyright (C) Atif Aziz \u7248\u6743\u6240\u6709\uff08C\uff09Atif Aziz License: Apache License 2.0 \u8bb8\u53ef\u8bc1\uff1aApache License 2.0","title":"Workflows"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#workflows-orchardcoreworkflows","text":"","title":"Workflows (OrchardCore.Workflows)"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#orchardcoreworkflows","text":"The Workflows module provides a way for users to visually implement business rules using flowchart diagrams. Workflows\u6a21\u5757\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u79cd\u4f7f\u7528\u6d41\u7a0b\u56fe\u53ef\u89c6\u5730\u5b9e\u73b0\u4e1a\u52a1\u89c4\u5219\u7684\u65b9\u6cd5\u3002","title":"\u5de5\u4f5c\u6d41\u7a0b\uff08OrchardCore.Workflows\uff09"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#general-concepts","text":"","title":"General Concepts"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_1","text":"A workflow is a collection of activities that are connected to eachother. These connections are called transitions . \u5de5\u4f5c\u6d41\u7a0b\u662f \u6d3b\u52a8 \u7684\u96c6\u5408\uff0c\u5b83\u4eec\u5f7c\u6b64\u8fde\u63a5\u3002\u8fd9\u4e9b\u8fde\u63a5\u79f0\u4e3a \u8f6c\u6362 \u3002 Activities and their transitions are stored in a Workflow Definition . \u6d3b\u52a8\u53ca\u5176\u8f6c\u6362\u5b58\u50a8\u5728 \u5de5\u4f5c\u6d41\u5b9a\u4e49 \u4e2d\u3002 A workflow is essentially a visual script, where each activity is a statement of that script. \u5de5\u4f5c\u6d41\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u53ef\u89c6\u811a\u672c\uff0c\u5176\u4e2d\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u662f\u8be5\u811a\u672c\u7684\u58f0\u660e\u3002 There are two types of activities: Task and Event . \u6709\u4e24\u79cd\u7c7b\u578b\u7684\u6d3b\u52a8\uff1a \u4efb\u52a1 \u548c \u4e8b\u4ef6 \u3002 A Task activity typically performs an action, such as publishing a content item, while an Event activity typically listens for an event to happen before execution continues. Task\u6d3b\u52a8\u901a\u5e38\u6267\u884c\u64cd\u4f5c\uff0c\u4f8b\u5982\u53d1\u5e03\u5185\u5bb9\u9879\uff0c\u800cEvent\u6d3b\u52a8\u901a\u5e38\u5728\u6267\u884c\u7ee7\u7eed\u4e4b\u524d\u4fa6\u542c\u4e8b\u4ef6\u3002 In order for a workflow to execute, at least one activity must be marked as the start of the workflow . Only Event activities can be marked as the start of a workflow. An example of such an event activity is Content Created , which executes whenever a content item is created. \u4e3a\u4e86\u6267\u884c\u5de5\u4f5c\u6d41\uff0c\u5fc5\u987b\u81f3\u5c11\u5c06\u4e00\u4e2a\u6d3b\u52a8\u6807\u8bb0\u4e3a\u5de5\u4f5c\u6d41 \u7684 \u5f00\u59cb\u3002\u53ea\u6709\u4e8b\u4ef6\u6d3b\u52a8\u624d\u80fd\u6807\u8bb0\u4e3a\u5de5\u4f5c\u6d41\u7a0b\u7684\u5f00\u59cb\u3002\u6b64\u7c7b\u4e8b\u4ef6\u6d3b\u52a8\u7684\u4e00\u4e2a\u793a\u4f8b\u662f_Content Created_\uff0c\u5b83\u5728\u521b\u5efa\u5185\u5bb9\u9879\u65f6\u6267\u884c\u3002 A workflow can have more than one start event. This allows you to trigger (run) a workflow in response to various types of events. \u5de5\u4f5c\u6d41\u53ef\u4ee5\u6709\u591a\u4e2a\u542f\u52a8\u4e8b\u4ef6\u3002\u8fd9\u5141\u8bb8\u60a8\u89e6\u53d1\uff08\u8fd0\u884c\uff09\u5de5\u4f5c\u6d41\u4ee5\u54cd\u5e94\u5404\u79cd\u7c7b\u578b\u7684\u4e8b\u4ef6\u3002 Each activity has one or more outcomes , which represent a source endpoint from which a connection can be made to the next activity, which are called transitions. \u6bcf\u4e2a\u6d3b\u52a8\u90fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a \u7ed3\u679c \uff0c\u5b83\u4eec\u4ee3\u8868\u4e00\u4e2a\u6e90\u7aef\u70b9\uff0c\u4ece\u8be5\u7aef\u70b9\u53ef\u4ee5\u4e0e\u4e0b\u4e00\u4e2a\u6d3b\u52a8\u5efa\u7acb\u8fde\u63a5\uff0c\u79f0\u4e3a\u8f6c\u6362\u3002 By connecting activities, you are effectively creating a program that can be executed by Orchard in response to a multitude of events. \u901a\u8fc7\u8fde\u63a5\u6d3b\u52a8\uff0c\u60a8\u53ef\u4ee5\u6709\u6548\u5730\u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u7531Orchard\u6267\u884c\u4ee5\u54cd\u5e94\u591a\u4e2a\u4e8b\u4ef6\u3002 Activity Picker (Task / Event) 1.\u6d3b\u52a8\u9009\u62e9\u5668\uff08\u4efb\u52a1/\u4e8b\u4ef6\uff09 Activity actions (click an activity to display activity actions) 2.\u6d3b\u52a8\u64cd\u4f5c\uff08\u5355\u51fb\u6d3b\u52a8\u4ee5\u663e\u793a\u6d3b\u52a8\u64cd\u4f5c\uff09 An activity configured as the starting activity of the workflow. 3.\u914d\u7f6e\u4e3a\u5de5\u4f5c\u6d41\u7684\u8d77\u59cb\u6d3b\u52a8\u7684\u6d3b\u52a8\u3002 An activity. 4.\u4e00\u9879\u6d3b\u52a8\u3002 An Outcome (\"Done\") of an activity. 5.\u6d3b\u52a8\u7684\u7ed3\u679c\uff08\u201c\u5b8c\u6210\u201d\uff09\u3002 A transition between two activities (from \"Content Created\" via the \"Done\" outcome to the \"Send Email\" activity). 6.\u4e24\u4e2a\u6d3b\u52a8\u4e4b\u95f4\u7684\u8f6c\u6362\uff08\u4ece\u201c\u521b\u5efa\u5185\u5bb9\u201d\u5230\u201c\u5b8c\u6210\u201d\u7ed3\u679c\u5230\u201c\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u201d\u6d3b\u52a8\uff09\u3002 The workflow editor design surface. 7.\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u8bbe\u8ba1\u8868\u9762\u3002 Edit the workflow definition properties (Name, Enabled, etc.) 8.\u7f16\u8f91\u5de5\u4f5c\u6d41\u5b9a\u4e49\u5c5e\u6027\uff08\u540d\u79f0\uff0c\u5df2\u542f\u7528\u7b49\uff09 List the workflow instances for this workflow definition. 9.\u5217\u51fa\u6b64\u5de5\u4f5c\u6d41\u5b9a\u4e49\u7684\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002","title":"\u4e00\u822c\u6982\u5ff5"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#vocabulary","text":"","title":"Vocabulary"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_2","text":"When working with Orchard Workflows, you will encounter the following terms: \u4f7f\u7528Orchard Workflows\u65f6\uff0c\u60a8\u5c06\u9047\u5230\u4ee5\u4e0b\u672f\u8bed\uff1a","title":"\u8bcd\u6c47"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#workflow-definition","text":"","title":"Workflow Definition"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_3","text":"A document (as in a \"document-DB\" document) that contains all the necessary information about a workflow, such as its name, whether it's enabled or not, its set of activities and their transitions. \u4e00\u4e2a\u6587\u6863\uff08\u5982\u201cdocument-DB\u201d\u6587\u6863\u4e2d\uff09\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\u5de5\u4f5c\u6d41\u7684\u6240\u6709\u5fc5\u8981\u4fe1\u606f\uff0c\u4f8b\u5982\u5176\u540d\u79f0\uff0c\u662f\u5426\u5df2\u542f\u7528\uff0c\u5176\u6d3b\u52a8\u96c6\u53ca\u5176\u8f6c\u6362\u3002","title":"\u5de5\u4f5c\u6d41\u5b9a\u4e49"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#workflow-instance","text":"","title":"Workflow Instance"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_4","text":"A document that represents an \"instance\" of a workflow definition. A workflow instance contains runtime-state of a workflow. Whenever a workflow is started, a new workflow instance is created of a given workflow definition. \u8868\u793a\u5de5\u4f5c\u6d41\u5b9a\u4e49\u7684\u201c\u5b9e\u4f8b\u201d\u7684\u6587\u6863\u3002\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u5305\u542b\u5de5\u4f5c\u6d41\u7684\u8fd0\u884c\u65f6\u72b6\u6001\u3002\u6bcf\u5f53\u542f\u52a8\u5de5\u4f5c\u6d41\u65f6\uff0c\u90fd\u4f1a\u521b\u5efa\u7ed9\u5b9a\u5de5\u4f5c\u6d41\u5b9a\u4e49\u7684\u65b0\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002","title":"\u5de5\u4f5c\u6d41\u7a0b\u5b9e\u4f8b"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#activity","text":"","title":"Activity"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_5","text":"A step in a workflow definition. An activity performs an action and provides zero or more outcomes, which are used to connect to the next activity to execute. There are two types of activities: Task and Event. \u5de5\u4f5c\u6d41\u5b9a\u4e49\u4e2d\u7684\u4e00\u4e2a\u6b65\u9aa4\u3002\u6d3b\u52a8\u6267\u884c\u64cd\u4f5c\u5e76\u63d0\u4f9b\u96f6\u4e2a\u6216\u591a\u4e2a\u7ed3\u679c\uff0c\u7528\u4e8e\u8fde\u63a5\u5230\u8981\u6267\u884c\u7684\u4e0b\u4e00\u4e2a\u6d3b\u52a8\u3002\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u6d3b\u52a8\uff1a\u4efb\u52a1\u548c\u4e8b\u4ef6\u3002","title":"\u6d3b\u52a8"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#task","text":"","title":"Task"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_6","text":"A specialized type of activity. Tasks perform actions such as sending emails, publishing content and making HTTP requests. \u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u6d3b\u52a8\u3002\u4efb\u52a1\u6267\u884c\u8bf8\u5982\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u53d1\u5e03\u5185\u5bb9\u548c\u53d1\u51faHTTP\u8bf7\u6c42\u7b49\u64cd\u4f5c\u3002","title":"\u4efb\u52a1"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#event","text":"","title":"Event"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_7","text":"A specialized type of activity. Like tasks, events can perform actions, but typically all they do is halt the workflow, awaiting for an event to happen before continuing on to the next activity. When an event is configured as the starting activity of a workflow, that workflow is started when that event is triggered. \u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u6d3b\u52a8\u3002\u4e0e\u4efb\u52a1\u7c7b\u4f3c\uff0c\u4e8b\u4ef6\u53ef\u4ee5\u6267\u884c\u64cd\u4f5c\uff0c\u4f46\u901a\u5e38\u4ed6\u4eec\u6240\u505a\u7684\u53ea\u662f\u505c\u6b62\u5de5\u4f5c\u6d41\uff0c\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f\uff0c\u7136\u540e\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u6d3b\u52a8\u3002\u5c06\u4e8b\u4ef6\u914d\u7f6e\u4e3a\u5de5\u4f5c\u6d41\u7684\u542f\u52a8\u6d3b\u52a8\u65f6\uff0c\u5c06\u5728\u89e6\u53d1\u8be5\u4e8b\u4ef6\u65f6\u542f\u52a8\u8be5\u5de5\u4f5c\u6d41\u3002","title":"\u4e8b\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#workflow-editor","text":"","title":"Workflow Editor"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_8","text":"An editor that allows you to create and manage a workflow definition using a drag & drop visual interface. \u4e00\u79cd\u7f16\u8f91\u5668\uff0c\u5141\u8bb8\u60a8\u4f7f\u7528\u62d6\u653e\u53ef\u89c6\u754c\u9762\u521b\u5efa\u548c\u7ba1\u7406\u5de5\u4f5c\u6d41\u5b9a\u4e49\u3002","title":"\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#activity-editor","text":"","title":"Activity Editor"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_9","text":"Most activities expose settings that can be configured via the activity editor. To configure an activity, you can either double-click an activity on the design surface of the workflow editor, or click an activity once to activate a small popup that provides various actions you can perform on an activity. One of these actions is the Edit action. \u5927\u591a\u6570\u6d3b\u52a8\u90fd\u4f1a\u516c\u5f00\u53ef\u4ee5\u901a\u8fc7\u6d3b\u52a8\u7f16\u8f91\u5668\u914d\u7f6e\u7684\u8bbe\u7f6e\u3002\u8981\u914d\u7f6e\u6d3b\u52a8\uff0c\u60a8\u53ef\u4ee5\u53cc\u51fb\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u8bbe\u8ba1\u56fe\u9762\u4e0a\u7684\u6d3b\u52a8\uff0c\u4e5f\u53ef\u4ee5\u5355\u51fb\u6d3b\u52a8\u4e00\u6b21\u4ee5\u6fc0\u6d3b\u4e00\u4e2a\u5c0f\u5f39\u51fa\u7a97\u53e3\uff0c\u8be5\u5f39\u51fa\u7a97\u53e3\u63d0\u4f9b\u60a8\u53ef\u4ee5\u5bf9\u6d3b\u52a8\u6267\u884c\u7684\u5404\u79cd\u64cd\u4f5c\u3002\u5176\u4e2d\u4e00\u4e2a\u64cd\u4f5c\u662f\u7f16\u8f91\u64cd\u4f5c\u3002","title":"\u6d3b\u52a8\u7f16\u8f91\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#activity-picker","text":"","title":"Activity Picker"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_10","text":"When you are in the Workflow Editor, you use the Activity Picker to add activities to the design surface. Open the activity picker by clicking Add Task or Add Event to add a task or event, respectively. \u5f53\u60a8\u5728\u5de5\u4f5c\u6d41\u7a0b\u7f16\u8f91\u5668\u4e2d\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6d3b\u52a8\u9009\u62e9\u5668\u5c06\u6d3b\u52a8\u6dfb\u52a0\u5230\u8bbe\u8ba1\u56fe\u9762\u3002\u5355\u51fb_Add Task_\u6216_Add Event_\u5206\u522b\u6dfb\u52a0\u4efb\u52a1\u6216\u4e8b\u4ef6\uff0c\u6253\u5f00\u6d3b\u52a8\u9009\u62e9\u5668\u3002","title":"\u6d3b\u52a8\u9009\u62e9\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#outcome","text":"","title":"Outcome"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_11","text":"Each activity has zero or more outcomes. When an activity has executed, it yields control back to the workflow manager along with a list of outcomes. The workflow manager uses this list of outcomes to determine which activities to execute next. \u6bcf\u9879\u6d3b\u52a8\u90fd\u6709\u96f6\u4e2a\u6216\u591a\u4e2a\u7ed3\u679c\u3002\u6267\u884c\u6d3b\u52a8\u540e\uff0c\u5b83\u4f1a\u5c06\u63a7\u5236\u6743\u8fd4\u56de\u7ed9\u5de5\u4f5c\u6d41\u7a0b\u7ba1\u7406\u5668\u4ee5\u53ca\u7ed3\u679c\u5217\u8868\u3002\u5de5\u4f5c\u6d41\u7ba1\u7406\u5668\u4f7f\u7528\u6b64\u7ed3\u679c\u5217\u8868\u6765\u786e\u5b9a\u63a5\u4e0b\u6765\u8981\u6267\u884c\u7684\u6d3b\u52a8\u3002 Although many activities support multiple outcomes, they typically return only one of them when done executing. For example, the Send Email activity has two possible outcomes: \"Done\" and \"Failed\". When the email was sent successfully, it yields \"Done\" as the outcome, and \"Failed\" otherwise. \u867d\u7136\u8bb8\u591a\u6d3b\u52a8\u652f\u6301\u591a\u79cd\u7ed3\u679c\uff0c\u4f46\u5b83\u4eec\u901a\u5e38\u5728\u6267\u884c\u65f6\u53ea\u8fd4\u56de\u5176\u4e2d\u4e00\u79cd\u3002\u4f8b\u5982\uff0c_Send Email_\u6d3b\u52a8\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u7ed3\u679c\uff1a\u201c\u5b8c\u6210\u201d\u548c\u201c\u5931\u8d25\u201d\u3002\u7535\u5b50\u90ae\u4ef6\u6210\u529f\u53d1\u9001\u540e\uff0c\u4f1a\u4ea7\u751f\u201c\u5b8c\u6210\u201d\u4f5c\u4e3a\u7ed3\u679c\uff0c\u5426\u5219\u201c\u5931\u8d25\u201d\u3002","title":"\u7ed3\u679c"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#transition","text":"","title":"Transition"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_12","text":"A transition is the connection between the outcome of one activity to another activity. Transitions are created using drag & drop operations in the workflow editor. \u8f6c\u6362\u662f\u4e00\u4e2a\u6d3b\u52a8\u7684\u7ed3\u679c\u4e0e\u53e6\u4e00\u4e2a\u6d3b\u52a8\u4e4b\u95f4\u7684\u8054\u7cfb\u3002\u4f7f\u7528\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u4e2d\u7684\u62d6\u653e\u64cd\u4f5c\u521b\u5efa\u8fc7\u6e21\u3002","title":"\u8fc7\u6e21"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#workflow-manager","text":"","title":"Workflow Manager"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_13","text":"A service class that can execute workflows. When a workflow is executed, it takes care of creating a workflow instance which is then executed. \u53ef\u4ee5\u6267\u884c\u5de5\u4f5c\u6d41\u7684\u670d\u52a1\u7c7b\u3002\u6267\u884c\u5de5\u4f5c\u6d41\u65f6\uff0c\u5b83\u4f1a\u8d1f\u8d23\u521b\u5efa\u968f\u540e\u6267\u884c\u7684\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002","title":"\u5de5\u4f5c\u6d41\u7a0b\u7ba1\u7406\u5668"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#workflow-execution-context","text":"","title":"Workflow Execution Context"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_14","text":"When the Workflow Manager executes a workflow, it creates an object called the Workflow Execution Context. The Workflow Execution Context is a collection of all information relevant to workflow execution. \u5f53Workflow Manager\u6267\u884c\u5de5\u4f5c\u6d41\u65f6\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3aWorkflow Execution Context\u7684\u5bf9\u8c61\u3002\u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u4e0e\u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u76f8\u5173\u7684\u6240\u6709\u4fe1\u606f\u7684\u96c6\u5408\u3002 For example, it contains a reference to the workflow instance, workflow definition, correlation values, input, output and properties. \u4f8b\u5982\uff0c\u5b83\u5305\u542b\u5bf9\u5de5\u4f5c\u6d41\u5b9e\u4f8b\uff0c\u5de5\u4f5c\u6d41\u5b9a\u4e49\uff0c\u76f8\u5173\u503c\uff0c\u8f93\u5165\uff0c\u8f93\u51fa\u548c\u5c5e\u6027\u7684\u5f15\u7528\u3002 Each activity has access to this execution context. \u6bcf\u4e2a\u6d3b\u52a8\u90fd\u53ef\u4ee5\u8bbf\u95ee\u6b64\u6267\u884c\u4e0a\u4e0b\u6587\u3002","title":"\u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u4e0a\u4e0b\u6587"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#correlation","text":"","title":"Correlation"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_15","text":"Correlation is the act of associating a workflow instance with one or more identifiers . These identifiers can be anything. For example, when a workflow has the Content Created event as its starting point, the workflow instance will be associated, or rather correlated to the content item ID that was just created. \u5173\u8054\u662f\u5c06\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u4e0e\u4e00\u4e2a\u6216\u591a\u4e2a_identifiers_\u76f8\u5173\u8054\u7684\u884c\u4e3a\u3002\u8fd9\u4e9b\u6807\u8bc6\u7b26\u53ef\u4ee5\u662f\u4efb\u4f55\u5185\u5bb9\u4f8b\u5982\uff0c\u5f53\u5de5\u4f5c\u6d41\u5c06_Content Created_\u4e8b\u4ef6\u4f5c\u4e3a\u5176\u8d77\u70b9\u65f6\uff0c\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u5c06\u4e0e\u521a\u521a\u521b\u5efa\u7684\u5185\u5bb9\u9879ID\u76f8\u5173\u8054\uff0c\u6216\u8005\u66f4\u786e\u5207\u5730\u8bf4_correlated_\u3002 This allows long-running workflow scenarios where only workflow instances associated with a given content item ID are resumed. \u8fd9\u5141\u8bb8\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u5de5\u4f5c\u6d41\u573a\u666f\uff0c\u5176\u4e2d\u4ec5\u6062\u590d\u4e0e\u7ed9\u5b9a\u5185\u5bb9\u9879ID\u76f8\u5173\u8054\u7684\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002","title":"\u5173\u8054"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#input","text":"","title":"Input"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_16","text":"When a workflow is executed, the caller can provide input to the workflow instance. This input is stored in the Input dictionary of the workfow execution context. \u6267\u884c\u5de5\u4f5c\u6d41\u65f6\uff0c\u8c03\u7528\u8005\u53ef\u4ee5\u5411\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u63d0\u4f9b\u8f93\u5165\u3002\u6b64\u8f93\u5165\u5b58\u50a8\u5728\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u201c\u8f93\u5165\u201d\u5b57\u5178\u4e2d\u3002 This is analogous to providing arguments to a function. \u8fd9\u7c7b\u4f3c\u4e8e\u4e3a\u51fd\u6570\u63d0\u4f9b\u53c2\u6570\u3002","title":"\u8f93\u5165"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#output","text":"","title":"Output"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_17","text":"When a workflow executes, each activity can provide output values to the workflow instance. This output is stored in the Output dictionary of the workfow execution context. \u6267\u884c\u5de5\u4f5c\u6d41\u65f6\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u53ef\u4ee5\u5411\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u63d0\u4f9b\u8f93\u51fa\u503c\u3002\u6b64\u8f93\u51fa\u5b58\u50a8\u5728\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u201c\u8f93\u51fa\u201d\u5b57\u5178\u4e2d\u3002 This is analogous to returning values from a function. \u8fd9\u7c7b\u4f3c\u4e8e\u4ece\u51fd\u6570\u8fd4\u56de\u503c\u3002","title":"\u4ea7\u91cf"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#properties","text":"","title":"Properties"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_18","text":"When a workflow executes, each activity can set property values to the workflow instance. These properties are stored in the Properties dictionary of the workfow execution context. \u5f53\u5de5\u4f5c\u6d41\u6267\u884c\u65f6\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u53ef\u4ee5\u5c06\u5c5e\u6027\u503c\u8bbe\u7f6e\u4e3a\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002\u8fd9\u4e9b\u5c5e\u6027\u5b58\u50a8\u5728\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u201c\u5c5e\u6027\u201d\u5b57\u5178\u4e2d\u3002 Each activity can set and access these properties, allowing a workflow to compute and retrieve information that can then be processed by other activities further down the chain. \u6bcf\u4e2a\u6d3b\u52a8\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u548c\u8bbf\u95ee\u8fd9\u4e9b\u5c5e\u6027\uff0c\u5141\u8bb8\u5de5\u4f5c\u6d41\u8ba1\u7b97\u548c\u68c0\u7d22\u4fe1\u606f\uff0c\u7136\u540e\u53ef\u4ee5\u7531\u94fe\u4e2d\u7684\u5176\u4ed6\u6d3b\u52a8\u5904\u7406\u3002 This is analogous to a function setting local variables. \u8fd9\u7c7b\u4f3c\u4e8e\u8bbe\u7f6e\u5c40\u90e8\u53d8\u91cf\u7684\u51fd\u6570\u3002","title":"\u5c5e\u6027"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#workflow-execution","text":"","title":"Workflow Execution"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_19","text":"When a workflow executes, the Workflow Manager creates a Workflow Instance and a Workflow Execution Context . A workflow instance maintains state about the execution, such as which activity to execute next and state that can be provided by individual activities. \u5f53\u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u65f6\uff0c Workflow Manager \u4f1a\u521b\u5efa \u5de5\u4f5c\u6d41\u7a0b\u5b9e\u4f8b \u548c \u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u4e0a\u4e0b\u6587 \u3002\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u7ef4\u62a4\u6709\u5173\u6267\u884c\u7684\u72b6\u6001\uff0c\u4f8b\u5982\u4e0b\u4e00\u4e2a\u8981\u6267\u884c\u7684\u6d3b\u52a8\u4ee5\u53ca\u53ef\u4ee5\u7531\u5404\u4e2a\u6d3b\u52a8\u63d0\u4f9b\u7684\u72b6\u6001\u3002 A Workflow Instance is ultimately persisted in the underlying data storage provider, while a Workflow Execution Context exists only in memory for the duration of a workflow execution. \u5de5\u4f5c\u6d41\u5b9e\u4f8b\u6700\u7ec8\u4fdd\u7559\u5728\u57fa\u7840\u6570\u636e\u5b58\u50a8\u63d0\u4f9b\u7a0b\u5e8f\u4e2d\uff0c\u800c\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\u4ec5\u5728\u5de5\u4f5c\u6d41\u6267\u884c\u671f\u95f4\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\u3002 Workflows can be short-running as well as long-running . \u5de5\u4f5c\u6d41\u7a0b\u53ef\u4ee5 \u77ed\u671f\u8fd0\u884c \u4ee5\u53ca \u957f\u671f\u8fd0\u884c \u3002","title":"\u5de5\u4f5c\u6d41\u7a0b\u6267\u884c"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#short-running-workflows","text":"","title":"Short-running workflows"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_20","text":"When a workflow executes without encountering any blocking activities (i.e. activities that wait for an event to occur, such as Signal ), the workflow will run to completion in one go. \u5f53\u5de5\u4f5c\u6d41\u6267\u884c\u65f6\u6ca1\u6709\u9047\u5230\u4efb\u4f55 \u963b\u585e \u6d3b\u52a8\uff08\u5373\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f\u7684\u6d3b\u52a8\uff0c\u4f8b\u5982_Signal_\uff09\uff0c\u5de5\u4f5c\u6d41\u5c06\u4e00\u6b21\u5b8c\u6210\u8fd0\u884c\u3002","title":"\u77ed\u671f\u8fd0\u884c\u7684\u5de5\u4f5c\u6d41\u7a0b"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#long-running-workflows","text":"","title":"Long-running workflows"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_21","text":"When a workflow executes and encounters a blocking activity (such as an event), the workflow manager will halt execution and persist the workflow instance to the underlying persistence layer. \u5f53\u5de5\u4f5c\u6d41\u6267\u884c\u5e76\u9047\u5230\u963b\u585e\u6d3b\u52a8\uff08\u4f8b\u5982\u4e8b\u4ef6\uff09\u65f6\uff0c\u5de5\u4f5c\u6d41\u7ba1\u7406\u5668\u5c06_halt_\u6267\u884c\u5e76\u5c06\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u6301\u4e45\u4fdd\u5b58\u5230\u57fa\u7840\u6301\u4e45\u5c42\u3002 When the appropriate event is triggered (which could happen seconds, days, weeks or even years from now), the workflow manager will load the workflow instance from storage and resume execution. \u5f53\u89e6\u53d1\u9002\u5f53\u7684\u4e8b\u4ef6\uff08\u53ef\u80fd\u5728\u51e0\u79d2\uff0c\u51e0\u5929\uff0c\u51e0\u5468\u751a\u81f3\u51e0\u5e74\u540e\u53d1\u751f\uff09\u65f6\uff0c\u5de5\u4f5c\u6d41\u7ba1\u7406\u5668\u5c06\u4ece\u5b58\u50a8\u52a0\u8f7d\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u5e76\u7ee7\u7eed\u6267\u884c\u3002","title":"\u957f\u671f\u8fd0\u884c\u7684\u5de5\u4f5c\u6d41\u7a0b"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#scripts-and-expressions","text":"","title":"Scripts and Expressions"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_22","text":"Many activities have settings that can contain either JavaScript or Liquid syntax. \u8bb8\u591a\u6d3b\u52a8\u7684\u8bbe\u7f6e\u53ef\u4ee5\u5305\u542b JavaScript \u6216 Liquid \u8bed\u6cd5\u3002 For example, when adding the Notify activity, its editor shows the folling fields: \u4f8b\u5982\uff0c\u5728\u6dfb\u52a0 Notify \u6d3b\u52a8\u65f6\uff0c\u5176\u7f16\u8f91\u5668\u4f1a\u663e\u793a\u4ee5\u4e0b\u5b57\u6bb5\uff1a These type of fields allow you to enter Liquid markup, enabling access to system-wide variables and filters as well as variables from the workflow execution context . \u8fd9\u4e9b\u7c7b\u578b\u7684\u5b57\u6bb5\u5141\u8bb8\u60a8\u8f93\u5165Liquid\u6807\u8bb0\uff0c\u5141\u8bb8\u8bbf\u95ee\u7cfb\u7edf\u8303\u56f4\u7684\u53d8\u91cf\u548c\u8fc7\u6ee4\u5668\u4ee5\u53ca \u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u4e0a\u4e0b\u6587 \u4e2d\u7684\u53d8\u91cf\u3002","title":"\u811a\u672c\u548c\u8868\u8fbe\u5f0f"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#javascript-functions","text":"","title":"JavaScript Functions"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#javascript","text":"The following JavaScript functions are available by default to any activity that supports script expressions: \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4ee5\u4e0bJavaScript\u51fd\u6570\u53ef\u7528\u4e8e\u652f\u6301\u811a\u672c\u8868\u8fbe\u5f0f\u7684\u4efb\u4f55\u6d3b\u52a8\uff1a | Function | Description | Signature | |\u529f\u80fd|\u8bf4\u660e|\u7b7e\u540d| | -------- | ----------- | --------- | | -------- | ----------- --------- | | workflow | Returns the WorkflowExecutionContext which provides access to all information related to the current workflow execution context. | workflow(): WorkflowExecutionContext | |\u5de5\u4f5c\u6d41\u7a0b|\u8fd4\u56de WorkflowExecutionContext \uff0c\u5b83\u63d0\u4f9b\u5bf9\u4e0e\u5f53\u524d\u5de5\u4f5c\u6d41\u6267\u884c\u4e0a\u4e0b\u6587\u76f8\u5173\u7684\u6240\u6709\u4fe1\u606f\u7684\u8bbf\u95ee\u3002 | workflow\uff08\uff09\uff1aWorkflowExecutionContext | | workflowId | Returns the unique workflow ID. | workflowId(): string | | workflowId |\u8fd4\u56de\u552f\u4e00\u7684\u5de5\u4f5c\u6d41ID\u3002 | workflowId\uff08\uff09\uff1astring | | input | Returns the input parameter with the specified name. Input to the workflow is provided when the workflow is executed by the workflow manager. | input(name: string): any | |\u8f93\u5165|\u8fd4\u56de\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u8f93\u5165\u53c2\u6570\u3002\u5f53\u5de5\u4f5c\u6d41\u7a0b\u7531\u5de5\u4f5c\u6d41\u7a0b\u7ba1\u7406\u5668\u6267\u884c\u65f6\uff0c\u5c06\u63d0\u4f9b\u5bf9\u5de5\u4f5c\u6d41\u7a0b\u7684\u8f93\u5165\u3002 | input\uff08name\uff1astring\uff09\uff1aany | | output | Sets an output parameter with the specified name. Workflow output can be collected by the invoker of the workflow. | output(name: string, value: any): void | |\u8f93\u51fa|\u8bbe\u7f6e\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u8f93\u51fa\u53c2\u6570\u3002\u5de5\u4f5c\u6d41\u8f93\u51fa\u53ef\u4ee5\u7531\u5de5\u4f5c\u6d41\u7684\u8c03\u7528\u8005\u6536\u96c6\u3002 | output\uff08name\uff1astring\uff0cvalue\uff1aany\uff09\uff1avoid | | property | Returns the property value with the specified name. Properties are a dictionary that workflow activities can read and write information from and to. | property(name: string): any | |\u8d22\u4ea7|\u8fd4\u56de\u5177\u6709\u6307\u5b9a\u540d\u79f0\u7684\u5c5e\u6027\u503c\u3002\u5c5e\u6027\u662f\u5de5\u4f5c\u6d41\u6d3b\u52a8\u53ef\u4ee5\u4ece\u4e2d\u8bfb\u53d6\u548c\u5199\u5165\u4fe1\u606f\u7684\u5b57\u5178\u3002 | property\uff08name\uff1astring\uff09\uff1aany | | lastResult | Returns the value that the previous activity provided, if any. | lastResult(): any | | lastResult |\u8fd4\u56de\u4e0a\u4e00\u4e2a\u6d3b\u52a8\u63d0\u4f9b\u7684\u503c\uff08\u5982\u679c\u6709\uff09\u3002 | lastResult\uff08\uff09\uff1aany | | correlationId | Returns the correlation value of the workflow instance. | correlationId(): string | | correlationId |\u8fd4\u56de\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u7684\u76f8\u5173\u503c\u3002 | correlationId\uff08\uff09\uff1astring | | signalUrl | Returns workflow trigger URL with a protected SAS token into which the specified signal name is encoded. Use this to generate URLs that can be shared with trusted parties to trigger the current workflow if it is blocked on the Signal activity that is condifured with the same signal name. | signalUrl(signal: string): string | | signalUrl |\u8fd4\u56de\u5de5\u4f5c\u6d41\u89e6\u53d1\u5668URL\uff0c\u5176\u4e2d\u5305\u542b\u53d7\u4fdd\u62a4\u7684SAS\u4ee4\u724c\uff0c\u5176\u4e2d\u7f16\u7801\u6307\u5b9a\u7684\u4fe1\u53f7\u540d\u79f0\u3002\u4f7f\u7528\u6b64\u9009\u9879\u53ef\u751f\u6210\u53ef\u4e0e\u53d7\u4fe1\u4efb\u65b9\u5171\u4eab\u7684URL\uff0c\u4ee5\u89e6\u53d1\u5f53\u524d\u5de5\u4f5c\u6d41\uff08\u5982\u679c\u5728\u4f7f\u7528\u76f8\u540c\u4fe1\u53f7\u540d\u79f0\u7f16\u53f7\u7684Signal\u6d3b\u52a8\u4e0a\u88ab\u963b\u6b62\uff09\u3002 | signalUrl\uff08signal\uff1astring\uff09\uff1astring |","title":"JavaScript\u51fd\u6570"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#liquid-expressions","text":"","title":"Liquid Expressions"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_23","text":"The following Liquid tags, properties and filters are available by default to any activity that supports Liquid expressions: \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4ee5\u4e0bLiquid\u6807\u7b7e\uff0c\u5c5e\u6027\u548c\u8fc7\u6ee4\u5668\u53ef\u7528\u4e8e\u652f\u6301Liquid\u8868\u8fbe\u5f0f\u7684\u4efb\u4f55\u6d3b\u52a8\uff1a | Expression | Type | Description | Example | |\u8868\u8fbe|\u8f93\u5165|\u8bf4\u660e|\u793a\u4f8b| | ---------- | ---- | ----------- | ------- | | ---------- | ---- | ----------- ------- | | Workflow.CorrelationId | Property | Returns the correlation value of the workflow instance. | {{ Workflow.CorrelationId }} | | Workflow.CorrelationId |\u8d22\u4ea7|\u8fd4\u56de\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u7684\u76f8\u5173\u503c\u3002 | {{Workflow.CorrelationId}} | | Workflow.Input | Property | Returns the Input dictionary. | {{ Workflow.Input[\"ContentItem\"] }} | | Workflow.Input |\u8d22\u4ea7|\u8fd4\u56deInput\u5b57\u5178\u3002 | {{Workflow.Input [\u201cContentItem\u201d]}} | | Workflow.Output | Property | Returns the Output dictionary. | {{ Workflow.Output[\"SomeResult\"] }} | | Workflow.Output |\u8d22\u4ea7|\u8fd4\u56de\u8f93\u51fa\u5b57\u5178\u3002 | {{Workflow.Output [\u201cSomeResult\u201d]}} | | Workflow.Properties | Property | Returns the Properties dictionary. | {{ Workflow.Properties[\"Foo\"] }} | | Workflow.Properties |\u8d22\u4ea7|\u8fd4\u56deProperties\u5b57\u5178\u3002 | {{Workflow.Properties [\u201cFoo\u201d]}} | Instead of using the indexer syntax on the three workflow dictionaries Input , Output and Properties , you cal also use dot notation, e.g.: \u800c\u4e0d\u662f\u5728\u4e09\u4e2a\u5de5\u4f5c\u6d41\u8bcd\u5178 Input \uff0c Output \u548c Properties \u4e0a\u4f7f\u7528\u7d22\u5f15\u5668\u8bed\u6cd5\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u70b9\u8868\u793a\u6cd5\uff0c\u4f8b\u5982\uff1a {{ Workflow.Input.ContentItem }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Workflow.Input.ContentItem}}</font>","title":"\u6db2\u4f53\u8868\u8fbe"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#liquid-expressions-and-contentitem-events","text":"","title":"Liquid Expressions and ContentItem Events"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#liquid-expressionscontentitem","text":"When handling content related events using a workflow, the content item in question is made available to the workflow via the Input dictionary. \u5f53\u4f7f\u7528\u5de5\u4f5c\u6d41\u5904\u7406\u5185\u5bb9\u76f8\u5173\u4e8b\u4ef6\u65f6\uff0c\u6240\u8ba8\u8bba\u7684\u5185\u5bb9\u9879\u901a\u8fc7\u201c\u8f93\u5165\u201d\u5b57\u5178\u63d0\u4f9b\u7ed9\u5de5\u4f5c\u6d41\u3002 For example, if you have a workflow that starts with the Content Created Event activity, you can send an email or make an HTTP request whereand reference the content item from fieldsliquid-ebabled fields as follows: \u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u5de5\u4f5c\u6d41\u7a0b\u4ee5 Content Created Event \u6d3b\u52a8\u5f00\u5934\uff0c\u5219\u53ef\u4ee5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u6216\u53d1\u51faHTTP\u8bf7\u6c42\uff0c\u5e76\u5728fieldsliquid-ebabled\u5b57\u6bb5\u4e2d\u5f15\u7528\u5185\u5bb9\u9879\uff0c\u5982\u4e0b\u6240\u793a\uff1a {{ Workflow.Input.ContentItem | display_url }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Workflow.Input.ContentItem | display_url}}</font> {{ Workflow.Input.ContentItem | display_text }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Workflow.Input.ContentItem | display_text}}</font> {{ Workflow.Input.ContentItem.DisplayText }} <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{{Workflow.Input.ContentItem.DisplayText}}</font> For more examples of supported content item filters, see documention on Liquid . \u6709\u5173\u53d7\u652f\u6301\u7684\u5185\u5bb9\u9879\u8fc7\u6ee4\u5668\u7684\u66f4\u591a\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605[Liquid]\u4e0a\u7684\u6587\u6863\uff08https://orchardcore.readthedocs.io/en/latest/OrchardCore.Modules/OrchardCore.Liquid/README/\uff09\u3002","title":"Liquid Expressions\u548cContentItem\u4e8b\u4ef6"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#activities-out-of-the-box","text":"","title":"Activities out of the box"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_24","text":"The following activities are available with any default Orchard installation: \u4efb\u4f55\u9ed8\u8ba4\u7684Orchard\u5b89\u88c5\u90fd\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6d3b\u52a8\uff1a | Activity | Type | Description | Documentation | |\u6d3b\u52a8|\u8f93\u5165|\u8bf4\u660e|\u6587\u6863| | -------- | ---- | ----------- | ------------- | | -------- | ---- | ----------- ------------- | | Workflows | * | * | * | | \u5de5\u4f5c\u6d41\u7a0b | * | * | * | | Correlate | Task | Correlate the current workflow instance with a value. | [link] | |\u76f8\u5173|\u4efb\u52a1|\u5c06\u5f53\u524d\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u4e0e\u503c\u76f8\u5173\u8054\u3002 | [\u94fe\u63a5] | | For Each | Task | Iterate over a list. | [link] | |\u6bcf\u4e2a|\u4efb\u52a1|\u8fed\u4ee3\u4e00\u4e2a\u5217\u8868\u3002 | [\u94fe\u63a5] | | Fork | Task | Fork workflow execution into separate paths of execution. | [link] | |\u53c9|\u4efb\u52a1|\u5c06\u5de5\u4f5c\u6d41\u6267\u884c\u5206\u6210\u72ec\u7acb\u7684\u6267\u884c\u8def\u5f84\u3002 | [\u94fe\u63a5] | | For Loop | Task | Iterates for N times. | [link] | | For Loop |\u4efb\u52a1|\u8fed\u4ee3N\u6b21\u3002 | [\u94fe\u63a5] | | If / Else | Task | Evaluate a boolean condition and continues execution based on the outcome. | [link] | |\u5982\u679c/ Else |\u4efb\u52a1|\u8bc4\u4f30\u5e03\u5c14\u6761\u4ef6\u5e76\u6839\u636e\u7ed3\u679c\u7ee7\u7eed\u6267\u884c\u3002 | [\u94fe\u63a5] | | Join | Task | Join a forked workflow execution back into a single path of execution. | [link] | |\u52a0\u5165|\u4efb\u52a1|\u5c06\u5206\u53c9\u7684\u5de5\u4f5c\u6d41\u7a0b\u6267\u884c\u91cd\u65b0\u52a0\u5165\u5230\u5355\u4e2a\u6267\u884c\u8def\u5f84\u4e2d\u3002 | [\u94fe\u63a5] | | Log | Task | Write a log entry. | [link] | |\u8bb0\u5f55|\u4efb\u52a1|\u5199\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\u3002 | [\u94fe\u63a5] | | Notify | Task | Display a notification. | [link] | |\u901a\u77e5|\u4efb\u52a1|\u663e\u793a\u901a\u77e5\u3002 | [\u94fe\u63a5] | | Script | Task | Execute script and continue execution based on the returned outcome. | [link] | |\u811a\u672c|\u4efb\u52a1|\u6267\u884c\u811a\u672c\u5e76\u6839\u636e\u8fd4\u56de\u7684\u7ed3\u679c\u7ee7\u7eed\u6267\u884c\u3002 | [\u94fe\u63a5] | | Set Output | Task | Evaluate a script expression and store the result into the workflow's output. | [link] | |\u8bbe\u7f6e\u8f93\u51fa|\u4efb\u52a1|\u8bc4\u4f30\u811a\u672c\u8868\u8fbe\u5f0f\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u5de5\u4f5c\u6d41\u7684\u8f93\u51fa\u4e2d\u3002 | [\u94fe\u63a5] | | Set Property | Task | Execute script and continue execution based on the returned outcome. | [link] | |\u8bbe\u7f6e\u5c5e\u6027|\u4efb\u52a1|\u6267\u884c\u811a\u672c\u5e76\u6839\u636e\u8fd4\u56de\u7684\u7ed3\u679c\u7ee7\u7eed\u6267\u884c\u3002 | [\u94fe\u63a5] | | While Loop | Task | Iterate while a condition is true. | [link] | |\u800cLoop |\u4efb\u52a1|\u5728\u6761\u4ef6\u6210\u7acb\u65f6\u8fed\u4ee3\u3002 | [\u94fe\u63a5] | | HTTP Workflow Activities | * | * | * | | HTTP\u5de5\u4f5c\u6d41\u7a0b\u6d3b\u52a8 | * | * | * | | HTTP Redirect | Task | Redirect the user agent to the specified URL (301/302). | [link] | | HTTP\u91cd\u5b9a\u5411|\u4efb\u52a1|\u5c06\u7528\u6237\u4ee3\u7406\u91cd\u5b9a\u5411\u5230\u6307\u5b9a\u7684URL\uff08301/302\uff09\u3002 | [\u94fe\u63a5] | | HTTP Request | Task | Perform a HTTP request to a given URL. | [link] | | HTTP\u8bf7\u6c42|\u4efb\u52a1|\u5bf9\u7ed9\u5b9a\u7684URL\u6267\u884cHTTP\u8bf7\u6c42\u3002 | [\u94fe\u63a5] | | Filter Incoming HTTP Request | Event | Executes when the specified HTTP request comes in. Similar to an MVC Action Filter. | [link] | |\u8fc7\u6ee4\u4f20\u5165\u7684HTTP\u8bf7\u6c42|\u6d3b\u52a8|\u5728\u6307\u5b9a\u7684HTTP\u8bf7\u6c42\u8fdb\u5165\u65f6\u6267\u884c\u3002\u7c7b\u4f3c\u4e8eMVC\u64cd\u4f5c\u8fc7\u6ee4\u5668\u3002 | [\u94fe\u63a5] | | Signal | Event | Executes when a signal is triggered. | [link] | |\u4fe1\u53f7|\u6d3b\u52a8|\u89e6\u53d1\u4fe1\u53f7\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Email | * | * | * | | \u7535\u5b50\u90ae\u4ef6 | * | * | * | | Send Email | Task | Send an email. | [link] | |\u53d1\u9001\u7535\u5b50\u90ae\u4ef6|\u4efb\u52a1|\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002 | [\u94fe\u63a5] | | Timer Workflow Activities | * | * | * | | \u5b9a\u65f6\u5668\u5de5\u4f5c\u6d41\u7a0b\u6d3b\u52a8 | * | * | * | | Timer | Event | Executes repeatedly according to a specified CRON expression. | [link] | |\u5b9a\u65f6\u5668|\u6d3b\u52a8|\u6839\u636e\u6307\u5b9a\u7684CRON\u8868\u8fbe\u5f0f\u91cd\u590d\u6267\u884c\u3002 | [\u94fe\u63a5] | | Contents | * | * | * | | \u5185\u5bb9 | * | * | * | | Content Created | Event | Executes when content is created. | [link] | |\u5185\u5bb9\u521b\u5efa|\u6d3b\u52a8|\u521b\u5efa\u5185\u5bb9\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Content Deleted | Event | Executes when content is deleted. | [link] | |\u5185\u5bb9\u5df2\u5220\u9664|\u6d3b\u52a8|\u5220\u9664\u5185\u5bb9\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Content Published | Event | Executes when content is published. | [link] | |\u5185\u5bb9\u53d1\u5e03|\u6d3b\u52a8|\u53d1\u5e03\u5185\u5bb9\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Content Updated | Event | Executes when content is updated. | [link] | |\u5185\u5bb9\u66f4\u65b0|\u6d3b\u52a8|\u66f4\u65b0\u5185\u5bb9\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Content Versioned| Event | Executes when content is versioned. | [link] | |\u5185\u5bb9\u7248\u672c|\u6d3b\u52a8|\u5728\u5185\u5bb9\u7248\u672c\u5316\u65f6\u6267\u884c\u3002 | [\u94fe\u63a5] | | Create Content | Task | Create a content item. | [link] | |\u521b\u5efa\u5185\u5bb9|\u4efb\u52a1|\u521b\u5efa\u5185\u5bb9\u9879\u3002 | [\u94fe\u63a5] | | Delete Content | Task | Delete a content item. | [link] | |\u5220\u9664\u5185\u5bb9|\u4efb\u52a1|\u5220\u9664\u5185\u5bb9\u9879\u3002 | [\u94fe\u63a5] | | Publish Content | Task | Publish a content item. | [link] | |\u53d1\u5e03\u5185\u5bb9|\u4efb\u52a1|\u53d1\u5e03\u5185\u5bb9\u9879\u3002 | [\u94fe\u63a5] |","title":"\u5f00\u7bb1\u5373\u7528\u7684\u6d3b\u52a8"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#walkthroughs","text":"","title":"Walkthroughs"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_25","text":"","title":"\u6f14\u7ec3"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#developing-custom-activities","text":"","title":"Developing Custom Activities"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_28","text":"Orchard is built to be extended, and the Workflows module is no different. When creating your own module, you can develop custom workflow activities. Developing custom activities involve the following steps: Orchard\u662f\u4e3a\u6269\u5c55\u800c\u6784\u5efa\u7684\uff0cWorkflows\u6a21\u5757\u4e5f\u4e0d\u4f8b\u5916\u3002\u521b\u5efa\u81ea\u5df1\u7684\u6a21\u5757\u65f6\uff0c\u60a8\u53ef\u4ee5\u5f00\u53d1\u81ea\u5b9a\u4e49\u5de5\u4f5c\u6d41\u7a0b\u6d3b\u52a8\u3002\u5f00\u53d1\u81ea\u5b9a\u4e49\u6d3b\u52a8\u6d89\u53ca\u4ee5\u4e0b\u6b65\u9aa4\uff1a Create a new class that directly or indirectly implements IActivity . In most cases, you either derive from TaskActivity or EventActivity , depending on whether your activity represents an event or not. Although not required, it is recommended to keep this class in a folder called Activities . 1.\u521b\u5efa\u4e00\u4e2a\u76f4\u63a5\u6216\u95f4\u63a5\u5b9e\u73b0\u201cIActivity\u201d\u7684\u65b0\u7c7b\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4ece\u201cTaskActivity\u201d\u6216\u201cEventActivity\u201d\u6d3e\u751f\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u7684\u6d3b\u52a8\u662f\u5426\u4ee3\u8868\u67d0\u4e2a\u4e8b\u4ef6\u3002\u867d\u7136\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u5efa\u8bae\u5c06\u6b64\u7c7b\u4fdd\u5b58\u5728\u540d\u4e3a Activities \u7684\u6587\u4ef6\u5939\u4e2d\u3002 Create a new display driver class that directly or indirectly implements IDisplayDriver . An activity display driver controls the activity's display on the workflow editor canvas , the activity picker and the activity editor . Although not required, it is recommended to keep this class in a folder called Drivers . 2.\u521b\u5efa\u4e00\u4e2a\u76f4\u63a5\u6216\u95f4\u63a5\u5b9e\u73b0 IDisplayDriver \u7684\u65b0 \u663e\u793a\u9a71\u52a8\u7a0b\u5e8f \u7c7b\u3002\u6d3b\u52a8\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u63a7\u5236 \u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u753b\u5e03 \uff0c \u6d3b\u52a8\u9009\u62e9\u5668 \u548c \u6d3b\u52a8\u7f16\u8f91\u5668 \u4e0a\u7684\u6d3b\u52a8\u663e\u793a\u3002\u867d\u7136\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u5efa\u8bae\u5c06\u6b64\u7c7b\u4fdd\u5b58\u5728\u540d\u4e3a Drivers \u7684\u6587\u4ef6\u5939\u4e2d\u3002 Optionally implement a view model if your activity has properties that the user should be able to configure. 3.\u5982\u679c\u60a8\u7684\u6d3b\u52a8\u5177\u6709\u7528\u6237\u5e94\u8be5\u80fd\u591f\u914d\u7f6e\u7684\u5c5e\u6027\uff0c\u5219\u53ef\u4ee5\u9009\u62e9\u5b9e\u65bd \u89c6\u56fe\u6a21\u578b \u3002 Implement the various Razor views for the various shapes provided by the driver. Although not required, it is recommended to store these files in the Views/Items folder. Note that it is required for your views to be discoverable by the display engine. 4.\u4e3a\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u7684\u5404\u79cd\u5f62\u72b6\u5b9e\u73b0\u5404\u79cdRazor\u89c6\u56fe\u3002\u867d\u7136\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u5efa\u8bae\u5c06\u8fd9\u4e9b\u6587\u4ef6\u5b58\u50a8\u5728 Views / Items \u6587\u4ef6\u5939\u4e2d\u3002\u8bf7\u6ce8\u610f\uff0c\u663e\u793a\u5f15\u64ce\u53ef\u4ee5\u53d1\u73b0\u60a8\u7684\u89c6\u56fe\u3002","title":"\u5f00\u53d1\u81ea\u5b9a\u4e49\u6d3b\u52a8"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#activity-display-types","text":"","title":"Activity Display Types"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_29","text":"An activity has the following display types: \u6d3b\u52a8\u5177\u6709\u4ee5\u4e0b\u663e\u793a\u7c7b\u578b\uff1a Thumbnail \u7f29\u7565\u56fe Design \u8bbe\u8ba1 Thumbnail \u7f29\u7565\u56fe Used when the activity is rendered as part of the activity picker. \u5728\u6d3b\u52a8\u4f5c\u4e3a\u6d3b\u52a8\u9009\u62e9\u5668\u7684\u4e00\u90e8\u5206\u5448\u73b0\u65f6\u4f7f\u7528\u3002 Design \u8bbe\u8ba1 Used when the activity is rendered as part of the workflow editor design surface. \u5728\u6d3b\u52a8\u4f5c\u4e3a\u5de5\u4f5c\u6d41\u7f16\u8f91\u5668\u8bbe\u8ba1\u56fe\u9762\u7684\u4e00\u90e8\u5206\u5448\u73b0\u65f6\u4f7f\u7528\u3002","title":"\u6d3b\u52a8\u663e\u793a\u7c7b\u578b"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#iactivity","text":"","title":"IActivity"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#iactivity_1","text":"IActivity has the following members: Name \u540d\u79f0 Category \u7c7b\u522b Properties \u5c5e\u6027 HasEditor HasEditor GetPossibleOutcomes GetPossibleOutcomes CanExecuteAsync CanExecuteAsync ExecuteAsync ExecuteAsync ResumeAsync ResumeAsync OnInputReceivedAsync OnInputReceivedAsync OnWorkflowStartingAsync OnWorkflowStartingAsync OnWorkflowStartedAsync OnWorkflowStartedAsync OnWorkflowResumingAsync OnWorkflowResumingAsync OnWorkflowResumedAsync OnWorkflowResumedAsync OnActivityExecutingAsync OnActivityExecutingAsync OnActivityExecutedAsync OnActivityExecutedAsync The IEvent interface adds the following member: IEvent \u63a5\u53e3\u6dfb\u52a0\u4ee5\u4e0b\u6210\u5458\uff1a CanStartWorkflow CanStartWorkflow The following is an example of a simple activity implementation that displays a notification: \u4ee5\u4e0b\u662f\u663e\u793a\u901a\u77e5\u7684\u7b80\u5355\u6d3b\u52a8\u5b9e\u73b0\u7684\u793a\u4f8b\uff1a public class NotifyTask : TaskActivity <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u7c7bNotifyTask\uff1aTaskActivity</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> private readonly INotifier _notifier; private readonly IStringLocalizer S; private readonly IHtmlLocalizer H; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public NotifyTask(INotifier notifier, IStringLocalizer<NotifyTask> s, IHtmlLocalizer<NotifyTask> h) { _notifier = notifier; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> S = s; H = h; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // The technical name of the activity. Activities on a workflow definition reference this name. public override string Name => nameof(NotifyTask); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // The category to which this activity belongs. The activity picker groups activities by this category. public override LocalizedString Category => S[\"UI\"]; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // A description of this activity's purpose. <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">//\u6b64\u6d3b\u52a8\u76ee\u7684\u7684\u63cf\u8ff0\u3002</font> public override LocalizedString Description => S[\"Display a message.\"]; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // The notification type to display. public NotifyType NotificationType { get => GetProperty<NotifyType>(); set => SetProperty(value); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // The message to display. <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">//\u8981\u663e\u793a\u7684\u6d88\u606f\u3002</font> public WorkflowExpression<string> Message { get => GetProperty(() => new WorkflowExpression<string>()); set => SetProperty(value); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // Returns the possible outcomes of this activity. public override IEnumerable<Outcome> GetPossibleOutcomes(WorkflowContext workflowContext, ActivityContext activityContext) { return Outcomes(S[\"Done\"]); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // This is the heart of the activity and actually performs the work to be done. public override async Task<ActivityExecutionResult> ExecuteAsync(WorkflowContext workflowContext, ActivityContext activityContext) { var message = await workflowContext.EvaluateExpressionAsync(Message); _notifier.Add(NotificationType, H[message]); return Outcomes(\"Done\"); } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> The following is an example of a simple activity display driver: \u4ee5\u4e0b\u662f\u7b80\u5355\u6d3b\u52a8\u663e\u793a\u9a71\u52a8\u7a0b\u5e8f\u7684\u793a\u4f8b\uff1a public class NotifyTaskDisplay : ActivityDisplayDriver<NotifyTask, NotifyTaskViewModel> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">public class NotifyTaskDisplay\uff1aActivityDisplayDriver <NotifyTask\uff0cNotifyTaskViewModel></font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> protected override void EditActivity(NotifyTask activity, NotifyTaskViewModel model) { model.NotificationType = activity.NotificationType; model.Message = activity.Message.Expression; } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> protected override void UpdateActivity(NotifyTaskViewModel model, NotifyTask activity) { activity.NotificationType = model.NotificationType; activity.Message = new WorkflowExpression<string>(model.Message); } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> The above code performs a simple mapping of a NotifyTask to a NotifyTaskViewModel and vice versa. \u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u201cNotifyTask\u201d\u5230\u201cNotifyTaskViewModel\u201d\u7684\u7b80\u5355\u6620\u5c04\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002 This simple implementation is possible because the actual creation of the necessary editor and display shapes are taken care of by ActivityDisplayDriver<TActivity, TEditViewModel> , which looks like this (modified to focus on the important parts): \u8fd9\u79cd\u7b80\u5355\u7684\u5b9e\u73b0\u662f\u53ef\u884c\u7684\uff0c\u56e0\u4e3a\u5fc5\u8981\u7684\u7f16\u8f91\u5668\u548c\u663e\u793a\u5f62\u72b6\u7684\u5b9e\u9645\u521b\u5efa\u7531 ActivityDisplayDriver <TActivity\uff0cTEditViewModel> \u6765\u5904\u7406\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff08\u4fee\u6539\u4e3a\u4e13\u6ce8\u4e8e\u91cd\u8981\u90e8\u5206\uff09\uff1a public abstract class ActivityDisplayDriver<TActivity, TEditViewModel> : ActivityDisplayDriver<TActivity> where TActivity : class, IActivity where TEditViewModel : class, new() <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u516c\u5171\u62bd\u8c61\u7c7bActivityDisplayDriver <TActivity\uff0cTEditViewModel>\uff1aActivityDisplayDriver <TActivity>\u5176\u4e2dTActivity\uff1aclass\uff0cIActivity\u5176\u4e2dTEditViewModel\uff1aclass\uff0cnew\uff08\uff09</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> private static string ThumbnailshapeType = $\"{typeof(TActivity).Name}_Fields_Thumbnail\"; private static string DesignShapeType = $\"{typeof(TActivity).Name}_Fields_Design\"; private static string EditShapeType = $\"{typeof(TActivity).Name}_Fields_Edit\"; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public override IDisplayResult Display(TActivity activity) { return Combine( Shape(ThumbnailshapeType, new ActivityViewModel<TActivity>(activity)).Location(\"Thumbnail\", \"Content\"), Shape(DesignShapeType, new ActivityViewModel<TActivity>(activity)).Location(\"Design\", \"Content\") ); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public override IDisplayResult Edit(TActivity activity) { return Initialize<TEditViewModel>(EditShapeType, model => { return EditActivityAsync(activity, model); }).Location(\"Content\"); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> public async override Task<IDisplayResult> UpdateAsync(TActivity activity, IUpdateModel updater) { var viewModel = new TEditViewModel(); if (await updater.TryUpdateModelAsync(viewModel, Prefix)) { await UpdateActivityAsync(viewModel, activity); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> return Edit(activity); } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Notice that the shape names are derived from the activity type, effectively implementing a naming convention for the shape template names to use. \u8bf7\u6ce8\u610f\uff0c\u5f62\u72b6\u540d\u79f0\u662f\u4ece\u6d3b\u52a8\u7c7b\u578b\u6d3e\u751f\u7684\uff0c\u6709\u6548\u5730\u5b9e\u73b0\u4e86\u8981\u4f7f\u7528\u7684\u5f62\u72b6\u6a21\u677f\u540d\u79f0\u7684\u547d\u540d\u7ea6\u5b9a\u3002 Continuing with the NotifyTask example, we now need to create the following Razor files: \u7ee7\u7eed\u4f7f\u7528 NotifyTask \u793a\u4f8b\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u521b\u5efa\u4ee5\u4e0bRazor\u6587\u4ef6\uff1a NotifyTask.Fields.Design.cshtml NotifyTask.Fields.Design.cshtml NotifyTask.Fields.Thumbnail.cshtml NotifyTask.Fields.Thumbnail.cshtml NotifyTask.Fields.Edit.cshtml NotifyTask.Fields.Edit.cshtml","title":"IActivity"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#credits","text":"","title":"CREDITS"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#_30","text":"","title":"\u5b66\u5206"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#jsplumb","text":"","title":"jsPlumb"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#jsplumb_1","text":"https://github.com/jsplumb/jsplumb https://github.com/jsplumb/jsplumb Copyright (c) 2010 - 2014 jsPlumb, http://jsplumbtoolkit.com/ \u7248\u6743\u6240\u6709\uff08c\uff092010 - 2014 jsPlumb\uff0chttp\uff1a//jsplumbtoolkit.com/ License: dual-licensed under both MIT and GPLv \u8bb8\u53ef\u8bc1\uff1aMIT\u548cGPLv\u4e0b\u7684\u53cc\u91cd\u8bb8\u53ef","title":"jsPlumb"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#ncrontab","text":"","title":"NCrontab"},{"location":"OrchardCore.Modules/OrchardCore.Workflows/#ncrontab_1","text":"https://github.com/atifaziz/NCrontab https://github.com/atifaziz/NCrontab Copyright (C) Atif Aziz \u7248\u6743\u6240\u6709\uff08C\uff09Atif Aziz License: Apache License 2.0 \u8bb8\u53ef\u8bc1\uff1aApache License 2.0","title":"NCrontab"},{"location":"OrchardCore.Themes/TheAgencyTheme/","text":"Start Bootstrap - Agency [Start Bootstrap - Agency]\uff08https://startbootstrap.com/template-overviews/agency/\uff09 Agency is a one page agency portfolio theme for Bootstrap created by Start Bootstrap . This theme features several content sections, a responsive portfolio grid with hover effects, full page portfolio item modals, a responsive timeline, and a working PHP contact form. [Agency]\uff08https://startbootstrap.com/template-overviews/agency/\uff09\u662f\u7531[Start Bootstrap]\u521b\u5efa\u7684[Bootstrap]\uff08http://getbootstrap.com/\uff09\u7684\u5355\u9875\u4ee3\u7406\u5546\u7ec4\u5408\u4e3b\u9898\uff08http\uff1a/ /startbootstrap.com/\uff09\u3002\u6b64\u4e3b\u9898\u5305\u542b\u51e0\u4e2a\u5185\u5bb9\u90e8\u5206\uff0c\u5177\u6709\u60ac\u505c\u6548\u679c\u7684\u54cd\u5e94\u5f0f\u6295\u8d44\u7ec4\u5408\u7f51\u683c\uff0c\u5b8c\u6574\u9875\u9762\u6295\u8d44\u7ec4\u5408\u9879\u76ee\u6a21\u5f0f\uff0c\u54cd\u5e94\u65f6\u95f4\u8f74\u548c\u5de5\u4f5c\u7684PHP\u8054\u7cfb\u8868\u5355\u3002 Preview \u9884\u4e60 [\uff01[\u673a\u6784\u9884\u89c8]\uff08https://startbootstrap.com/assets/img/templates/agency.jpg\uff09]\uff08https://blackrockdigital.github.io/startbootstrap-agency/\uff09 View Live Preview [\u67e5\u770b\u5b9e\u65f6\u9884\u89c8]\uff08https://blackrockdigital.github.io/startbootstrap-agency/) Status \u72b6\u6001 [\uff01[GitHub\u8bb8\u53ef\u8bc1]\uff08https://img.shields.io/badge/license-MIT-blue.svg\uff09]\uff08https://raw.githubusercontent.com/BlackrockDigital/startbootstrap-agency/master/LICENSE\uff09 [\uff01[npm version]\uff08https://img.shields.io/npm/v/startbootstrap-agency.svg\uff09]\uff08https://www.npmjs.com/package/startbootstrap-agency\uff09 [\uff01[\u5efa\u7acb\u72b6\u6001]\uff08https://travis-ci.org/BlackrockDigital/startbootstrap-agency.svg?branch=master\uff09]\uff08https://travis-ci.org/BlackrockDigital/startbootstrap-agency\uff09 [\uff01[\u4f9d\u8d56\u72b6\u6001]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-agency/status.svg\uff09]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-agency\uff09 [\uff01[devDependencies Status]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-agency/dev-status.svg\uff09]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-agency?type=dev \uff09 Download and Installation \u4e0b\u8f7d\u548c\u5b89\u88c5 To begin using this template, choose one of the following options to get started: \u8981\u5f00\u59cb\u4f7f\u7528\u6b64\u6a21\u677f\uff0c\u8bf7\u9009\u62e9\u4ee5\u4e0b\u9009\u9879\u4e4b\u4e00\u4ee5\u5f00\u59cb\u4f7f\u7528\uff1a Download the latest release on Start Bootstrap [\u4e0b\u8f7dStart Bootstrap\u4e0a\u7684\u6700\u65b0\u7248\u672c]\uff08https://startbootstrap.com/template-overviews/agency/\uff09 * Install via npm: npm i startbootstrap-agency \u901a\u8fc7npm\u5b89\u88c5\uff1a npm i startbootstrap-agency * Clone the repo: git clone https://github.com/BlackrockDigital/startbootstrap-agency.git \u514b\u9686\u56de\u8d2d\uff1a git clone https\uff1a// github.com / BlackrockDigital / startbootstrap-agency.git * Fork, Clone, or Download on GitHub [\u5728GitHub\u4e0a\u5206\u53c9\uff0c\u514b\u9686\u6216\u4e0b\u8f7d]\uff08https://github.com/BlackrockDigital/startbootstrap-agency\uff09 * Usage \u7528\u6cd5 Basic Usage \u57fa\u672c\u7528\u6cd5 After downloading, simply edit the HTML and CSS files included with the template in your favorite text editor to make changes. These are the only files you need to worry about, you can ignore everything else! To preview the changes you make to the code, you can open the index.html file in your web browser. \u4e0b\u8f7d\u540e\uff0c\u53ea\u9700\u5728\u60a8\u559c\u6b22\u7684\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u7f16\u8f91\u6a21\u677f\u4e2d\u5305\u542b\u7684HTML\u548cCSS\u6587\u4ef6\u5373\u53ef\u8fdb\u884c\u66f4\u6539\u3002\u8fd9\u4e9b\u662f\u4f60\u9700\u8981\u62c5\u5fc3\u7684\u552f\u4e00\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5ffd\u7565\u5176\u4ed6\u4e00\u5207\uff01\u8981\u9884\u89c8\u5bf9\u4ee3\u7801\u6240\u505a\u7684\u66f4\u6539\uff0c\u53ef\u4ee5\u5728Web\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 index.html \u6587\u4ef6\u3002 Advanced Usage \u9ad8\u7ea7\u7528\u6cd5 After installation, run npm install and then run gulp dev which will open up a preview of the template in your default browser, watch for changes to core template files, and live reload the browser when changes are saved. You can view the gulpfile.js to see which tasks are included with the dev environment. \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u8fd0\u884c npm install \uff0c\u7136\u540e\u8fd0\u884c gulp dev \uff0c\u5b83\u5c06\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6a21\u677f\u9884\u89c8\uff0c\u76d1\u89c6\u6838\u5fc3\u6a21\u677f\u6587\u4ef6\u7684\u66f4\u6539\uff0c\u5e76\u5728\u4fdd\u5b58\u66f4\u6539\u65f6\u5b9e\u65f6\u91cd\u65b0\u52a0\u8f7d\u6d4f\u89c8\u5668\u3002\u60a8\u53ef\u4ee5\u67e5\u770b gulpfile.js \u4ee5\u67e5\u770bdev\u73af\u5883\u4e2d\u5305\u542b\u54ea\u4e9b\u4efb\u52a1\u3002 Gulp Tasks \u541e\u54bd\u4efb\u52a1 gulp the default task that builds everything gulp \u662f\u6784\u5efa\u6240\u6709\u5185\u5bb9\u7684\u9ed8\u8ba4\u4efb\u52a1 gulp dev browserSync opens the project in your default browser and live reloads when changes are made gulp dev browserSync\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u9879\u76ee\uff0c\u5e76\u5728\u8fdb\u884c\u66f4\u6539\u65f6\u8fdb\u884c\u5b9e\u65f6\u91cd\u65b0\u52a0\u8f7d gulp sass compiles SCSS files into CSS gulp sass \u5c06SCSS\u6587\u4ef6\u7f16\u8bd1\u6210CSS gulp minify-css minifies the compiled CSS file gulp minify-css \u7f29\u5c0f\u7f16\u8bd1\u540e\u7684CSS\u6587\u4ef6 gulp minify-js minifies the themes JS file gulp minify-js \u7f29\u5c0f\u4e3b\u9898JS\u6587\u4ef6 gulp copy copies dependencies from node_modules to the vendor directory gulp copy \u5c06\u4ecenode_modules\u7684\u4f9d\u8d56\u9879\u590d\u5236\u5230vendor\u76ee\u5f55 Bugs and Issues \u9519\u8bef\u548c\u95ee\u9898 Have a bug or an issue with this template? Open a new issue here on GitHub or leave a comment on the template overview page at Start Bootstrap . \u6709\u8fd9\u4e2a\u6a21\u677f\u7684\u9519\u8bef\u6216\u95ee\u9898\uff1f [\u5728GitHub\u4e0a\u6253\u5f00\u4e00\u4e2a\u65b0\u95ee\u9898]\uff08https://github.com/BlackrockDigital/startbootstrap-agency/issues\uff09\u6216\u5728Start Bootstrap\u7684[\u6a21\u677f\u6982\u8ff0\u9875\u9762]\u4e0a\u53d1\u8868\u8bc4\u8bba\uff08http://startbootstrap.com/template -overviews /\u673a\u6784/\uff09\u3002 Custom Builds \u81ea\u5b9a\u4e49\u6784\u5efa You can hire Start Bootstrap to create a custom build of any template, or create something from scratch using Bootstrap. For more information, visit the custom design services page . \u60a8\u53ef\u4ee5\u4f7f\u7528Start Bootstrap\u6765\u521b\u5efa\u4efb\u4f55\u6a21\u677f\u7684\u81ea\u5b9a\u4e49\u6784\u5efa\uff0c\u6216\u4f7f\u7528Bootstrap\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee [\u81ea\u5b9a\u4e49\u8bbe\u8ba1\u670d\u52a1\u9875\u9762]\uff08https://startbootstrap.com/bootstrap-design-services/\uff09 \u3002 About \u5173\u4e8e Start Bootstrap is an open source library of free Bootstrap templates and themes. All of the free templates and themes on Start Bootstrap are released under the MIT license, which means you can use them for any purpose, even for commercial projects. Start Bootstrap\u662f\u4e00\u4e2a\u514d\u8d39\u7684Bootstrap\u6a21\u677f\u548c\u4e3b\u9898\u7684\u5f00\u6e90\u5e93\u3002 Start Bootstrap\u4e0a\u7684\u6240\u6709\u514d\u8d39\u6a21\u677f\u548c\u4e3b\u9898\u90fd\u662f\u5728MIT\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u7528\u4e8e\u4efb\u4f55\u76ee\u7684\uff0c\u751a\u81f3\u662f\u5546\u4e1a\u9879\u76ee\u3002 https://startbootstrap.com https://startbootstrap.com * https://twitter.com/SBootstrap https://twitter.com/SBootstrap * Start Bootstrap was created by and is maintained by David Miller , Owner of Blackrock Digital . \u542f\u52a8Bootstrap\u7531 [David Miller]\uff08http://davidmiller.io/\uff09 \uff0c[Blackrock Digital]\u7684\u6240\u6709\u8005\uff08http://blackrockdigital.io/\uff09\u521b\u5efa\u5e76\u7ef4\u62a4\u3002 http://davidmiller.io http://davidmiller.io * https://twitter.com/davidmillerskt https://twitter.com/davidmillerskt * https://github.com/davidtmiller https://github.com/davidtmiller * Start Bootstrap is based on the Bootstrap framework created by Mark Otto and Jacob Thorton . Start Bootstrap\u57fa\u4e8e[Mark Otto]\uff08https://twitter.com/mdo\uff09\u548c[Jacob Thorton]\uff08https://twitter.com\uff09\u521b\u5efa\u7684[Bootstrap]\uff08http://getbootstrap.com/\uff09\u6846\u67b6\u3002 /\u8102\u80aa\uff09\u3002 Copyright and License \u7248\u6743\u548c\u8bb8\u53ef Copyright 2013-2018 Blackrock Digital LLC. Code released under the MIT license. \u7248\u6743\u6240\u67092013-2018 Blackrock Digital LLC\u3002\u5728[MIT]\uff08https://github.com/BlackrockDigital/startbootstrap-agency/blob/gh-pages/LICENSE\uff09\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\u4ee3\u7801\u3002","title":"[Start Bootstrap - Agency](https://startbootstrap.com/template-overviews/agency/)"},{"location":"OrchardCore.Themes/TheAgencyTheme/#start-bootstrap-agency","text":"","title":"Start Bootstrap - Agency"},{"location":"OrchardCore.Themes/TheAgencyTheme/#start-bootstrap-agencyhttpsstartbootstrapcomtemplate-overviewsagency","text":"Agency is a one page agency portfolio theme for Bootstrap created by Start Bootstrap . This theme features several content sections, a responsive portfolio grid with hover effects, full page portfolio item modals, a responsive timeline, and a working PHP contact form. [Agency]\uff08https://startbootstrap.com/template-overviews/agency/\uff09\u662f\u7531[Start Bootstrap]\u521b\u5efa\u7684[Bootstrap]\uff08http://getbootstrap.com/\uff09\u7684\u5355\u9875\u4ee3\u7406\u5546\u7ec4\u5408\u4e3b\u9898\uff08http\uff1a/ /startbootstrap.com/\uff09\u3002\u6b64\u4e3b\u9898\u5305\u542b\u51e0\u4e2a\u5185\u5bb9\u90e8\u5206\uff0c\u5177\u6709\u60ac\u505c\u6548\u679c\u7684\u54cd\u5e94\u5f0f\u6295\u8d44\u7ec4\u5408\u7f51\u683c\uff0c\u5b8c\u6574\u9875\u9762\u6295\u8d44\u7ec4\u5408\u9879\u76ee\u6a21\u5f0f\uff0c\u54cd\u5e94\u65f6\u95f4\u8f74\u548c\u5de5\u4f5c\u7684PHP\u8054\u7cfb\u8868\u5355\u3002","title":"[Start Bootstrap  -  Agency]\uff08https://startbootstrap.com/template-overviews/agency/\uff09"},{"location":"OrchardCore.Themes/TheAgencyTheme/#preview","text":"","title":"Preview"},{"location":"OrchardCore.Themes/TheAgencyTheme/#_1","text":"[\uff01[\u673a\u6784\u9884\u89c8]\uff08https://startbootstrap.com/assets/img/templates/agency.jpg\uff09]\uff08https://blackrockdigital.github.io/startbootstrap-agency/\uff09 View Live Preview [\u67e5\u770b\u5b9e\u65f6\u9884\u89c8]\uff08https://blackrockdigital.github.io/startbootstrap-agency/)","title":"\u9884\u4e60"},{"location":"OrchardCore.Themes/TheAgencyTheme/#status","text":"","title":"Status"},{"location":"OrchardCore.Themes/TheAgencyTheme/#_2","text":"[\uff01[GitHub\u8bb8\u53ef\u8bc1]\uff08https://img.shields.io/badge/license-MIT-blue.svg\uff09]\uff08https://raw.githubusercontent.com/BlackrockDigital/startbootstrap-agency/master/LICENSE\uff09 [\uff01[npm version]\uff08https://img.shields.io/npm/v/startbootstrap-agency.svg\uff09]\uff08https://www.npmjs.com/package/startbootstrap-agency\uff09 [\uff01[\u5efa\u7acb\u72b6\u6001]\uff08https://travis-ci.org/BlackrockDigital/startbootstrap-agency.svg?branch=master\uff09]\uff08https://travis-ci.org/BlackrockDigital/startbootstrap-agency\uff09 [\uff01[\u4f9d\u8d56\u72b6\u6001]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-agency/status.svg\uff09]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-agency\uff09 [\uff01[devDependencies Status]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-agency/dev-status.svg\uff09]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-agency?type=dev \uff09","title":"\u72b6\u6001"},{"location":"OrchardCore.Themes/TheAgencyTheme/#download-and-installation","text":"","title":"Download and Installation"},{"location":"OrchardCore.Themes/TheAgencyTheme/#_3","text":"To begin using this template, choose one of the following options to get started: \u8981\u5f00\u59cb\u4f7f\u7528\u6b64\u6a21\u677f\uff0c\u8bf7\u9009\u62e9\u4ee5\u4e0b\u9009\u9879\u4e4b\u4e00\u4ee5\u5f00\u59cb\u4f7f\u7528\uff1a Download the latest release on Start Bootstrap [\u4e0b\u8f7dStart Bootstrap\u4e0a\u7684\u6700\u65b0\u7248\u672c]\uff08https://startbootstrap.com/template-overviews/agency/\uff09 * Install via npm: npm i startbootstrap-agency \u901a\u8fc7npm\u5b89\u88c5\uff1a npm i startbootstrap-agency * Clone the repo: git clone https://github.com/BlackrockDigital/startbootstrap-agency.git \u514b\u9686\u56de\u8d2d\uff1a git clone https\uff1a// github.com / BlackrockDigital / startbootstrap-agency.git * Fork, Clone, or Download on GitHub [\u5728GitHub\u4e0a\u5206\u53c9\uff0c\u514b\u9686\u6216\u4e0b\u8f7d]\uff08https://github.com/BlackrockDigital/startbootstrap-agency\uff09 *","title":"\u4e0b\u8f7d\u548c\u5b89\u88c5"},{"location":"OrchardCore.Themes/TheAgencyTheme/#usage","text":"","title":"Usage"},{"location":"OrchardCore.Themes/TheAgencyTheme/#_4","text":"","title":"\u7528\u6cd5"},{"location":"OrchardCore.Themes/TheAgencyTheme/#basic-usage","text":"","title":"Basic Usage"},{"location":"OrchardCore.Themes/TheAgencyTheme/#_5","text":"After downloading, simply edit the HTML and CSS files included with the template in your favorite text editor to make changes. These are the only files you need to worry about, you can ignore everything else! To preview the changes you make to the code, you can open the index.html file in your web browser. \u4e0b\u8f7d\u540e\uff0c\u53ea\u9700\u5728\u60a8\u559c\u6b22\u7684\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u7f16\u8f91\u6a21\u677f\u4e2d\u5305\u542b\u7684HTML\u548cCSS\u6587\u4ef6\u5373\u53ef\u8fdb\u884c\u66f4\u6539\u3002\u8fd9\u4e9b\u662f\u4f60\u9700\u8981\u62c5\u5fc3\u7684\u552f\u4e00\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5ffd\u7565\u5176\u4ed6\u4e00\u5207\uff01\u8981\u9884\u89c8\u5bf9\u4ee3\u7801\u6240\u505a\u7684\u66f4\u6539\uff0c\u53ef\u4ee5\u5728Web\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 index.html \u6587\u4ef6\u3002","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"OrchardCore.Themes/TheAgencyTheme/#advanced-usage","text":"","title":"Advanced Usage"},{"location":"OrchardCore.Themes/TheAgencyTheme/#_6","text":"After installation, run npm install and then run gulp dev which will open up a preview of the template in your default browser, watch for changes to core template files, and live reload the browser when changes are saved. You can view the gulpfile.js to see which tasks are included with the dev environment. \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u8fd0\u884c npm install \uff0c\u7136\u540e\u8fd0\u884c gulp dev \uff0c\u5b83\u5c06\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6a21\u677f\u9884\u89c8\uff0c\u76d1\u89c6\u6838\u5fc3\u6a21\u677f\u6587\u4ef6\u7684\u66f4\u6539\uff0c\u5e76\u5728\u4fdd\u5b58\u66f4\u6539\u65f6\u5b9e\u65f6\u91cd\u65b0\u52a0\u8f7d\u6d4f\u89c8\u5668\u3002\u60a8\u53ef\u4ee5\u67e5\u770b gulpfile.js \u4ee5\u67e5\u770bdev\u73af\u5883\u4e2d\u5305\u542b\u54ea\u4e9b\u4efb\u52a1\u3002","title":"\u9ad8\u7ea7\u7528\u6cd5"},{"location":"OrchardCore.Themes/TheAgencyTheme/#gulp-tasks","text":"","title":"Gulp Tasks"},{"location":"OrchardCore.Themes/TheAgencyTheme/#_7","text":"gulp the default task that builds everything gulp \u662f\u6784\u5efa\u6240\u6709\u5185\u5bb9\u7684\u9ed8\u8ba4\u4efb\u52a1 gulp dev browserSync opens the project in your default browser and live reloads when changes are made gulp dev browserSync\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u9879\u76ee\uff0c\u5e76\u5728\u8fdb\u884c\u66f4\u6539\u65f6\u8fdb\u884c\u5b9e\u65f6\u91cd\u65b0\u52a0\u8f7d gulp sass compiles SCSS files into CSS gulp sass \u5c06SCSS\u6587\u4ef6\u7f16\u8bd1\u6210CSS gulp minify-css minifies the compiled CSS file gulp minify-css \u7f29\u5c0f\u7f16\u8bd1\u540e\u7684CSS\u6587\u4ef6 gulp minify-js minifies the themes JS file gulp minify-js \u7f29\u5c0f\u4e3b\u9898JS\u6587\u4ef6 gulp copy copies dependencies from node_modules to the vendor directory gulp copy \u5c06\u4ecenode_modules\u7684\u4f9d\u8d56\u9879\u590d\u5236\u5230vendor\u76ee\u5f55","title":"\u541e\u54bd\u4efb\u52a1"},{"location":"OrchardCore.Themes/TheAgencyTheme/#bugs-and-issues","text":"","title":"Bugs and Issues"},{"location":"OrchardCore.Themes/TheAgencyTheme/#_8","text":"Have a bug or an issue with this template? Open a new issue here on GitHub or leave a comment on the template overview page at Start Bootstrap . \u6709\u8fd9\u4e2a\u6a21\u677f\u7684\u9519\u8bef\u6216\u95ee\u9898\uff1f [\u5728GitHub\u4e0a\u6253\u5f00\u4e00\u4e2a\u65b0\u95ee\u9898]\uff08https://github.com/BlackrockDigital/startbootstrap-agency/issues\uff09\u6216\u5728Start Bootstrap\u7684[\u6a21\u677f\u6982\u8ff0\u9875\u9762]\u4e0a\u53d1\u8868\u8bc4\u8bba\uff08http://startbootstrap.com/template -overviews /\u673a\u6784/\uff09\u3002","title":"\u9519\u8bef\u548c\u95ee\u9898"},{"location":"OrchardCore.Themes/TheAgencyTheme/#custom-builds","text":"","title":"Custom Builds"},{"location":"OrchardCore.Themes/TheAgencyTheme/#_9","text":"You can hire Start Bootstrap to create a custom build of any template, or create something from scratch using Bootstrap. For more information, visit the custom design services page . \u60a8\u53ef\u4ee5\u4f7f\u7528Start Bootstrap\u6765\u521b\u5efa\u4efb\u4f55\u6a21\u677f\u7684\u81ea\u5b9a\u4e49\u6784\u5efa\uff0c\u6216\u4f7f\u7528Bootstrap\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee [\u81ea\u5b9a\u4e49\u8bbe\u8ba1\u670d\u52a1\u9875\u9762]\uff08https://startbootstrap.com/bootstrap-design-services/\uff09 \u3002","title":"\u81ea\u5b9a\u4e49\u6784\u5efa"},{"location":"OrchardCore.Themes/TheAgencyTheme/#about","text":"","title":"About"},{"location":"OrchardCore.Themes/TheAgencyTheme/#_10","text":"Start Bootstrap is an open source library of free Bootstrap templates and themes. All of the free templates and themes on Start Bootstrap are released under the MIT license, which means you can use them for any purpose, even for commercial projects. Start Bootstrap\u662f\u4e00\u4e2a\u514d\u8d39\u7684Bootstrap\u6a21\u677f\u548c\u4e3b\u9898\u7684\u5f00\u6e90\u5e93\u3002 Start Bootstrap\u4e0a\u7684\u6240\u6709\u514d\u8d39\u6a21\u677f\u548c\u4e3b\u9898\u90fd\u662f\u5728MIT\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u7528\u4e8e\u4efb\u4f55\u76ee\u7684\uff0c\u751a\u81f3\u662f\u5546\u4e1a\u9879\u76ee\u3002 https://startbootstrap.com https://startbootstrap.com * https://twitter.com/SBootstrap https://twitter.com/SBootstrap * Start Bootstrap was created by and is maintained by David Miller , Owner of Blackrock Digital . \u542f\u52a8Bootstrap\u7531 [David Miller]\uff08http://davidmiller.io/\uff09 \uff0c[Blackrock Digital]\u7684\u6240\u6709\u8005\uff08http://blackrockdigital.io/\uff09\u521b\u5efa\u5e76\u7ef4\u62a4\u3002 http://davidmiller.io http://davidmiller.io * https://twitter.com/davidmillerskt https://twitter.com/davidmillerskt * https://github.com/davidtmiller https://github.com/davidtmiller * Start Bootstrap is based on the Bootstrap framework created by Mark Otto and Jacob Thorton . Start Bootstrap\u57fa\u4e8e[Mark Otto]\uff08https://twitter.com/mdo\uff09\u548c[Jacob Thorton]\uff08https://twitter.com\uff09\u521b\u5efa\u7684[Bootstrap]\uff08http://getbootstrap.com/\uff09\u6846\u67b6\u3002 /\u8102\u80aa\uff09\u3002","title":"\u5173\u4e8e"},{"location":"OrchardCore.Themes/TheAgencyTheme/#copyright-and-license","text":"","title":"Copyright and License"},{"location":"OrchardCore.Themes/TheAgencyTheme/#_11","text":"Copyright 2013-2018 Blackrock Digital LLC. Code released under the MIT license. \u7248\u6743\u6240\u67092013-2018 Blackrock Digital LLC\u3002\u5728[MIT]\uff08https://github.com/BlackrockDigital/startbootstrap-agency/blob/gh-pages/LICENSE\uff09\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\u4ee3\u7801\u3002","title":"\u7248\u6743\u548c\u8bb8\u53ef"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/","text":"Start Bootstrap - Clean Blog [Start Bootstrap - Clean Blog]\uff08https://startbootstrap.com/template-overviews/clean-blog/\uff09 Clean Blog is a stylish, responsive blog theme for Bootstrap created by Start Bootstrap . This theme features a blog homepage, about page, contact page, and an example post page along with a working PHP contact form. [Clean Blog]\uff08http://startbootstrap.com/template-overviews/clean-blog/\uff09\u662f\u7531[Start Bootstrap]\u521b\u5efa\u7684[Bootstrap]\uff08http://getbootstrap.com/\uff09\u7684\u65f6\u5c1a\uff0c\u54cd\u5e94\u5f0f\u535a\u5ba2\u4e3b\u9898\uff08 http://startbootstrap.com/\uff09\u3002\u6b64\u4e3b\u9898\u5305\u542b\u535a\u5ba2\u4e3b\u9875\uff0c\u5173\u4e8e\u9875\u9762\uff0c\u8054\u7cfb\u9875\u9762\uff0c\u793a\u4f8b\u5e16\u5b50\u9875\u9762\u4ee5\u53ca\u53ef\u7528\u7684PHP\u8054\u7cfb\u8868\u5355\u3002 Preview \u9884\u4e60 [\uff01[\u6e05\u6d01\u535a\u5ba2\u9884\u89c8]\uff08https://startbootstrap.com/assets/img/templates/clean-blog.jpg\uff09]\uff08https://blackrockdigital.github.io/startbootstrap-clean-blog/\uff09 View Live Preview [\u67e5\u770b\u5b9e\u65f6\u9884\u89c8]\uff08https://blackrockdigital.github.io/startbootstrap-clean-blog/) Status \u72b6\u6001 [\uff01[GitHub\u8bb8\u53ef\u8bc1]\uff08https://img.shields.io/badge/license-MIT-blue.svg\uff09]\uff08https://raw.githubusercontent.com/BlackrockDigital/startbootstrap-clean-blog/master/LICENSE \uff09 [\uff01[npm version]\uff08https://img.shields.io/npm/v/startbootstrap-clean-blog.svg\uff09]\uff08https://www.npmjs.com/package/startbootstrap-clean-blog\uff09 [\uff01[\u5efa\u7acb\u72b6\u6001]\uff08https://travis-ci.org/BlackrockDigital/startbootstrap-clean-blog.svg?branch=master\uff09]\uff08https://travis-ci.org/BlackrockDigital/startbootstrap-clean-blog \uff09 [\uff01[\u4f9d\u8d56\u72b6\u6001]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-clean-blog/status.svg\uff09]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-clean-blog\uff09 [\uff01[devDependencies Status]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-clean-blog/dev-status.svg\uff09]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-clean-blog \uff1f\u7c7b\u578b= DEV\uff09 Download and Installation \u4e0b\u8f7d\u548c\u5b89\u88c5 To begin using this template, choose one of the following options to get started: \u8981\u5f00\u59cb\u4f7f\u7528\u6b64\u6a21\u677f\uff0c\u8bf7\u9009\u62e9\u4ee5\u4e0b\u9009\u9879\u4e4b\u4e00\u4ee5\u5f00\u59cb\u4f7f\u7528\uff1a Download the latest release on Start Bootstrap [\u4e0b\u8f7dStart Bootstrap\u4e0a\u7684\u6700\u65b0\u7248\u672c]\uff08https://startbootstrap.com/template-overviews/clean-blog/\uff09 * Install via npm: npm i startbootstrap-clean-blog \u901a\u8fc7npm\u5b89\u88c5\uff1a npm i startbootstrap-clean-blog * Clone the repo: git clone https://github.com/BlackrockDigital/startbootstrap-clean-blog.git \u514b\u9686\u56de\u8d2d\uff1a git clone https\uff1a// github.com / BlackrockDigital / startbootstrap-clean-blog.git * Fork, Clone, or Download on GitHub [\u5728GitHub\u4e0a\u5206\u53c9\uff0c\u514b\u9686\u6216\u4e0b\u8f7d]\uff08https://github.com/BlackrockDigital/startbootstrap-clean-blog\uff09 * Usage \u7528\u6cd5 Basic Usage \u57fa\u672c\u7528\u6cd5 After downloading, simply edit the HTML and CSS files included with the template in your favorite text editor to make changes. These are the only files you need to worry about, you can ignore everything else! To preview the changes you make to the code, you can open the index.html file in your web browser. \u4e0b\u8f7d\u540e\uff0c\u53ea\u9700\u5728\u60a8\u559c\u6b22\u7684\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u7f16\u8f91\u6a21\u677f\u4e2d\u5305\u542b\u7684HTML\u548cCSS\u6587\u4ef6\u5373\u53ef\u8fdb\u884c\u66f4\u6539\u3002\u8fd9\u4e9b\u662f\u4f60\u9700\u8981\u62c5\u5fc3\u7684\u552f\u4e00\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5ffd\u7565\u5176\u4ed6\u4e00\u5207\uff01\u8981\u9884\u89c8\u5bf9\u4ee3\u7801\u6240\u505a\u7684\u66f4\u6539\uff0c\u53ef\u4ee5\u5728Web\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 index.html \u6587\u4ef6\u3002 Advanced Usage \u9ad8\u7ea7\u7528\u6cd5 After installation, run npm install and then run gulp dev which will open up a preview of the template in your default browser, watch for changes to core template files, and live reload the browser when changes are saved. You can view the gulpfile.js to see which tasks are included with the dev environment. \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u8fd0\u884c npm install \uff0c\u7136\u540e\u8fd0\u884c gulp dev \uff0c\u5b83\u5c06\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6a21\u677f\u9884\u89c8\uff0c\u76d1\u89c6\u6838\u5fc3\u6a21\u677f\u6587\u4ef6\u7684\u66f4\u6539\uff0c\u5e76\u5728\u4fdd\u5b58\u66f4\u6539\u65f6\u5b9e\u65f6\u91cd\u65b0\u52a0\u8f7d\u6d4f\u89c8\u5668\u3002\u60a8\u53ef\u4ee5\u67e5\u770b gulpfile.js \u4ee5\u67e5\u770bdev\u73af\u5883\u4e2d\u5305\u542b\u54ea\u4e9b\u4efb\u52a1\u3002 Gulp Tasks \u541e\u54bd\u4efb\u52a1 gulp the default task that builds everything gulp \u662f\u6784\u5efa\u6240\u6709\u5185\u5bb9\u7684\u9ed8\u8ba4\u4efb\u52a1 gulp dev browserSync opens the project in your default browser and live reloads when changes are made gulp dev browserSync\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u9879\u76ee\uff0c\u5e76\u5728\u8fdb\u884c\u66f4\u6539\u65f6\u8fdb\u884c\u5b9e\u65f6\u91cd\u65b0\u52a0\u8f7d gulp css compiles SCSS files into CSS and minifies the compiled CSS gulp css \u5c06SCSS\u6587\u4ef6\u7f16\u8bd1\u6210CSS\u5e76\u7f29\u5c0f\u7f16\u8bd1\u540e\u7684CSS gulp js minifies the themes JS file gulp js \u7f29\u5c0f\u4e3b\u9898JS\u6587\u4ef6 gulp vendor copies dependencies from node_modules to the vendor directory gulp vendor \u5c06\u4ecenode_modules\u7684\u4f9d\u8d56\u9879\u590d\u5236\u5230vendor\u76ee\u5f55 You must have npm and Gulp installed globally on your machine in order to use these features. \u60a8\u5fc5\u987b\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u5168\u5c40\u5b89\u88c5npm\u548cGulp\u624d\u80fd\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u3002 Troubleshooting and Help \u6545\u969c\u6392\u9664\u548c\u5e2e\u52a9 Start Bootstrap has a public Slack channel which is a great place to ask questions about this template and all things related to Start Bootstrap. \u542f\u52a8Bootstrap\u6709\u4e00\u4e2a\u516c\u5171Slack\u901a\u9053\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u8be2\u95ee\u6709\u5173\u6b64\u6a21\u677f\u7684\u95ee\u9898\u4ee5\u53ca\u4e0eStart Bootstrap\u76f8\u5173\u7684\u6240\u6709\u5185\u5bb9\u3002 Click here to join the Slack channel! [\u70b9\u51fb\u8fd9\u91cc\u52a0\u5165Slack\u9891\u9053\uff01]\uff08https://startbootstrap-slack.herokuapp.com/\uff09 Bugs and Issues \u9519\u8bef\u548c\u95ee\u9898 Have a bug or an issue with this template? Open a new issue here on GitHub or leave a comment on the template overview page at Start Bootstrap . \u6709\u8fd9\u4e2a\u6a21\u677f\u7684\u9519\u8bef\u6216\u95ee\u9898\uff1f [\u5728GitHub\u4e0a\u6253\u5f00\u4e00\u4e2a\u65b0\u95ee\u9898]\uff08https://github.com/BlackrockDigital/startbootstrap-clean-blog/issues\uff09\u6216\u5728Start Bootstrap\u7684[\u6a21\u677f\u6982\u8ff0\u9875\u9762]\u4e0a\u53d1\u8868\u8bc4\u8bba\uff08http://startbootstrap.com /\u6a21\u677f\u6982\u8ff0/\u6e05\u6d01\u535a\u5ba2/\uff09\u3002 About \u5173\u4e8e Start Bootstrap is an open source library of free Bootstrap templates and themes. All of the free templates and themes on Start Bootstrap are released under the MIT license, which means you can use them for any purpose, even for commercial projects. Start Bootstrap\u662f\u4e00\u4e2a\u514d\u8d39\u7684Bootstrap\u6a21\u677f\u548c\u4e3b\u9898\u7684\u5f00\u6e90\u5e93\u3002 Start Bootstrap\u4e0a\u7684\u6240\u6709\u514d\u8d39\u6a21\u677f\u548c\u4e3b\u9898\u90fd\u662f\u5728MIT\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u7528\u4e8e\u4efb\u4f55\u76ee\u7684\uff0c\u751a\u81f3\u662f\u5546\u4e1a\u9879\u76ee\u3002 https://startbootstrap.com https://startbootstrap.com * https://twitter.com/SBootstrap https://twitter.com/SBootstrap * Start Bootstrap was created by and is maintained by David Miller , Owner of Blackrock Digital . \u542f\u52a8Bootstrap\u7531 [David Miller]\uff08http://davidmiller.io/\uff09 \uff0c[Blackrock Digital]\u7684\u6240\u6709\u8005\uff08http://blackrockdigital.io/\uff09\u521b\u5efa\u5e76\u7ef4\u62a4\u3002 http://davidmiller.io http://davidmiller.io * https://twitter.com/davidmillerskt https://twitter.com/davidmillerskt * https://github.com/davidtmiller https://github.com/davidtmiller * Start Bootstrap is based on the Bootstrap framework created by Mark Otto and Jacob Thorton . Start Bootstrap\u57fa\u4e8e[Mark Otto]\uff08https://twitter.com/mdo\uff09\u548c[Jacob Thorton]\uff08https://twitter.com\uff09\u521b\u5efa\u7684[Bootstrap]\uff08http://getbootstrap.com/\uff09\u6846\u67b6\u3002 /\u8102\u80aa\uff09\u3002 Copyright and License \u7248\u6743\u548c\u8bb8\u53ef Copyright 2013-2018 Blackrock Digital LLC. Code released under the MIT license. \u7248\u6743\u6240\u67092013-2018 Blackrock Digital LLC\u3002\u5728[MIT]\uff08https://github.com/BlackrockDigital/startbootstrap-clean-blog/blob/gh-pages/LICENSE\uff09\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\u4ee3\u7801\u3002","title":"[Start Bootstrap - Clean Blog](https://startbootstrap.com/template-overviews/clean-blog/)"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#start-bootstrap-clean-blog","text":"","title":"Start Bootstrap - Clean Blog"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#start-bootstrap-clean-bloghttpsstartbootstrapcomtemplate-overviewsclean-blog","text":"Clean Blog is a stylish, responsive blog theme for Bootstrap created by Start Bootstrap . This theme features a blog homepage, about page, contact page, and an example post page along with a working PHP contact form. [Clean Blog]\uff08http://startbootstrap.com/template-overviews/clean-blog/\uff09\u662f\u7531[Start Bootstrap]\u521b\u5efa\u7684[Bootstrap]\uff08http://getbootstrap.com/\uff09\u7684\u65f6\u5c1a\uff0c\u54cd\u5e94\u5f0f\u535a\u5ba2\u4e3b\u9898\uff08 http://startbootstrap.com/\uff09\u3002\u6b64\u4e3b\u9898\u5305\u542b\u535a\u5ba2\u4e3b\u9875\uff0c\u5173\u4e8e\u9875\u9762\uff0c\u8054\u7cfb\u9875\u9762\uff0c\u793a\u4f8b\u5e16\u5b50\u9875\u9762\u4ee5\u53ca\u53ef\u7528\u7684PHP\u8054\u7cfb\u8868\u5355\u3002","title":"[Start Bootstrap  -  Clean Blog]\uff08https://startbootstrap.com/template-overviews/clean-blog/\uff09"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#preview","text":"","title":"Preview"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#_1","text":"[\uff01[\u6e05\u6d01\u535a\u5ba2\u9884\u89c8]\uff08https://startbootstrap.com/assets/img/templates/clean-blog.jpg\uff09]\uff08https://blackrockdigital.github.io/startbootstrap-clean-blog/\uff09 View Live Preview [\u67e5\u770b\u5b9e\u65f6\u9884\u89c8]\uff08https://blackrockdigital.github.io/startbootstrap-clean-blog/)","title":"\u9884\u4e60"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#status","text":"","title":"Status"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#_2","text":"[\uff01[GitHub\u8bb8\u53ef\u8bc1]\uff08https://img.shields.io/badge/license-MIT-blue.svg\uff09]\uff08https://raw.githubusercontent.com/BlackrockDigital/startbootstrap-clean-blog/master/LICENSE \uff09 [\uff01[npm version]\uff08https://img.shields.io/npm/v/startbootstrap-clean-blog.svg\uff09]\uff08https://www.npmjs.com/package/startbootstrap-clean-blog\uff09 [\uff01[\u5efa\u7acb\u72b6\u6001]\uff08https://travis-ci.org/BlackrockDigital/startbootstrap-clean-blog.svg?branch=master\uff09]\uff08https://travis-ci.org/BlackrockDigital/startbootstrap-clean-blog \uff09 [\uff01[\u4f9d\u8d56\u72b6\u6001]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-clean-blog/status.svg\uff09]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-clean-blog\uff09 [\uff01[devDependencies Status]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-clean-blog/dev-status.svg\uff09]\uff08https://david-dm.org/BlackrockDigital/startbootstrap-clean-blog \uff1f\u7c7b\u578b= DEV\uff09","title":"\u72b6\u6001"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#download-and-installation","text":"","title":"Download and Installation"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#_3","text":"To begin using this template, choose one of the following options to get started: \u8981\u5f00\u59cb\u4f7f\u7528\u6b64\u6a21\u677f\uff0c\u8bf7\u9009\u62e9\u4ee5\u4e0b\u9009\u9879\u4e4b\u4e00\u4ee5\u5f00\u59cb\u4f7f\u7528\uff1a Download the latest release on Start Bootstrap [\u4e0b\u8f7dStart Bootstrap\u4e0a\u7684\u6700\u65b0\u7248\u672c]\uff08https://startbootstrap.com/template-overviews/clean-blog/\uff09 * Install via npm: npm i startbootstrap-clean-blog \u901a\u8fc7npm\u5b89\u88c5\uff1a npm i startbootstrap-clean-blog * Clone the repo: git clone https://github.com/BlackrockDigital/startbootstrap-clean-blog.git \u514b\u9686\u56de\u8d2d\uff1a git clone https\uff1a// github.com / BlackrockDigital / startbootstrap-clean-blog.git * Fork, Clone, or Download on GitHub [\u5728GitHub\u4e0a\u5206\u53c9\uff0c\u514b\u9686\u6216\u4e0b\u8f7d]\uff08https://github.com/BlackrockDigital/startbootstrap-clean-blog\uff09 *","title":"\u4e0b\u8f7d\u548c\u5b89\u88c5"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#usage","text":"","title":"Usage"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#_4","text":"","title":"\u7528\u6cd5"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#basic-usage","text":"","title":"Basic Usage"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#_5","text":"After downloading, simply edit the HTML and CSS files included with the template in your favorite text editor to make changes. These are the only files you need to worry about, you can ignore everything else! To preview the changes you make to the code, you can open the index.html file in your web browser. \u4e0b\u8f7d\u540e\uff0c\u53ea\u9700\u5728\u60a8\u559c\u6b22\u7684\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u7f16\u8f91\u6a21\u677f\u4e2d\u5305\u542b\u7684HTML\u548cCSS\u6587\u4ef6\u5373\u53ef\u8fdb\u884c\u66f4\u6539\u3002\u8fd9\u4e9b\u662f\u4f60\u9700\u8981\u62c5\u5fc3\u7684\u552f\u4e00\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5ffd\u7565\u5176\u4ed6\u4e00\u5207\uff01\u8981\u9884\u89c8\u5bf9\u4ee3\u7801\u6240\u505a\u7684\u66f4\u6539\uff0c\u53ef\u4ee5\u5728Web\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00 index.html \u6587\u4ef6\u3002","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#advanced-usage","text":"","title":"Advanced Usage"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#_6","text":"After installation, run npm install and then run gulp dev which will open up a preview of the template in your default browser, watch for changes to core template files, and live reload the browser when changes are saved. You can view the gulpfile.js to see which tasks are included with the dev environment. \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u8fd0\u884c npm install \uff0c\u7136\u540e\u8fd0\u884c gulp dev \uff0c\u5b83\u5c06\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6a21\u677f\u9884\u89c8\uff0c\u76d1\u89c6\u6838\u5fc3\u6a21\u677f\u6587\u4ef6\u7684\u66f4\u6539\uff0c\u5e76\u5728\u4fdd\u5b58\u66f4\u6539\u65f6\u5b9e\u65f6\u91cd\u65b0\u52a0\u8f7d\u6d4f\u89c8\u5668\u3002\u60a8\u53ef\u4ee5\u67e5\u770b gulpfile.js \u4ee5\u67e5\u770bdev\u73af\u5883\u4e2d\u5305\u542b\u54ea\u4e9b\u4efb\u52a1\u3002","title":"\u9ad8\u7ea7\u7528\u6cd5"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#gulp-tasks","text":"","title":"Gulp Tasks"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#_7","text":"gulp the default task that builds everything gulp \u662f\u6784\u5efa\u6240\u6709\u5185\u5bb9\u7684\u9ed8\u8ba4\u4efb\u52a1 gulp dev browserSync opens the project in your default browser and live reloads when changes are made gulp dev browserSync\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u9879\u76ee\uff0c\u5e76\u5728\u8fdb\u884c\u66f4\u6539\u65f6\u8fdb\u884c\u5b9e\u65f6\u91cd\u65b0\u52a0\u8f7d gulp css compiles SCSS files into CSS and minifies the compiled CSS gulp css \u5c06SCSS\u6587\u4ef6\u7f16\u8bd1\u6210CSS\u5e76\u7f29\u5c0f\u7f16\u8bd1\u540e\u7684CSS gulp js minifies the themes JS file gulp js \u7f29\u5c0f\u4e3b\u9898JS\u6587\u4ef6 gulp vendor copies dependencies from node_modules to the vendor directory gulp vendor \u5c06\u4ecenode_modules\u7684\u4f9d\u8d56\u9879\u590d\u5236\u5230vendor\u76ee\u5f55 You must have npm and Gulp installed globally on your machine in order to use these features. \u60a8\u5fc5\u987b\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u5168\u5c40\u5b89\u88c5npm\u548cGulp\u624d\u80fd\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u3002","title":"\u541e\u54bd\u4efb\u52a1"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#troubleshooting-and-help","text":"","title":"Troubleshooting and Help"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#_8","text":"Start Bootstrap has a public Slack channel which is a great place to ask questions about this template and all things related to Start Bootstrap. \u542f\u52a8Bootstrap\u6709\u4e00\u4e2a\u516c\u5171Slack\u901a\u9053\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u8be2\u95ee\u6709\u5173\u6b64\u6a21\u677f\u7684\u95ee\u9898\u4ee5\u53ca\u4e0eStart Bootstrap\u76f8\u5173\u7684\u6240\u6709\u5185\u5bb9\u3002 Click here to join the Slack channel! [\u70b9\u51fb\u8fd9\u91cc\u52a0\u5165Slack\u9891\u9053\uff01]\uff08https://startbootstrap-slack.herokuapp.com/\uff09","title":"\u6545\u969c\u6392\u9664\u548c\u5e2e\u52a9"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#bugs-and-issues","text":"","title":"Bugs and Issues"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#_9","text":"Have a bug or an issue with this template? Open a new issue here on GitHub or leave a comment on the template overview page at Start Bootstrap . \u6709\u8fd9\u4e2a\u6a21\u677f\u7684\u9519\u8bef\u6216\u95ee\u9898\uff1f [\u5728GitHub\u4e0a\u6253\u5f00\u4e00\u4e2a\u65b0\u95ee\u9898]\uff08https://github.com/BlackrockDigital/startbootstrap-clean-blog/issues\uff09\u6216\u5728Start Bootstrap\u7684[\u6a21\u677f\u6982\u8ff0\u9875\u9762]\u4e0a\u53d1\u8868\u8bc4\u8bba\uff08http://startbootstrap.com /\u6a21\u677f\u6982\u8ff0/\u6e05\u6d01\u535a\u5ba2/\uff09\u3002","title":"\u9519\u8bef\u548c\u95ee\u9898"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#about","text":"","title":"About"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#_10","text":"Start Bootstrap is an open source library of free Bootstrap templates and themes. All of the free templates and themes on Start Bootstrap are released under the MIT license, which means you can use them for any purpose, even for commercial projects. Start Bootstrap\u662f\u4e00\u4e2a\u514d\u8d39\u7684Bootstrap\u6a21\u677f\u548c\u4e3b\u9898\u7684\u5f00\u6e90\u5e93\u3002 Start Bootstrap\u4e0a\u7684\u6240\u6709\u514d\u8d39\u6a21\u677f\u548c\u4e3b\u9898\u90fd\u662f\u5728MIT\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u7528\u4e8e\u4efb\u4f55\u76ee\u7684\uff0c\u751a\u81f3\u662f\u5546\u4e1a\u9879\u76ee\u3002 https://startbootstrap.com https://startbootstrap.com * https://twitter.com/SBootstrap https://twitter.com/SBootstrap * Start Bootstrap was created by and is maintained by David Miller , Owner of Blackrock Digital . \u542f\u52a8Bootstrap\u7531 [David Miller]\uff08http://davidmiller.io/\uff09 \uff0c[Blackrock Digital]\u7684\u6240\u6709\u8005\uff08http://blackrockdigital.io/\uff09\u521b\u5efa\u5e76\u7ef4\u62a4\u3002 http://davidmiller.io http://davidmiller.io * https://twitter.com/davidmillerskt https://twitter.com/davidmillerskt * https://github.com/davidtmiller https://github.com/davidtmiller * Start Bootstrap is based on the Bootstrap framework created by Mark Otto and Jacob Thorton . Start Bootstrap\u57fa\u4e8e[Mark Otto]\uff08https://twitter.com/mdo\uff09\u548c[Jacob Thorton]\uff08https://twitter.com\uff09\u521b\u5efa\u7684[Bootstrap]\uff08http://getbootstrap.com/\uff09\u6846\u67b6\u3002 /\u8102\u80aa\uff09\u3002","title":"\u5173\u4e8e"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#copyright-and-license","text":"","title":"Copyright and License"},{"location":"OrchardCore.Themes/TheBlogTheme/wwwroot/#_11","text":"Copyright 2013-2018 Blackrock Digital LLC. Code released under the MIT license. \u7248\u6743\u6240\u67092013-2018 Blackrock Digital LLC\u3002\u5728[MIT]\uff08https://github.com/BlackrockDigital/startbootstrap-clean-blog/blob/gh-pages/LICENSE\uff09\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\u4ee3\u7801\u3002","title":"\u7248\u6743\u548c\u8bb8\u53ef"},{"location":"docs/getting-started/","text":"Getting started with Orchard Core as a NuGet package \u5f00\u59cb\u4f7f\u7528Orchard Core\u4f5c\u4e3aNuGet\u5305 In this article, we are going to see how easy it is to create a CMS Web application using the NuGet packages provided by Orchard Core. \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u4f7f\u7528Orchard Core\u63d0\u4f9b\u7684NuGet\u5305\u521b\u5efaCMS Web\u5e94\u7528\u7a0b\u5e8f\u662f\u591a\u4e48\u5bb9\u6613\u3002 You can find the original blog post written by Chris Payne here: \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u7531Chris Payne\u64b0\u5199\u7684\u539f\u521b\u535a\u6587\uff1a http://ideliverable.com/blog/getting-started-with-orchard-core-as-a-nuget-package http://ideliverable.com/blog/getting-started-with-orchard-core-as-a-nuget-package Create an Orchard Core CMS application \u521b\u5efaOrchard Core CMS\u5e94\u7528\u7a0b\u5e8f In Visual Studio, create a new empty .NET Core web application. Ex: Cms.Web . \u5728Visual Studio\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a7a.NET Core Web\u5e94\u7528\u7a0b\u5e8f\u3002\u4f8b\u5982\uff1a Cms.Web \u3002 If you want to use the dev packages, add this OrchardCore-preview MyGet url to your NuGet sources: \u5982\u679c\u4f60\u60f3\u4f7f\u7528 dev \u5305\uff0c\u8bf7\u5c06\u8fd9\u4e2aOrchardCore-preview MyGet url\u6dfb\u52a0\u5230\u4f60\u7684NuGet\u6e90\uff1a https://www.myget.org/F/orchardcore-preview/api/v3/index.json https://www.myget.org/F/orchardcore-preview/api/v3/index.json Right-click on the project and click on Manage NuGet packages... . \u53f3\u952e\u5355\u51fb\u8be5\u9879\u76ee\uff0c\u7136\u540e\u5355\u51fb\u201cManage NuGet packages ...\u201d\u3002 In the Browse tab, search for OrchardCore.Application.Cms.Targets and Install the package. \u5728 Browse \u9009\u9879\u5361\u4e2d\uff0c\u641c\u7d22 OrchardCore.Application.Cms.Targets \u548c Install \u5305\u3002 Open Startup.cs and modify the ConfigureServices method by adding this line: \u6253\u5f00 Startup.cs \u5e76\u901a\u8fc7\u6dfb\u52a0\u4ee5\u4e0b\u884c\u6765\u4fee\u6539 ConfigureServices \u65b9\u6cd5\uff1a services.AddOrchardCms(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">services.AddOrchardCms\uff08\uff09;</font> In the Configure method, replace this block: \u5728 Configure \u65b9\u6cd5\u4e2d\uff0c\u66ff\u6362\u6b64\u5757\uff1a app.Run(async (context) => <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">app.Run\uff08async\uff08context\uff09=></font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> await context.Response.WriteAsync(\"Hello World!\"); }); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}\uff09;</font> with this line: \u7528\u8fd9\u4e00\u884c\uff1a app.UseOrchardCore(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">app.UseOrchardCore\uff08\uff09;</font> Setup your application \u8bbe\u7f6e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f Launch your application (Ctrl+F5). The setup page is displayed. \u542f\u52a8\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff08Ctrl + F5\uff09\u3002\u663e\u793a\u8bbe\u7f6e\u9875\u9762\u3002 Enter the required information about the site: \u8f93\u5165\u6709\u5173\u7f51\u7ad9\u7684\u5fc5\u8981\u4fe1\u606f\uff1a The name of the site. Ex: Orchard Core . \u7f51\u7ad9\u7684\u540d\u79f0\u3002\u4f8b\u5982\uff1a Orchard Core \u3002 The theme recipe to use. Ex: Agency . \u8981\u4f7f\u7528\u7684\u4e3b\u9898\u914d\u65b9\u3002\u4f8b\u5982\uff1a \u4ee3\u7406\u5546 \u3002 The timezone of the site. Ex: (+01:00) Europe/Paris . \u7f51\u7ad9\u7684\u65f6\u533a\u3002\u4f8b\u5982\uff1a \uff08+01\uff1a00\uff09\u6b27\u6d32/\u5df4\u9ece \u3002 The Sql provider to use. Ex: SqLite . \u8981\u4f7f\u7528\u7684Sql\u63d0\u4f9b\u7a0b\u5e8f\u3002\u4f8b\u5982\uff1a SqLite \u3002 The name of the admin user. Ex: admin . \u7ba1\u7406\u5458\u7528\u6237\u7684\u540d\u79f0\u3002\u4f8b\u5982\uff1a admin \u3002 The email of the admin. Ex: foo@bar.com \u7ba1\u7406\u5458\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u4f8b\u5982\uff1a foo @ bar.com The password and the password confirmation. \u5bc6\u7801\u548c\u5bc6\u7801\u786e\u8ba4\u3002 Submit the form and your site is generated after a few seconds. \u63d0\u4ea4\u8868\u5355\uff0c\u51e0\u79d2\u949f\u540e\u751f\u6210\u60a8\u7684\u7f51\u7ad9\u3002 Then, you can access to the admin using the /admin url. Enjoy. \u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 / admin \u7f51\u5740\u8bbf\u95ee\u7ba1\u7406\u5458\u3002\u8bf7\u4eab\u7528\u3002","title":"Create a CMS Web application"},{"location":"docs/getting-started/#getting-started-with-orchard-core-as-a-nuget-package","text":"","title":"Getting started with Orchard Core as a NuGet package"},{"location":"docs/getting-started/#orchard-corenuget","text":"In this article, we are going to see how easy it is to create a CMS Web application using the NuGet packages provided by Orchard Core. \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u4f7f\u7528Orchard Core\u63d0\u4f9b\u7684NuGet\u5305\u521b\u5efaCMS Web\u5e94\u7528\u7a0b\u5e8f\u662f\u591a\u4e48\u5bb9\u6613\u3002 You can find the original blog post written by Chris Payne here: \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u7531Chris Payne\u64b0\u5199\u7684\u539f\u521b\u535a\u6587\uff1a http://ideliverable.com/blog/getting-started-with-orchard-core-as-a-nuget-package http://ideliverable.com/blog/getting-started-with-orchard-core-as-a-nuget-package","title":"\u5f00\u59cb\u4f7f\u7528Orchard Core\u4f5c\u4e3aNuGet\u5305"},{"location":"docs/getting-started/#create-an-orchard-core-cms-application","text":"","title":"Create an Orchard Core CMS application"},{"location":"docs/getting-started/#orchard-core-cms","text":"In Visual Studio, create a new empty .NET Core web application. Ex: Cms.Web . \u5728Visual Studio\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a7a.NET Core Web\u5e94\u7528\u7a0b\u5e8f\u3002\u4f8b\u5982\uff1a Cms.Web \u3002 If you want to use the dev packages, add this OrchardCore-preview MyGet url to your NuGet sources: \u5982\u679c\u4f60\u60f3\u4f7f\u7528 dev \u5305\uff0c\u8bf7\u5c06\u8fd9\u4e2aOrchardCore-preview MyGet url\u6dfb\u52a0\u5230\u4f60\u7684NuGet\u6e90\uff1a https://www.myget.org/F/orchardcore-preview/api/v3/index.json https://www.myget.org/F/orchardcore-preview/api/v3/index.json Right-click on the project and click on Manage NuGet packages... . \u53f3\u952e\u5355\u51fb\u8be5\u9879\u76ee\uff0c\u7136\u540e\u5355\u51fb\u201cManage NuGet packages ...\u201d\u3002 In the Browse tab, search for OrchardCore.Application.Cms.Targets and Install the package. \u5728 Browse \u9009\u9879\u5361\u4e2d\uff0c\u641c\u7d22 OrchardCore.Application.Cms.Targets \u548c Install \u5305\u3002 Open Startup.cs and modify the ConfigureServices method by adding this line: \u6253\u5f00 Startup.cs \u5e76\u901a\u8fc7\u6dfb\u52a0\u4ee5\u4e0b\u884c\u6765\u4fee\u6539 ConfigureServices \u65b9\u6cd5\uff1a services.AddOrchardCms(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">services.AddOrchardCms\uff08\uff09;</font> In the Configure method, replace this block: \u5728 Configure \u65b9\u6cd5\u4e2d\uff0c\u66ff\u6362\u6b64\u5757\uff1a app.Run(async (context) => <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">app.Run\uff08async\uff08context\uff09=></font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> await context.Response.WriteAsync(\"Hello World!\"); }); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}\uff09;</font> with this line: \u7528\u8fd9\u4e00\u884c\uff1a app.UseOrchardCore(); <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">app.UseOrchardCore\uff08\uff09;</font>","title":"\u521b\u5efaOrchard Core CMS\u5e94\u7528\u7a0b\u5e8f"},{"location":"docs/getting-started/#setup-your-application","text":"","title":"Setup your application"},{"location":"docs/getting-started/#_1","text":"Launch your application (Ctrl+F5). The setup page is displayed. \u542f\u52a8\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff08Ctrl + F5\uff09\u3002\u663e\u793a\u8bbe\u7f6e\u9875\u9762\u3002 Enter the required information about the site: \u8f93\u5165\u6709\u5173\u7f51\u7ad9\u7684\u5fc5\u8981\u4fe1\u606f\uff1a The name of the site. Ex: Orchard Core . \u7f51\u7ad9\u7684\u540d\u79f0\u3002\u4f8b\u5982\uff1a Orchard Core \u3002 The theme recipe to use. Ex: Agency . \u8981\u4f7f\u7528\u7684\u4e3b\u9898\u914d\u65b9\u3002\u4f8b\u5982\uff1a \u4ee3\u7406\u5546 \u3002 The timezone of the site. Ex: (+01:00) Europe/Paris . \u7f51\u7ad9\u7684\u65f6\u533a\u3002\u4f8b\u5982\uff1a \uff08+01\uff1a00\uff09\u6b27\u6d32/\u5df4\u9ece \u3002 The Sql provider to use. Ex: SqLite . \u8981\u4f7f\u7528\u7684Sql\u63d0\u4f9b\u7a0b\u5e8f\u3002\u4f8b\u5982\uff1a SqLite \u3002 The name of the admin user. Ex: admin . \u7ba1\u7406\u5458\u7528\u6237\u7684\u540d\u79f0\u3002\u4f8b\u5982\uff1a admin \u3002 The email of the admin. Ex: foo@bar.com \u7ba1\u7406\u5458\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u4f8b\u5982\uff1a foo @ bar.com The password and the password confirmation. \u5bc6\u7801\u548c\u5bc6\u7801\u786e\u8ba4\u3002 Submit the form and your site is generated after a few seconds. \u63d0\u4ea4\u8868\u5355\uff0c\u51e0\u79d2\u949f\u540e\u751f\u6210\u60a8\u7684\u7f51\u7ad9\u3002 Then, you can access to the admin using the /admin url. Enjoy. \u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 / admin \u7f51\u5740\u8bbf\u95ee\u7ba1\u7406\u5458\u3002\u8bf7\u4eab\u7528\u3002","title":"\u8bbe\u7f6e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f"},{"location":"docs/getting-started/theme/","text":"Getting started with an Orchard Core Theme \u5f00\u59cb\u4f7f\u7528Orchard\u6838\u5fc3\u4e3b\u9898 In this article, we are going to create an Orchard Core Theme by adding it to an existing Orchard Core CMS application created previously . \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u5c06\u5176\u6dfb\u52a0\u5230\u73b0\u6709\u7684Orchard Core CMS\u5e94\u7528\u7a0b\u5e8f[\u4e4b\u524d\u521b\u5efa]\uff08README\uff09\u6765\u521b\u5efaOrchard\u6838\u5fc3\u4e3b\u9898\u3002 Create an Orchard Core Theme \u521b\u5efa\u4e00\u4e2a\u679c\u56ed\u6838\u5fc3\u4e3b\u9898 Install the Code Generation Templates \u5b89\u88c5[\u4ee3\u7801\u751f\u6210\u6a21\u677f]\uff08../../ Templates / README\uff09 Create a folder with the name of your theme (Ex: MyTheme.OrchardCore ) and open it \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e3b\u9898\u540d\u79f0\u7684\u6587\u4ef6\u5939\uff08\u4f8b\u5982\uff1a MyTheme.OrchardCore \uff09\u5e76\u6253\u5f00\u5b83 Execute the command dotnet new octheme \u6267\u884c\u547d\u4ee4 dotnet new octheme Add a reference to the theme from the main Orchard Core CMS Web application \u4ece\u4e3bOrchard Core CMS Web\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u5bf9\u4e3b\u9898\u7684\u5f15\u7528 A thumbnail can also be created by adding a Theme.png in the wwwwroot folder. \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728 wwwwroot \u6587\u4ef6\u5939\u4e2d\u6dfb\u52a0 Theme.png \u6765\u521b\u5efa\u7f29\u7565\u56fe\u3002 The properties of the theme can be changed in the Manifest.cs file: \u53ef\u4ee5\u5728__Manifest.cs__\u6587\u4ef6\u4e2d\u66f4\u6539\u4e3b\u9898\u7684\u5c5e\u6027\uff1a using OrchardCore.DisplayManagement.Manifest; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528OrchardCore.DisplayManagement.Manifest;</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> [assembly: Theme( <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">[\u96c6\u4f1a\uff1a\u4e3b\u9898\uff08</font> Name = \"MyTheme\", Author = \"My name\", Website = \"https://mywebsite.net\", Version = \"0.0.1\", Description = \"My Orchard Core Theme description.\" )] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09]</font> The theme should be available in the Active themes admin page, and can be set as the default theme. \u4e3b\u9898\u5e94\u8be5\u5728\u201c\u6d3b\u52a8\u4e3b\u9898\u201d\u7ba1\u7406\u9875\u9762\u4e2d\u53ef\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u4e3b\u9898\u3002","title":"Create a Theme"},{"location":"docs/getting-started/theme/#getting-started-with-an-orchard-core-theme","text":"","title":"Getting started with an Orchard Core Theme"},{"location":"docs/getting-started/theme/#orchard","text":"In this article, we are going to create an Orchard Core Theme by adding it to an existing Orchard Core CMS application created previously . \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u5c06\u5176\u6dfb\u52a0\u5230\u73b0\u6709\u7684Orchard Core CMS\u5e94\u7528\u7a0b\u5e8f[\u4e4b\u524d\u521b\u5efa]\uff08README\uff09\u6765\u521b\u5efaOrchard\u6838\u5fc3\u4e3b\u9898\u3002","title":"\u5f00\u59cb\u4f7f\u7528Orchard\u6838\u5fc3\u4e3b\u9898"},{"location":"docs/getting-started/theme/#create-an-orchard-core-theme","text":"","title":"Create an Orchard Core Theme"},{"location":"docs/getting-started/theme/#_1","text":"Install the Code Generation Templates \u5b89\u88c5[\u4ee3\u7801\u751f\u6210\u6a21\u677f]\uff08../../ Templates / README\uff09 Create a folder with the name of your theme (Ex: MyTheme.OrchardCore ) and open it \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e3b\u9898\u540d\u79f0\u7684\u6587\u4ef6\u5939\uff08\u4f8b\u5982\uff1a MyTheme.OrchardCore \uff09\u5e76\u6253\u5f00\u5b83 Execute the command dotnet new octheme \u6267\u884c\u547d\u4ee4 dotnet new octheme Add a reference to the theme from the main Orchard Core CMS Web application \u4ece\u4e3bOrchard Core CMS Web\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u5bf9\u4e3b\u9898\u7684\u5f15\u7528 A thumbnail can also be created by adding a Theme.png in the wwwwroot folder. \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728 wwwwroot \u6587\u4ef6\u5939\u4e2d\u6dfb\u52a0 Theme.png \u6765\u521b\u5efa\u7f29\u7565\u56fe\u3002 The properties of the theme can be changed in the Manifest.cs file: \u53ef\u4ee5\u5728__Manifest.cs__\u6587\u4ef6\u4e2d\u66f4\u6539\u4e3b\u9898\u7684\u5c5e\u6027\uff1a using OrchardCore.DisplayManagement.Manifest; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528OrchardCore.DisplayManagement.Manifest;</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> [assembly: Theme( <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">[\u96c6\u4f1a\uff1a\u4e3b\u9898\uff08</font> Name = \"MyTheme\", Author = \"My name\", Website = \"https://mywebsite.net\", Version = \"0.0.1\", Description = \"My Orchard Core Theme description.\" )] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09]</font> The theme should be available in the Active themes admin page, and can be set as the default theme. \u4e3b\u9898\u5e94\u8be5\u5728\u201c\u6d3b\u52a8\u4e3b\u9898\u201d\u7ba1\u7406\u9875\u9762\u4e2d\u53ef\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u4e3b\u9898\u3002","title":"\u521b\u5efa\u4e00\u4e2a\u679c\u56ed\u6838\u5fc3\u4e3b\u9898"},{"location":"docs/templates/","text":"Code Generation Templates \u4ee3\u7801\u751f\u6210\u6a21\u677f Orchard Core Templates uses dotnet new templates configurations for creating new websites, themes and modules from the command shell. Orchard Core Templates\u4f7f\u7528 dotnet new \u6a21\u677f\u914d\u7f6e\u4ece\u547d\u4ee4shell\u521b\u5efa\u65b0\u7684\u7f51\u7ad9\uff0c\u4e3b\u9898\u548c\u6a21\u5757\u3002 More information about dotnet new can be found at https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new \u6709\u5173 dotnet new \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new Installing the Orchard Cms templates \u5b89\u88c5Orchard Cms\u6a21\u677f Once the .NET Core SDK has been installed, type the following command to install the templates for creating Orchard Core Cms web applications. \u5b89\u88c5.NET Core SDK\u540e\uff0c\u952e\u5165\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u5b89\u88c5\u7528\u4e8e\u521b\u5efaOrchard Core Cms Web\u5e94\u7528\u7a0b\u5e8f\u7684\u6a21\u677f\u3002 dotnet new -i OrchardCore.Cms.Templates::1.0.0-beta2-* <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new -i OrchardCore.Cms.Templates :: 1.0.0-beta2- *</font> This will use the most stable release of Orchard Core. In order to use the latest dev branch of Orchard Core, the following command can be used: \u8fd9\u5c06\u4f7f\u7528\u6700\u7a33\u5b9a\u7684Orchard Core\u7248\u672c\u3002\u8981\u4f7f\u7528Orchard Core\u7684\u6700\u65b0__dev__\u5206\u652f\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a dotnet new -i OrchardCore.Cms.Templates::1.0.0-beta2-* --nuget-source https://www.myget.org/F/orchardcore-preview/api/v3/index.json <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new -i OrchardCore.Cms.Templates :: 1.0.0-beta2- * --nuget-source https://www.myget.org/F/orchardcore-preview/api/v3/index.json</font> Create a new website \u521b\u5efa\u4e00\u4e2a\u65b0\u7f51\u7ad9 From Command Shell (automated way) \u4ece\u547d\u4ee4\u5916\u58f3\uff08\u81ea\u52a8\u65b9\u5f0f\uff09 Generate an Orchard Cms Web Application \u751f\u6210Orchard Cms Web\u5e94\u7528\u7a0b\u5e8f dotnet new occms <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new occms</font> The above command will use the default options. \u4ee5\u4e0a\u547d\u4ee4\u5c06\u4f7f\u7528\u9ed8\u8ba4\u9009\u9879\u3002 You can pass the following CLI parameters to setup options \u60a8\u53ef\u4ee5\u5c06\u4ee5\u4e0bCLI\u53c2\u6570\u4f20\u9012\u7ed9\u8bbe\u7f6e\u9009\u9879 Orchard Core Cms Web App (C#) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">Orchard Core Cms Web App\uff08C\uff03\uff09</font> Author: Orchard Project <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f5c\u8005\uff1aOrchard Project</font> Options: <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u9009\u9879\uff1a</font> -lo|--logger Configures the logger component. - <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">lo | --logger\u914d\u7f6e\u8bb0\u5f55\u5668\u7ec4\u4ef6\u3002</font> nlog - Configures NLog as the logger component. serilog - Configures Serilog as the logger component. none - Do not configure logger. Default: nlog <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> -ov|--orchard-version Specifies which version of Orchard Core packages to use. - <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">ov | --orchard-version\u6307\u5b9a\u8981\u4f7f\u7528\u7684Orchard Core\u8f6f\u4ef6\u5305\u7684\u7248\u672c\u3002</font> string - Optional Default: 1.0.0-beta3 Logging can be ignored with this command: \u4f7f\u7528\u6b64\u547d\u4ee4\u53ef\u4ee5\u5ffd\u7565\u65e5\u5fd7\u8bb0\u5f55\uff1a dotnet new occms --logger none <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new occms --logger none</font> From Visual Studio (manual way) \u4eceVisual Studio\uff08\u624b\u52a8\u65b9\u5f0f\uff09 Fire up Visual Studio, create a new solution file (.sln) by creating a new ASP.NET Core Web Application : \u542f\u52a8Visual Studio\uff0c\u901a\u8fc7\u521b\u5efa\u65b0\u7684ASP.NET Core Web\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\uff08.sln\uff09\uff1a Now that we created a new Web Application we need to add proper dependencies so that this new Web Application be targetted as an Orchard Core application. \u73b0\u5728\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684Web\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u9002\u5f53\u7684\u4f9d\u8d56\u9879\uff0c\u4ee5\u4fbf\u5c06\u8fd9\u4e2a\u65b0\u7684Web\u5e94\u7528\u7a0b\u5e8f\u4f5c\u4e3aOrchard Core\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u5b9a\u4f4d\u3002 See Adding Orchard Core Nuget Feed \u8bf7\u53c2\u9605[\u6dfb\u52a0\u679c\u56ed\u6838\u5fc3Nuget Feed]\uff08\uff03adding-orchard-core-nuget-feed\uff09 Finally we will need to register Orchard CMS service in our Startup.cs file like this : \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728 Startup.cs \u6587\u4ef6\u4e2d\u6ce8\u518cOrchard CMS\u670d\u52a1\uff0c\u5982\u4e0b\u6240\u793a\uff1a using Microsoft.AspNetCore.Builder; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528Microsoft.AspNetCore.Builder;</font> using Microsoft.AspNetCore.Hosting; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528Microsoft.AspNetCore.Hosting;</font> using Microsoft.AspNetCore.Http; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528Microsoft.AspNetCore.Http;</font> using Microsoft.Extensions.DependencyInjection; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528Microsoft.Extensions.DependencyInjection;</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> namespace MyNewWebsite <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u547d\u540d\u7a7a\u95f4MyNewWebsite</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> public class Startup { // This method gets called by the runtime. Use this method to add services to the container. // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940 public void ConfigureServices(IServiceCollection services) { services.AddOrchardCms(); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // This method gets called by the runtime. Use this method to configure the HTTP request pipeline. public void Configure(IApplicationBuilder app, IHostingEnvironment env) { if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> app.UseOrchardCore(); } } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font> Create a new module \u521b\u5efa\u4e00\u4e2a\u65b0\u6a21\u5757 New module from Command Shell (automated way) Command Shell\u7684\u65b0\u6a21\u5757\uff08\u81ea\u52a8\u65b9\u5f0f\uff09 Module commands \u6a21\u5757\u547d\u4ee4 dotnet new ocmodule -n ModuleName.OrchardCore <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new ocmodule -n ModuleName.OrchardCore</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> dotnet new ocmodule -n ModuleName.OrchardCore --PartName TestPart <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new ocmodule -n ModuleName.OrchardCore --PartName TestPart</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> dotnet new ocmodule -n ModuleName.OrchardCore --PartName TestPart --AddPart true <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new ocmodule -n ModuleName.OrchardCore --PartName TestPart --AddPart true</font> New module from Visual Studio (manual way) Visual Studio\u7684\u65b0\u6a21\u5757\uff08\u624b\u52a8\u65b9\u5f0f\uff09 Fire up Visual Studio, open Orchard Core solution file (.sln), select OrchardCore.Modules folder, right click and select \"add --> new project\" and create a new .NET Standard Class Library: \u542f\u52a8Visual Studio\uff0c\u6253\u5f00Orchard Core\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\uff08.sln\uff09\uff0c\u9009\u62e9OrchardCore.Modules\u6587\u4ef6\u5939\uff0c\u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9\u201c\u6dfb\u52a0 - >\u65b0\u9879\u76ee\u201d\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684.NET\u6807\u51c6\u7c7b\u5e93\uff1a For marking this new Class Library as an Orchard Module we will now need to reference OrchardCore.Module.Targets Nuget package. \u4e3a\u4e86\u5c06\u8fd9\u4e2a\u65b0\u7c7b\u5e93\u6807\u8bb0\u4e3aOrchard\u6a21\u5757\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u5f15\u7528OrchardCore.Module.Targets Nuget\u5305\u3002 See adding Orchard Core Nuget Feed [\u8bf7\u53c2\u9605\u6dfb\u52a0Orchard Core Nuget Feed]\uff08\uff03adding-orchard-core-nuget-feed\uff09 Each of these \"*.Targets\" Nuget packages are used to mark a Class Library as a specific Orchard Core functionality. OrchardCore.Module.Targets is the one we are interested in for now. We will mark our new Class Library as a module by adding OrchardCore.Module.Targets as a dependency. For doing so you will need to right click on MyModule.OrchardCore project and select \"Manage Nuget Packages\" option. To find the packages in Nuget Package Manager you will need to check \"include prerelease\" and make sure you have Orchard Core feed that we added earlier selected. Once you have found it click on the Install button on the right panel next to Version : Latest prerelease x.x.x.x \u8fd9\u4e9b\u201c* .Targets\u201dNuget\u5305\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u7528\u4e8e\u5c06\u7c7b\u5e93\u6807\u8bb0\u4e3a\u7279\u5b9a\u7684Orchard Core\u529f\u80fd\u3002 OrchardCore.Module.Targets\u662f\u6211\u4eec\u73b0\u5728\u611f\u5174\u8da3\u7684\u3002\u6211\u4eec\u5c06\u65b0\u7684\u7c7b\u5e93\u6807\u8bb0\u4e3a\u6a21\u5757\uff0c\u65b9\u6cd5\u662f\u5c06OrchardCore.Module.Targets\u6dfb\u52a0\u4e3a\u4f9d\u8d56\u9879\u3002\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u53f3\u952e\u5355\u51fbMyModule.OrchardCore\u9879\u76ee\u5e76\u9009\u62e9\u201cManage Nuget Packages\u201d\u9009\u9879\u3002\u8981\u5728Nuget Package Manager\u4e2d\u67e5\u627e\u8f6f\u4ef6\u5305\uff0c\u60a8\u9700\u8981\u9009\u4e2d\u201cinclude prerelease\u201d\u5e76\u786e\u4fdd\u60a8\u5df2\u9009\u62e9\u6211\u4eec\u4e4b\u524d\u6dfb\u52a0\u7684Orchard Core Feed\u3002\u627e\u5230\u5b83\u540e\uff0c\u5355\u51fbVersion\uff1aLatest prerelease x.x.x.x\u65c1\u8fb9\u53f3\u4fa7\u9762\u677f\u4e0a\u7684Install\u6309\u94ae Once done your new module will look like this : \u5b8c\u6210\u540e\uff0c\u60a8\u7684\u65b0\u6a21\u5757\u5c06\u5982\u4e0b\u6240\u793a\uff1a For Orchard Core to identify this module it will now require a Manifest.cs file. Here is an example of that file: \u8981\u8ba9Orchard Core\u8bc6\u522b\u6b64\u6a21\u5757\uff0c\u5b83\u73b0\u5728\u9700\u8981\u4e00\u4e2a Manifest.cs \u6587\u4ef6\u3002\u4ee5\u4e0b\u662f\u8be5\u6587\u4ef6\u7684\u793a\u4f8b\uff1a using OrchardCore.Modules.Manifest; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528OrchardCore.Modules.Manifest;</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> [assembly: Module( <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">[\u7ec4\u88c5\uff1a\u6a21\u5757\uff08</font> Name = \"TemplateModule.OrchardCore\", Author = \"The Orchard Team\", Website = \"http://orchardproject.net\", Version = \"0.0.1\", Description = \"Template module.\" )] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09]</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> For this module to start we now will need to add a Startup.cs file to our new module. See this file as an example: \u4e3a\u4e86\u542f\u52a8\u8fd9\u4e2a\u6a21\u5757\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u5728\u6211\u4eec\u7684\u65b0\u6a21\u5757\u4e2d\u6dfb\u52a0\u4e00\u4e2a Startup.cs \u6587\u4ef6\u3002\u4ee5\u6b64\u6587\u4ef6\u4e3a\u4f8b\uff1a OrchardCore.Templates.Module/Startup.cs [OrchardCore.Templates.Module / Startup.cs]\uff08https://github.com/OrchardCMS/OrchardCore/tree/dev/src/Templates/OrchardCore.Cms.Templates/content/OrchardCore.Templates.Module/Startup.cs\uff09 Last step is to add our new module to the OrchardCore.Cms.Web project as a reference for including it as part as our website modules. After that, you should be all set for starting building your custom module. You can refer to our template module for examples of what's basically needed normally. \u6700\u540e\u4e00\u6b65\u662f\u5c06\u6211\u4eec\u7684\u65b0\u6a21\u5757\u6dfb\u52a0\u5230OrchardCore.Cms.Web\u9879\u76ee\u4e2d\u4f5c\u4e3a\u53c2\u8003\uff0c\u5c06\u5176\u4f5c\u4e3a\u6211\u4eec\u7f51\u7ad9\u6a21\u5757\u7684\u4e00\u90e8\u5206\u5305\u542b\u5728\u5185\u3002\u4e4b\u540e\uff0c\u60a8\u5e94\u8be5\u5df2\u51c6\u5907\u597d\u5f00\u59cb\u6784\u5efa\u81ea\u5b9a\u4e49\u6a21\u5757\u3002\u60a8\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684[\u6a21\u677f\u6a21\u5757]\uff08https://github.com/OrchardCMS/OrchardCore/tree/dev/src/Templates/OrchardCore.Cms.Templates/content/OrchardCore.Templates.Module/\uff09\u83b7\u53d6\u57fa\u672c\u793a\u4f8b\u901a\u5e38\u9700\u8981\u3002 Create a new theme \u521b\u5efa\u4e00\u4e2a\u65b0\u4e3b\u9898 New theme From Command Shell (automated way) \u6765\u81eaCommand Shell\u7684\u65b0\u4e3b\u9898\uff08\u81ea\u52a8\u65b9\u5f0f\uff09 Theme commands \u4e3b\u9898\u547d\u4ee4 dotnet new octheme -n \"ThemeName.OrchardCore\" New theme from Visual Studio (manual way) Visual Studio\u7684\u65b0\u4e3b\u9898\uff08\u624b\u52a8\u65b9\u5f0f\uff09 Should be the same procedure as with modules but instead we need to reference OrchardCore.Theme.Targets and Manifest.cs file slightly differ: \u5e94\u8be5\u662f\u4e0e\u6a21\u5757\u76f8\u540c\u7684\u8fc7\u7a0b\uff0c\u4f46\u6211\u4eec\u9700\u8981\u5f15\u7528OrchardCore.Theme.Targets\u548c Manifest.cs \u6587\u4ef6\u7565\u6709\u4e0d\u540c\uff1a using OrchardCore.DisplayManagement.Manifest; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528OrchardCore.DisplayManagement.Manifest;</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> [assembly: Theme( <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">[\u96c6\u4f1a\uff1a\u4e3b\u9898\uff08</font> Name = \"TemplateTheme.OrchardCore\", Author = \"The Orchard Team\", Website = \"https://orchardproject.net\", Version = \"0.0.1\", Description = \"The TemplateTheme.\" )] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09]</font> Adding Orchard Core Nuget Feed \u6dfb\u52a0\u679c\u56ed\u6838\u5fc3Nuget Feed In order to be able to use the dev feed from Visual Studio, open the Tools menu under Nuget Package Manager --> Package Manager Settings. \u4e3a\u4e86\u80fd\u591f\u4f7f\u7528Visual Studio\u4e2d\u7684__dev__\u63d0\u8981\uff0c\u8bf7\u6253\u5f00Nuget\u5305\u7ba1\u7406\u5668 - >\u5305\u7ba1\u7406\u5668\u8bbe\u7f6e\u4e0b\u7684\u201c\u5de5\u5177\u201d\u83dc\u5355\u3002 The feed url is https://www.myget.org/F/orchardcore-preview/api/v3/index.json Feed\u7f51\u5740\u4e3a https://www.myget.org/F/orchardcore-preview/api/v3/index.json","title":"Code Generation Templates"},{"location":"docs/templates/#code-generation-templates","text":"","title":"Code Generation Templates"},{"location":"docs/templates/#_1","text":"Orchard Core Templates uses dotnet new templates configurations for creating new websites, themes and modules from the command shell. Orchard Core Templates\u4f7f\u7528 dotnet new \u6a21\u677f\u914d\u7f6e\u4ece\u547d\u4ee4shell\u521b\u5efa\u65b0\u7684\u7f51\u7ad9\uff0c\u4e3b\u9898\u548c\u6a21\u5757\u3002 More information about dotnet new can be found at https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new \u6709\u5173 dotnet new \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new","title":"\u4ee3\u7801\u751f\u6210\u6a21\u677f"},{"location":"docs/templates/#installing-the-orchard-cms-templates","text":"","title":"Installing the Orchard Cms templates"},{"location":"docs/templates/#orchard-cms","text":"Once the .NET Core SDK has been installed, type the following command to install the templates for creating Orchard Core Cms web applications. \u5b89\u88c5.NET Core SDK\u540e\uff0c\u952e\u5165\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u5b89\u88c5\u7528\u4e8e\u521b\u5efaOrchard Core Cms Web\u5e94\u7528\u7a0b\u5e8f\u7684\u6a21\u677f\u3002 dotnet new -i OrchardCore.Cms.Templates::1.0.0-beta2-* <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new -i OrchardCore.Cms.Templates :: 1.0.0-beta2- *</font> This will use the most stable release of Orchard Core. In order to use the latest dev branch of Orchard Core, the following command can be used: \u8fd9\u5c06\u4f7f\u7528\u6700\u7a33\u5b9a\u7684Orchard Core\u7248\u672c\u3002\u8981\u4f7f\u7528Orchard Core\u7684\u6700\u65b0__dev__\u5206\u652f\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a dotnet new -i OrchardCore.Cms.Templates::1.0.0-beta2-* --nuget-source https://www.myget.org/F/orchardcore-preview/api/v3/index.json <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new -i OrchardCore.Cms.Templates :: 1.0.0-beta2- * --nuget-source https://www.myget.org/F/orchardcore-preview/api/v3/index.json</font>","title":"\u5b89\u88c5Orchard Cms\u6a21\u677f"},{"location":"docs/templates/#create-a-new-website","text":"","title":"Create a new website"},{"location":"docs/templates/#_2","text":"","title":"\u521b\u5efa\u4e00\u4e2a\u65b0\u7f51\u7ad9"},{"location":"docs/templates/#from-command-shell-automated-way","text":"","title":"From Command Shell (automated way)"},{"location":"docs/templates/#_3","text":"","title":"\u4ece\u547d\u4ee4\u5916\u58f3\uff08\u81ea\u52a8\u65b9\u5f0f\uff09"},{"location":"docs/templates/#generate-an-orchard-cms-web-application","text":"","title":"Generate an Orchard Cms Web Application"},{"location":"docs/templates/#orchard-cms-web","text":"dotnet new occms <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new occms</font> The above command will use the default options. \u4ee5\u4e0a\u547d\u4ee4\u5c06\u4f7f\u7528\u9ed8\u8ba4\u9009\u9879\u3002 You can pass the following CLI parameters to setup options \u60a8\u53ef\u4ee5\u5c06\u4ee5\u4e0bCLI\u53c2\u6570\u4f20\u9012\u7ed9\u8bbe\u7f6e\u9009\u9879 Orchard Core Cms Web App (C#) <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">Orchard Core Cms Web App\uff08C\uff03\uff09</font> Author: Orchard Project <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f5c\u8005\uff1aOrchard Project</font> Options: <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u9009\u9879\uff1a</font> -lo|--logger Configures the logger component. - <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">lo | --logger\u914d\u7f6e\u8bb0\u5f55\u5668\u7ec4\u4ef6\u3002</font> nlog - Configures NLog as the logger component. serilog - Configures Serilog as the logger component. none - Do not configure logger. Default: nlog <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> -ov|--orchard-version Specifies which version of Orchard Core packages to use. - <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">ov | --orchard-version\u6307\u5b9a\u8981\u4f7f\u7528\u7684Orchard Core\u8f6f\u4ef6\u5305\u7684\u7248\u672c\u3002</font> string - Optional Default: 1.0.0-beta3 Logging can be ignored with this command: \u4f7f\u7528\u6b64\u547d\u4ee4\u53ef\u4ee5\u5ffd\u7565\u65e5\u5fd7\u8bb0\u5f55\uff1a dotnet new occms --logger none <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new occms --logger none</font>","title":"\u751f\u6210Orchard Cms Web\u5e94\u7528\u7a0b\u5e8f"},{"location":"docs/templates/#from-visual-studio-manual-way","text":"","title":"From Visual Studio (manual way)"},{"location":"docs/templates/#visual-studio","text":"Fire up Visual Studio, create a new solution file (.sln) by creating a new ASP.NET Core Web Application : \u542f\u52a8Visual Studio\uff0c\u901a\u8fc7\u521b\u5efa\u65b0\u7684ASP.NET Core Web\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\uff08.sln\uff09\uff1a Now that we created a new Web Application we need to add proper dependencies so that this new Web Application be targetted as an Orchard Core application. \u73b0\u5728\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684Web\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u9002\u5f53\u7684\u4f9d\u8d56\u9879\uff0c\u4ee5\u4fbf\u5c06\u8fd9\u4e2a\u65b0\u7684Web\u5e94\u7528\u7a0b\u5e8f\u4f5c\u4e3aOrchard Core\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u5b9a\u4f4d\u3002 See Adding Orchard Core Nuget Feed \u8bf7\u53c2\u9605[\u6dfb\u52a0\u679c\u56ed\u6838\u5fc3Nuget Feed]\uff08\uff03adding-orchard-core-nuget-feed\uff09 Finally we will need to register Orchard CMS service in our Startup.cs file like this : \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728 Startup.cs \u6587\u4ef6\u4e2d\u6ce8\u518cOrchard CMS\u670d\u52a1\uff0c\u5982\u4e0b\u6240\u793a\uff1a using Microsoft.AspNetCore.Builder; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528Microsoft.AspNetCore.Builder;</font> using Microsoft.AspNetCore.Hosting; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528Microsoft.AspNetCore.Hosting;</font> using Microsoft.AspNetCore.Http; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528Microsoft.AspNetCore.Http;</font> using Microsoft.Extensions.DependencyInjection; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528Microsoft.Extensions.DependencyInjection;</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> namespace MyNewWebsite <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u547d\u540d\u7a7a\u95f4MyNewWebsite</font> { <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">{</font> public class Startup { // This method gets called by the runtime. Use this method to add services to the container. // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940 public void ConfigureServices(IServiceCollection services) { services.AddOrchardCms(); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> // This method gets called by the runtime. Use this method to configure the HTTP request pipeline. public void Configure(IApplicationBuilder app, IHostingEnvironment env) { if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> app.UseOrchardCore(); } } } <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">}</font>","title":"\u4eceVisual Studio\uff08\u624b\u52a8\u65b9\u5f0f\uff09"},{"location":"docs/templates/#create-a-new-module","text":"","title":"Create a new module"},{"location":"docs/templates/#_4","text":"","title":"\u521b\u5efa\u4e00\u4e2a\u65b0\u6a21\u5757"},{"location":"docs/templates/#new-module-from-command-shell-automated-way","text":"","title":"New module from Command Shell (automated way)"},{"location":"docs/templates/#command-shell","text":"","title":"Command Shell\u7684\u65b0\u6a21\u5757\uff08\u81ea\u52a8\u65b9\u5f0f\uff09"},{"location":"docs/templates/#module-commands","text":"","title":"Module commands"},{"location":"docs/templates/#_5","text":"dotnet new ocmodule -n ModuleName.OrchardCore <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new ocmodule -n ModuleName.OrchardCore</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> dotnet new ocmodule -n ModuleName.OrchardCore --PartName TestPart <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new ocmodule -n ModuleName.OrchardCore --PartName TestPart</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> dotnet new ocmodule -n ModuleName.OrchardCore --PartName TestPart --AddPart true <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">dotnet new ocmodule -n ModuleName.OrchardCore --PartName TestPart --AddPart true</font>","title":"\u6a21\u5757\u547d\u4ee4"},{"location":"docs/templates/#new-module-from-visual-studio-manual-way","text":"","title":"New module from Visual Studio (manual way)"},{"location":"docs/templates/#visual-studio_1","text":"Fire up Visual Studio, open Orchard Core solution file (.sln), select OrchardCore.Modules folder, right click and select \"add --> new project\" and create a new .NET Standard Class Library: \u542f\u52a8Visual Studio\uff0c\u6253\u5f00Orchard Core\u89e3\u51b3\u65b9\u6848\u6587\u4ef6\uff08.sln\uff09\uff0c\u9009\u62e9OrchardCore.Modules\u6587\u4ef6\u5939\uff0c\u53f3\u952e\u5355\u51fb\u5e76\u9009\u62e9\u201c\u6dfb\u52a0 - >\u65b0\u9879\u76ee\u201d\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684.NET\u6807\u51c6\u7c7b\u5e93\uff1a For marking this new Class Library as an Orchard Module we will now need to reference OrchardCore.Module.Targets Nuget package. \u4e3a\u4e86\u5c06\u8fd9\u4e2a\u65b0\u7c7b\u5e93\u6807\u8bb0\u4e3aOrchard\u6a21\u5757\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u5f15\u7528OrchardCore.Module.Targets Nuget\u5305\u3002 See adding Orchard Core Nuget Feed [\u8bf7\u53c2\u9605\u6dfb\u52a0Orchard Core Nuget Feed]\uff08\uff03adding-orchard-core-nuget-feed\uff09 Each of these \"*.Targets\" Nuget packages are used to mark a Class Library as a specific Orchard Core functionality. OrchardCore.Module.Targets is the one we are interested in for now. We will mark our new Class Library as a module by adding OrchardCore.Module.Targets as a dependency. For doing so you will need to right click on MyModule.OrchardCore project and select \"Manage Nuget Packages\" option. To find the packages in Nuget Package Manager you will need to check \"include prerelease\" and make sure you have Orchard Core feed that we added earlier selected. Once you have found it click on the Install button on the right panel next to Version : Latest prerelease x.x.x.x \u8fd9\u4e9b\u201c* .Targets\u201dNuget\u5305\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u7528\u4e8e\u5c06\u7c7b\u5e93\u6807\u8bb0\u4e3a\u7279\u5b9a\u7684Orchard Core\u529f\u80fd\u3002 OrchardCore.Module.Targets\u662f\u6211\u4eec\u73b0\u5728\u611f\u5174\u8da3\u7684\u3002\u6211\u4eec\u5c06\u65b0\u7684\u7c7b\u5e93\u6807\u8bb0\u4e3a\u6a21\u5757\uff0c\u65b9\u6cd5\u662f\u5c06OrchardCore.Module.Targets\u6dfb\u52a0\u4e3a\u4f9d\u8d56\u9879\u3002\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u53f3\u952e\u5355\u51fbMyModule.OrchardCore\u9879\u76ee\u5e76\u9009\u62e9\u201cManage Nuget Packages\u201d\u9009\u9879\u3002\u8981\u5728Nuget Package Manager\u4e2d\u67e5\u627e\u8f6f\u4ef6\u5305\uff0c\u60a8\u9700\u8981\u9009\u4e2d\u201cinclude prerelease\u201d\u5e76\u786e\u4fdd\u60a8\u5df2\u9009\u62e9\u6211\u4eec\u4e4b\u524d\u6dfb\u52a0\u7684Orchard Core Feed\u3002\u627e\u5230\u5b83\u540e\uff0c\u5355\u51fbVersion\uff1aLatest prerelease x.x.x.x\u65c1\u8fb9\u53f3\u4fa7\u9762\u677f\u4e0a\u7684Install\u6309\u94ae Once done your new module will look like this : \u5b8c\u6210\u540e\uff0c\u60a8\u7684\u65b0\u6a21\u5757\u5c06\u5982\u4e0b\u6240\u793a\uff1a For Orchard Core to identify this module it will now require a Manifest.cs file. Here is an example of that file: \u8981\u8ba9Orchard Core\u8bc6\u522b\u6b64\u6a21\u5757\uff0c\u5b83\u73b0\u5728\u9700\u8981\u4e00\u4e2a Manifest.cs \u6587\u4ef6\u3002\u4ee5\u4e0b\u662f\u8be5\u6587\u4ef6\u7684\u793a\u4f8b\uff1a using OrchardCore.Modules.Manifest; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528OrchardCore.Modules.Manifest;</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> [assembly: Module( <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">[\u7ec4\u88c5\uff1a\u6a21\u5757\uff08</font> Name = \"TemplateModule.OrchardCore\", Author = \"The Orchard Team\", Website = \"http://orchardproject.net\", Version = \"0.0.1\", Description = \"Template module.\" )] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09]</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> For this module to start we now will need to add a Startup.cs file to our new module. See this file as an example: \u4e3a\u4e86\u542f\u52a8\u8fd9\u4e2a\u6a21\u5757\uff0c\u6211\u4eec\u73b0\u5728\u9700\u8981\u5728\u6211\u4eec\u7684\u65b0\u6a21\u5757\u4e2d\u6dfb\u52a0\u4e00\u4e2a Startup.cs \u6587\u4ef6\u3002\u4ee5\u6b64\u6587\u4ef6\u4e3a\u4f8b\uff1a OrchardCore.Templates.Module/Startup.cs [OrchardCore.Templates.Module / Startup.cs]\uff08https://github.com/OrchardCMS/OrchardCore/tree/dev/src/Templates/OrchardCore.Cms.Templates/content/OrchardCore.Templates.Module/Startup.cs\uff09 Last step is to add our new module to the OrchardCore.Cms.Web project as a reference for including it as part as our website modules. After that, you should be all set for starting building your custom module. You can refer to our template module for examples of what's basically needed normally. \u6700\u540e\u4e00\u6b65\u662f\u5c06\u6211\u4eec\u7684\u65b0\u6a21\u5757\u6dfb\u52a0\u5230OrchardCore.Cms.Web\u9879\u76ee\u4e2d\u4f5c\u4e3a\u53c2\u8003\uff0c\u5c06\u5176\u4f5c\u4e3a\u6211\u4eec\u7f51\u7ad9\u6a21\u5757\u7684\u4e00\u90e8\u5206\u5305\u542b\u5728\u5185\u3002\u4e4b\u540e\uff0c\u60a8\u5e94\u8be5\u5df2\u51c6\u5907\u597d\u5f00\u59cb\u6784\u5efa\u81ea\u5b9a\u4e49\u6a21\u5757\u3002\u60a8\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684[\u6a21\u677f\u6a21\u5757]\uff08https://github.com/OrchardCMS/OrchardCore/tree/dev/src/Templates/OrchardCore.Cms.Templates/content/OrchardCore.Templates.Module/\uff09\u83b7\u53d6\u57fa\u672c\u793a\u4f8b\u901a\u5e38\u9700\u8981\u3002","title":"Visual Studio\u7684\u65b0\u6a21\u5757\uff08\u624b\u52a8\u65b9\u5f0f\uff09"},{"location":"docs/templates/#create-a-new-theme","text":"","title":"Create a new theme"},{"location":"docs/templates/#_6","text":"","title":"\u521b\u5efa\u4e00\u4e2a\u65b0\u4e3b\u9898"},{"location":"docs/templates/#new-theme-from-command-shell-automated-way","text":"","title":"New theme From Command Shell (automated way)"},{"location":"docs/templates/#command-shell_1","text":"","title":"\u6765\u81eaCommand Shell\u7684\u65b0\u4e3b\u9898\uff08\u81ea\u52a8\u65b9\u5f0f\uff09"},{"location":"docs/templates/#theme-commands","text":"","title":"Theme commands"},{"location":"docs/templates/#_7","text":"dotnet new octheme -n \"ThemeName.OrchardCore\"","title":"\u4e3b\u9898\u547d\u4ee4"},{"location":"docs/templates/#new-theme-from-visual-studio-manual-way","text":"","title":"New theme from Visual Studio (manual way)"},{"location":"docs/templates/#visual-studio_2","text":"Should be the same procedure as with modules but instead we need to reference OrchardCore.Theme.Targets and Manifest.cs file slightly differ: \u5e94\u8be5\u662f\u4e0e\u6a21\u5757\u76f8\u540c\u7684\u8fc7\u7a0b\uff0c\u4f46\u6211\u4eec\u9700\u8981\u5f15\u7528OrchardCore.Theme.Targets\u548c Manifest.cs \u6587\u4ef6\u7565\u6709\u4e0d\u540c\uff1a using OrchardCore.DisplayManagement.Manifest; <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\u4f7f\u7528OrchardCore.DisplayManagement.Manifest;</font> <font color=#0099ff size=4 face=\"\u9ed1\u4f53\"></font> [assembly: Theme( <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">[\u96c6\u4f1a\uff1a\u4e3b\u9898\uff08</font> Name = \"TemplateTheme.OrchardCore\", Author = \"The Orchard Team\", Website = \"https://orchardproject.net\", Version = \"0.0.1\", Description = \"The TemplateTheme.\" )] <font color=#0099ff size=4 face=\"\u9ed1\u4f53\">\uff09]</font>","title":"Visual Studio\u7684\u65b0\u4e3b\u9898\uff08\u624b\u52a8\u65b9\u5f0f\uff09"},{"location":"docs/templates/#adding-orchard-core-nuget-feed","text":"","title":"Adding Orchard Core Nuget Feed"},{"location":"docs/templates/#nuget-feed","text":"In order to be able to use the dev feed from Visual Studio, open the Tools menu under Nuget Package Manager --> Package Manager Settings. \u4e3a\u4e86\u80fd\u591f\u4f7f\u7528Visual Studio\u4e2d\u7684__dev__\u63d0\u8981\uff0c\u8bf7\u6253\u5f00Nuget\u5305\u7ba1\u7406\u5668 - >\u5305\u7ba1\u7406\u5668\u8bbe\u7f6e\u4e0b\u7684\u201c\u5de5\u5177\u201d\u83dc\u5355\u3002 The feed url is https://www.myget.org/F/orchardcore-preview/api/v3/index.json Feed\u7f51\u5740\u4e3a https://www.myget.org/F/orchardcore-preview/api/v3/index.json","title":"\u6dfb\u52a0\u679c\u56ed\u6838\u5fc3Nuget Feed"}]}